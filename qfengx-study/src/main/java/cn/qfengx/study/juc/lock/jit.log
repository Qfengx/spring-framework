<?xml version='1.0' encoding='UTF-8'?>
<hotspot_log version='160 1' process='43523' time_ms='1682153425880'>
<vm_version>
<name>
OpenJDK 64-Bit Server VM
</name>
<release>
25.362-b09
</release>
<info>
OpenJDK 64-Bit Server VM (25.362-b09) for linux-amd64 JRE (1.8.0_362-b09), built on Jan 18 2023 17:48:03 by &quot;builduser&quot; with gcc 12.2.1 20230111
</info>
</vm_version>
<vm_arguments>
<args>
-XX:+UnlockDiagnosticVMOptions -XX:+PrintAssembly -XX:+LogCompilation -XX:LogFile=jit.log 
</args>
<command>
VolatileDemo
</command>
<launcher>
SUN_STANDARD
</launcher>
<properties>
java.vm.specification.name=Java Virtual Machine Specification
java.vm.version=25.362-b09
java.vm.name=OpenJDK 64-Bit Server VM
java.vm.info=mixed mode, sharing
java.ext.dirs=/usr/lib/jvm/java-8-openjdk/jre/lib/ext:/usr/java/packages/lib/ext
java.endorsed.dirs=/usr/lib/jvm/java-8-openjdk/jre/lib/endorsed
sun.boot.library.path=/usr/lib/jvm/java-8-openjdk/jre/lib/amd64
java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib
java.home=/usr/lib/jvm/java-8-openjdk/jre
java.class.path=.
sun.boot.class.path=/usr/lib/jvm/java-8-openjdk/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk/jre/classes
java.vm.specification.vendor=Oracle Corporation
java.vm.specification.version=1.8
java.vm.vendor=Oracle Corporation
sun.java.command=VolatileDemo
sun.java.launcher=SUN_STANDARD
</properties>
</vm_arguments>
<tty>
<writer thread='140668596909760'/>
<thread_logfile thread='140668596909760' filename='/tmp/hs_c140668596909760_pid43523.log'/>
<writer thread='140668595857088'/>
<thread_logfile thread='140668595857088' filename='/tmp/hs_c140668595857088_pid43523.log'/>
<writer thread='140668593751744'/>
<thread_logfile thread='140668593751744' filename='/tmp/hs_c140668593751744_pid43523.log'/>
<writer thread='140668594804416'/>
<thread_logfile thread='140668594804416' filename='/tmp/hs_c140668594804416_pid43523.log'/>
<writer thread='140668592699072'/>
<thread_logfile thread='140668592699072' filename='/tmp/hs_c140668592699072_pid43523.log'/>
<writer thread='140668591646400'/>
<thread_logfile thread='140668591646400' filename='/tmp/hs_c140668591646400_pid43523.log'/>
<writer thread='140668590593728'/>
<thread_logfile thread='140668590593728' filename='/tmp/hs_c140668590593728_pid43523.log'/>
<writer thread='140668589541056'/>
<thread_logfile thread='140668589541056' filename='/tmp/hs_c140668589541056_pid43523.log'/>
<writer thread='140668588488384'/>
<thread_logfile thread='140668588488384' filename='/tmp/hs_c140668588488384_pid43523.log'/>
<writer thread='140668587435712'/>
<thread_logfile thread='140668587435712' filename='/tmp/hs_c140668587435712_pid43523.log'/>
<writer thread='140668586383040'/>
<thread_logfile thread='140668586383040' filename='/tmp/hs_c140668586383040_pid43523.log'/>
<writer thread='140668585330368'/>
<thread_logfile thread='140668585330368' filename='/tmp/hs_c140668585330368_pid43523.log'/>
<writer thread='140669158946496'/>
<task_queued compile_id='1' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='1408' iicount='1408' level='3' stamp='0.040' comment='tiered' hot_count='1408'/>
<writer thread='140668588488384'/>
Loaded disassembler from /usr/lib/jvm/java-8-openjdk/jre/lib/amd64/server/hsdis-amd64.so
Decoding compiled method 0x00007ff0012a8c90:
Code:
[Disassembling for mach=&apos;i386:x86-64&apos;]
[Entry Point]
[Constants]
  # {method} {0x00007feffd423480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007ff0012a8e00: mov    0x8(%rsi),%r10d
  0x00007ff0012a8e04: shl    $0x3,%r10
  0x00007ff0012a8e08: cmp    %rax,%r10
  0x00007ff0012a8e0b: jne    0x00007ff001045ba0  ;   {runtime_call}
  0x00007ff0012a8e11: nopl   0x0(%rax,%rax,1)
  0x00007ff0012a8e19: nopl   0x0(%rax)
[Verified Entry Point]
  0x00007ff0012a8e20: mov    %eax,-0x14000(%rsp)
  0x00007ff0012a8e27: push   %rbp
  0x00007ff0012a8e28: sub    $0x30,%rsp
  0x00007ff0012a8e2c: movabs $0x7feffd59c9f0,%rdi  ;   {metadata(method data for {method} {0x00007feffd423480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007ff0012a8e36: mov    0xdc(%rdi),%ebx
  0x00007ff0012a8e3c: add    $0x8,%ebx
  0x00007ff0012a8e3f: mov    %ebx,0xdc(%rdi)
  0x00007ff0012a8e45: movabs $0x7feffd423480,%rdi  ;   {metadata({method} {0x00007feffd423480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007ff0012a8e4f: and    $0x1ff8,%ebx
  0x00007ff0012a8e55: cmp    $0x0,%ebx
  0x00007ff0012a8e58: je     0x00007ff0012a8e77
  0x00007ff0012a8e5e: mov    %rsi,%rdi          ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x00007ff0012a8e61: mov    %rsi,0x20(%rsp)
  0x00007ff0012a8e66: callq  0x00007ff0011870a0  ; OopMap{[32]=Oop off=107}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x00007ff0012a8e6b: add    $0x30,%rsp
  0x00007ff0012a8e6f: pop    %rbp
  0x00007ff0012a8e70: test   %eax,0x1727228a(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012a8e76: retq   
  0x00007ff0012a8e77: mov    %rdi,0x8(%rsp)
  0x00007ff0012a8e7c: movq   $0xffffffffffffffff,(%rsp)
  0x00007ff0012a8e84: callq  0x00007ff0012175e0  ; OopMap{rsi=Oop off=137}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ;   {runtime_call}
  0x00007ff0012a8e89: jmp    0x00007ff0012a8e5e
  0x00007ff0012a8e8b: nop
  0x00007ff0012a8e8c: nop
  0x00007ff0012a8e8d: mov    0x310(%r15),%rax
  0x00007ff0012a8e94: movabs $0x0,%r10
  0x00007ff0012a8e9e: mov    %r10,0x310(%r15)
  0x00007ff0012a8ea5: movabs $0x0,%r10
  0x00007ff0012a8eaf: mov    %r10,0x318(%r15)
  0x00007ff0012a8eb6: add    $0x30,%rsp
  0x00007ff0012a8eba: pop    %rbp
  0x00007ff0012a8ebb: jmpq   0x00007ff00106cba0  ;   {runtime_call}
[Exception Handler]
[Stub Code]
  0x00007ff0012a8ec0: callq  0x00007ff0012186e0  ;   {no_reloc}
  0x00007ff0012a8ec5: mov    %rsp,-0x28(%rsp)
  0x00007ff0012a8eca: sub    $0x80,%rsp
  0x00007ff0012a8ed1: mov    %rax,0x78(%rsp)
  0x00007ff0012a8ed6: mov    %rcx,0x70(%rsp)
  0x00007ff0012a8edb: mov    %rdx,0x68(%rsp)
  0x00007ff0012a8ee0: mov    %rbx,0x60(%rsp)
  0x00007ff0012a8ee5: mov    %rbp,0x50(%rsp)
  0x00007ff0012a8eea: mov    %rsi,0x48(%rsp)
  0x00007ff0012a8eef: mov    %rdi,0x40(%rsp)
  0x00007ff0012a8ef4: mov    %r8,0x38(%rsp)
  0x00007ff0012a8ef9: mov    %r9,0x30(%rsp)
  0x00007ff0012a8efe: mov    %r10,0x28(%rsp)
  0x00007ff0012a8f03: mov    %r11,0x20(%rsp)
  0x00007ff0012a8f08: mov    %r12,0x18(%rsp)
  0x00007ff0012a8f0d: mov    %r13,0x10(%rsp)
  0x00007ff0012a8f12: mov    %r14,0x8(%rsp)
  0x00007ff0012a8f17: mov    %r15,(%rsp)
  0x00007ff0012a8f1b: movabs $0x7ff017f80bfe,%rdi  ;   {external_word}
  0x00007ff0012a8f25: movabs $0x7ff0012a8ec5,%rsi  ;   {internal_word}
  0x00007ff0012a8f2f: mov    %rsp,%rdx
  0x00007ff0012a8f32: and    $0xfffffffffffffff0,%rsp
  0x00007ff0012a8f36: callq  0x00007ff017c8f7f0  ;   {runtime_call}
  0x00007ff0012a8f3b: hlt    
[Deopt Handler Code]
  0x00007ff0012a8f3c: movabs $0x7ff0012a8f3c,%r10  ;   {section_word}
  0x00007ff0012a8f46: push   %r10
  0x00007ff0012a8f48: jmpq   0x00007ff001046e40  ;   {runtime_call}
  0x00007ff0012a8f4d: hlt    
  0x00007ff0012a8f4e: hlt    
  0x00007ff0012a8f4f: hlt    
<nmethod compile_id='1' compiler='C1' level='3' entry='0x00007ff0012a8e00' size='832' address='0x00007ff0012a8c90' relocation_offset='296' insts_offset='368' stub_offset='560' scopes_data_offset='712' scopes_pcs_offset='744' dependencies_offset='824' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='1414' iicount='1414' stamp='0.042'/>
<blob name='MethodHandlesAdapterBlob' size='32000'>
<sect index='1' size='32000' free='31628'/>
</blob>
<writer thread='140669158946496'/>
<task_queued compile_id='2' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='330' backedge_count='1024' iicount='330' level='3' stamp='0.043' comment='tiered' hot_count='330'/>
<writer thread='140668587435712'/>
Decoding compiled method 0x00007ff0012a8290:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007feffd427618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007ff0012a8420: mov    0x8(%rsi),%r10d
  0x00007ff0012a8424: shl    $0x3,%r10
  0x00007ff0012a8428: cmp    %rax,%r10
  0x00007ff0012a842b: jne    0x00007ff001045ba0  ;   {runtime_call}
  0x00007ff0012a8431: nopl   0x0(%rax,%rax,1)
  0x00007ff0012a8439: nopl   0x0(%rax)
[Verified Entry Point]
  0x00007ff0012a8440: mov    %eax,-0x14000(%rsp)
  0x00007ff0012a8447: push   %rbp
  0x00007ff0012a8448: sub    $0x30,%rsp
  0x00007ff0012a844c: movabs $0x7feffd611640,%rax  ;   {metadata(method data for {method} {0x00007feffd427618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a8456: mov    0xdc(%rax),%edi
  0x00007ff0012a845c: add    $0x8,%edi
  0x00007ff0012a845f: mov    %edi,0xdc(%rax)
  0x00007ff0012a8465: movabs $0x7feffd427618,%rax  ;   {metadata({method} {0x00007feffd427618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a846f: and    $0x1ff8,%edi
  0x00007ff0012a8475: cmp    $0x0,%edi
  0x00007ff0012a8478: je     0x00007ff0012a8846  ;*aload_0
                                                ; - java.lang.String::equals@0 (line 977)

  0x00007ff0012a847e: cmp    %rdx,%rsi
  0x00007ff0012a8481: movabs $0x7feffd611640,%rax  ;   {metadata(method data for {method} {0x00007feffd427618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a848b: movabs $0x108,%rdi
  0x00007ff0012a8495: jne    0x00007ff0012a84a5
  0x00007ff0012a849b: movabs $0x118,%rdi
  0x00007ff0012a84a5: mov    (%rax,%rdi,1),%rbx
  0x00007ff0012a84a9: lea    0x1(%rbx),%rbx
  0x00007ff0012a84ad: mov    %rbx,(%rax,%rdi,1)
  0x00007ff0012a84b1: je     0x00007ff0012a8835  ;*if_acmpne
                                                ; - java.lang.String::equals@2 (line 977)

  0x00007ff0012a84b7: cmp    $0x0,%rdx
  0x00007ff0012a84bb: jne    0x00007ff0012a84d6
  0x00007ff0012a84bd: movabs $0x7feffd611640,%rbx  ;   {metadata(method data for {method} {0x00007feffd427618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a84c7: orl    $0x100,0x120(%rbx)
  0x00007ff0012a84d1: jmpq   0x00007ff0012a8596
  0x00007ff0012a84d6: movabs $0x7c00016d0,%rcx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00007ff0012a84e0: mov    0x8(%rdx),%edi
  0x00007ff0012a84e3: shl    $0x3,%rdi
  0x00007ff0012a84e7: cmp    %rdi,%rcx
  0x00007ff0012a84ea: jne    0x00007ff0012a857a
  0x00007ff0012a84f0: movabs $0x7feffd611640,%rbx  ;   {metadata(method data for {method} {0x00007feffd427618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a84fa: mov    0x8(%rdx),%ecx
  0x00007ff0012a84fd: shl    $0x3,%rcx
  0x00007ff0012a8501: cmp    0x130(%rbx),%rcx
  0x00007ff0012a8508: jne    0x00007ff0012a8517
  0x00007ff0012a850a: addq   $0x1,0x138(%rbx)
  0x00007ff0012a8512: jmpq   0x00007ff0012a859b
  0x00007ff0012a8517: cmp    0x140(%rbx),%rcx
  0x00007ff0012a851e: jne    0x00007ff0012a852d
  0x00007ff0012a8520: addq   $0x1,0x148(%rbx)
  0x00007ff0012a8528: jmpq   0x00007ff0012a859b
  0x00007ff0012a852d: cmpq   $0x0,0x130(%rbx)
  0x00007ff0012a8538: jne    0x00007ff0012a8551
  0x00007ff0012a853a: mov    %rcx,0x130(%rbx)
  0x00007ff0012a8541: movq   $0x1,0x138(%rbx)
  0x00007ff0012a854c: jmpq   0x00007ff0012a859b
  0x00007ff0012a8551: cmpq   $0x0,0x140(%rbx)
  0x00007ff0012a855c: jne    0x00007ff0012a8575
  0x00007ff0012a855e: mov    %rcx,0x140(%rbx)
  0x00007ff0012a8565: movq   $0x1,0x148(%rbx)
  0x00007ff0012a8570: jmpq   0x00007ff0012a859b
  0x00007ff0012a8575: jmpq   0x00007ff0012a859b
  0x00007ff0012a857a: movabs $0x7feffd611640,%rbx  ;   {metadata(method data for {method} {0x00007feffd427618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a8584: subq   $0x1,0x128(%rbx)
  0x00007ff0012a858c: jmpq   0x00007ff0012a8596
  0x00007ff0012a8591: jmpq   0x00007ff0012a859b
  0x00007ff0012a8596: xor    %rax,%rax
  0x00007ff0012a8599: jmp    0x00007ff0012a85a5
  0x00007ff0012a859b: movabs $0x1,%rax          ;*instanceof
                                                ; - java.lang.String::equals@8 (line 980)

  0x00007ff0012a85a5: cmp    $0x0,%eax
  0x00007ff0012a85a8: movabs $0x7feffd611640,%rax  ;   {metadata(method data for {method} {0x00007feffd427618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a85b2: movabs $0x158,%rdi
  0x00007ff0012a85bc: je     0x00007ff0012a85cc
  0x00007ff0012a85c2: movabs $0x168,%rdi
  0x00007ff0012a85cc: mov    (%rax,%rdi,1),%rbx
  0x00007ff0012a85d0: lea    0x1(%rbx),%rbx
  0x00007ff0012a85d4: mov    %rbx,(%rax,%rdi,1)
  0x00007ff0012a85d8: je     0x00007ff0012a8824  ;*ifeq
                                                ; - java.lang.String::equals@11 (line 980)

  0x00007ff0012a85de: cmp    $0x0,%rdx
  0x00007ff0012a85e2: jne    0x00007ff0012a85fd
  0x00007ff0012a85e4: movabs $0x7feffd611640,%rbx  ;   {metadata(method data for {method} {0x00007feffd427618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a85ee: orl    $0x100,0x170(%rbx)
  0x00007ff0012a85f8: jmpq   0x00007ff0012a86bd
  0x00007ff0012a85fd: movabs $0x7c00016d0,%rax  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00007ff0012a8607: mov    0x8(%rdx),%edi
  0x00007ff0012a860a: shl    $0x3,%rdi
  0x00007ff0012a860e: cmp    %rdi,%rax
  0x00007ff0012a8611: jne    0x00007ff0012a86a1
  0x00007ff0012a8617: movabs $0x7feffd611640,%rbx  ;   {metadata(method data for {method} {0x00007feffd427618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a8621: mov    0x8(%rdx),%eax
  0x00007ff0012a8624: shl    $0x3,%rax
  0x00007ff0012a8628: cmp    0x180(%rbx),%rax
  0x00007ff0012a862f: jne    0x00007ff0012a863e
  0x00007ff0012a8631: addq   $0x1,0x188(%rbx)
  0x00007ff0012a8639: jmpq   0x00007ff0012a86bd
  0x00007ff0012a863e: cmp    0x190(%rbx),%rax
  0x00007ff0012a8645: jne    0x00007ff0012a8654
  0x00007ff0012a8647: addq   $0x1,0x198(%rbx)
  0x00007ff0012a864f: jmpq   0x00007ff0012a86bd
  0x00007ff0012a8654: cmpq   $0x0,0x180(%rbx)
  0x00007ff0012a865f: jne    0x00007ff0012a8678
  0x00007ff0012a8661: mov    %rax,0x180(%rbx)
  0x00007ff0012a8668: movq   $0x1,0x188(%rbx)
  0x00007ff0012a8673: jmpq   0x00007ff0012a86bd
  0x00007ff0012a8678: cmpq   $0x0,0x190(%rbx)
  0x00007ff0012a8683: jne    0x00007ff0012a869c
  0x00007ff0012a8685: mov    %rax,0x190(%rbx)
  0x00007ff0012a868c: movq   $0x1,0x198(%rbx)
  0x00007ff0012a8697: jmpq   0x00007ff0012a86bd
  0x00007ff0012a869c: jmpq   0x00007ff0012a86bd
  0x00007ff0012a86a1: movabs $0x7feffd611640,%rbx  ;   {metadata(method data for {method} {0x00007feffd427618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a86ab: subq   $0x1,0x178(%rbx)
  0x00007ff0012a86b3: jmpq   0x00007ff0012a885d
  0x00007ff0012a86b8: jmpq   0x00007ff0012a86bd
  0x00007ff0012a86bd: mov    %rdx,%rax          ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)

  0x00007ff0012a86c0: mov    0xc(%rsi),%esi
  0x00007ff0012a86c3: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::equals@20 (line 982)

  0x00007ff0012a86c7: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ; implicit exception: dispatches to 0x00007ff0012a8866
  0x00007ff0012a86ca: mov    0xc(%rax),%eax     ; implicit exception: dispatches to 0x00007ff0012a886b
  0x00007ff0012a86cd: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)

  0x00007ff0012a86d1: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ; implicit exception: dispatches to 0x00007ff0012a8870
  0x00007ff0012a86d4: cmp    %ebx,%edi
  0x00007ff0012a86d6: movabs $0x7feffd611640,%rbx  ;   {metadata(method data for {method} {0x00007feffd427618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a86e0: movabs $0x1a8,%rdx
  0x00007ff0012a86ea: jne    0x00007ff0012a86fa
  0x00007ff0012a86f0: movabs $0x1b8,%rdx
  0x00007ff0012a86fa: mov    (%rbx,%rdx,1),%rcx
  0x00007ff0012a86fe: lea    0x1(%rcx),%rcx
  0x00007ff0012a8702: mov    %rcx,(%rbx,%rdx,1)
  0x00007ff0012a8706: jne    0x00007ff0012a8824  ;*if_icmpne
                                                ; - java.lang.String::equals@31 (line 983)

  0x00007ff0012a870c: mov    $0x0,%ebx
  0x00007ff0012a8711: jmpq   0x00007ff0012a87bf  ;*iload_3
                                                ; - java.lang.String::equals@49 (line 987)

  0x00007ff0012a8716: xchg   %ax,%ax
  0x00007ff0012a8718: movslq %ebx,%rdi
  0x00007ff0012a871b: cmp    0xc(%rsi),%ebx
  0x00007ff0012a871e: jae    0x00007ff0012a8875
  0x00007ff0012a8724: movzwl 0x10(%rsi,%rdi,2),%edi  ;*caload
                                                ; - java.lang.String::equals@60 (line 988)

  0x00007ff0012a8729: movslq %ebx,%rcx
  0x00007ff0012a872c: cmp    0xc(%rax),%ebx
  0x00007ff0012a872f: jae    0x00007ff0012a887e
  0x00007ff0012a8735: movzwl 0x10(%rax,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::equals@65 (line 988)

  0x00007ff0012a873a: cmp    %ecx,%edi
  0x00007ff0012a873c: movabs $0x7feffd611640,%rdi  ;   {metadata(method data for {method} {0x00007feffd427618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a8746: movabs $0x1e8,%rcx
  0x00007ff0012a8750: je     0x00007ff0012a8760
  0x00007ff0012a8756: movabs $0x1f8,%rcx
  0x00007ff0012a8760: mov    (%rdi,%rcx,1),%r8
  0x00007ff0012a8764: lea    0x1(%r8),%r8
  0x00007ff0012a8768: mov    %r8,(%rdi,%rcx,1)
  0x00007ff0012a876c: jne    0x00007ff0012a8802  ;*if_icmpeq
                                                ; - java.lang.String::equals@66 (line 988)

  0x00007ff0012a8772: inc    %ebx
  0x00007ff0012a8774: movabs $0x7feffd611640,%rdi  ;   {metadata(method data for {method} {0x00007feffd427618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a877e: mov    0xe0(%rdi),%ecx
  0x00007ff0012a8784: add    $0x8,%ecx
  0x00007ff0012a8787: mov    %ecx,0xe0(%rdi)
  0x00007ff0012a878d: movabs $0x7feffd427618,%rdi  ;   {metadata({method} {0x00007feffd427618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a8797: and    $0xfff8,%ecx
  0x00007ff0012a879d: cmp    $0x0,%ecx
  0x00007ff0012a87a0: je     0x00007ff0012a8887  ; OopMap{rax=Oop rsi=Oop off=902}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x00007ff0012a87a6: test   %eax,0x17272954(%rip)        # 0x00007ff01851b100
                                                ;   {poll}
  0x00007ff0012a87ac: movabs $0x7feffd611640,%rdi  ;   {metadata(method data for {method} {0x00007feffd427618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a87b6: incl   0x208(%rdi)
  0x00007ff0012a87bc: mov    %rdx,%rdi          ;*goto
                                                ; - java.lang.String::equals@74 (line 990)

  0x00007ff0012a87bf: mov    %rdi,%rdx
  0x00007ff0012a87c2: dec    %edx
  0x00007ff0012a87c4: cmp    $0x0,%edi
  0x00007ff0012a87c7: movabs $0x7feffd611640,%rdi  ;   {metadata(method data for {method} {0x00007feffd427618} &apos;equals&apos; &apos;(Ljava/lang/Object;)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a87d1: movabs $0x1c8,%rcx
  0x00007ff0012a87db: je     0x00007ff0012a87eb
  0x00007ff0012a87e1: movabs $0x1d8,%rcx
  0x00007ff0012a87eb: mov    (%rdi,%rcx,1),%r8
  0x00007ff0012a87ef: lea    0x1(%r8),%r8
  0x00007ff0012a87f3: mov    %r8,(%rdi,%rcx,1)
  0x00007ff0012a87f7: je     0x00007ff0012a8813
  0x00007ff0012a87fd: jmpq   0x00007ff0012a8718  ;*ifeq
                                                ; - java.lang.String::equals@53 (line 987)

  0x00007ff0012a8802: mov    $0x0,%eax
  0x00007ff0012a8807: add    $0x30,%rsp
  0x00007ff0012a880b: pop    %rbp
  0x00007ff0012a880c: test   %eax,0x172728ee(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012a8812: retq                      ;*ireturn
                                                ; - java.lang.String::equals@70 (line 989)

  0x00007ff0012a8813: mov    $0x1,%eax
  0x00007ff0012a8818: add    $0x30,%rsp
  0x00007ff0012a881c: pop    %rbp
  0x00007ff0012a881d: test   %eax,0x172728dd(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012a8823: retq                      ;*ireturn
                                                ; - java.lang.String::equals@78 (line 992)

  0x00007ff0012a8824: mov    $0x0,%eax
  0x00007ff0012a8829: add    $0x30,%rsp
  0x00007ff0012a882d: pop    %rbp
  0x00007ff0012a882e: test   %eax,0x172728cc(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012a8834: retq                      ;*ireturn
                                                ; - java.lang.String::equals@80 (line 995)

  0x00007ff0012a8835: mov    $0x1,%eax
  0x00007ff0012a883a: add    $0x30,%rsp
  0x00007ff0012a883e: pop    %rbp
  0x00007ff0012a883f: test   %eax,0x172728bb(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012a8845: retq   
  0x00007ff0012a8846: mov    %rax,0x8(%rsp)
  0x00007ff0012a884b: movq   $0xffffffffffffffff,(%rsp)
  0x00007ff0012a8853: callq  0x00007ff0012175e0  ; OopMap{rsi=Oop rdx=Oop off=1080}
                                                ;*synchronization entry
                                                ; - java.lang.String::equals@-1 (line 977)
                                                ;   {runtime_call}
  0x00007ff0012a8858: jmpq   0x00007ff0012a847e
  0x00007ff0012a885d: mov    %rdx,(%rsp)
  0x00007ff0012a8861: callq  0x00007ff001218a40  ; OopMap{rsi=Oop off=1094}
                                                ;*checkcast
                                                ; - java.lang.String::equals@15 (line 981)
                                                ;   {runtime_call}
  0x00007ff0012a8866: callq  0x00007ff001186e80  ; OopMap{rax=Oop rsi=Oop off=1099}
                                                ;*arraylength
                                                ; - java.lang.String::equals@23 (line 982)
                                                ;   {runtime_call}
  0x00007ff0012a886b: callq  0x00007ff001186e80  ; OopMap{rsi=Oop off=1104}
                                                ;*getfield value
                                                ; - java.lang.String::equals@27 (line 983)
                                                ;   {runtime_call}
  0x00007ff0012a8870: callq  0x00007ff001186e80  ; OopMap{rsi=Oop rax=Oop off=1109}
                                                ;*arraylength
                                                ; - java.lang.String::equals@30 (line 983)
                                                ;   {runtime_call}
  0x00007ff0012a8875: mov    %rbx,(%rsp)
  0x00007ff0012a8879: callq  0x00007ff00106c700  ; OopMap{rax=Oop rsi=Oop off=1118}
                                                ;*caload
                                                ; - java.lang.String::equals@60 (line 988)
                                                ;   {runtime_call}
  0x00007ff0012a887e: mov    %rbx,(%rsp)
  0x00007ff0012a8882: callq  0x00007ff00106c700  ; OopMap{rax=Oop rsi=Oop off=1127}
                                                ;*caload
                                                ; - java.lang.String::equals@65 (line 988)
                                                ;   {runtime_call}
  0x00007ff0012a8887: mov    %rdi,0x8(%rsp)
  0x00007ff0012a888c: movq   $0x4a,(%rsp)
  0x00007ff0012a8894: callq  0x00007ff0012175e0  ; OopMap{rax=Oop rsi=Oop off=1145}
                                                ;*goto
                                                ; - java.lang.String::equals@74 (line 990)
                                                ;   {runtime_call}
  0x00007ff0012a8899: jmpq   0x00007ff0012a87a6
  0x00007ff0012a889e: nop
  0x00007ff0012a889f: nop
  0x00007ff0012a88a0: mov    0x310(%r15),%rax
  0x00007ff0012a88a7: movabs $0x0,%r10
  0x00007ff0012a88b1: mov    %r10,0x310(%r15)
  0x00007ff0012a88b8: movabs $0x0,%r10
  0x00007ff0012a88c2: mov    %r10,0x318(%r15)
  0x00007ff0012a88c9: add    $0x30,%rsp
  0x00007ff0012a88cd: pop    %rbp
  0x00007ff0012a88ce: jmpq   0x00007ff00106cba0  ;   {runtime_call}
  0x00007ff0012a88d3: hlt    
  0x00007ff0012a88d4: hlt    
  0x00007ff0012a88d5: hlt    
  0x00007ff0012a88d6: hlt    
  0x00007ff0012a88d7: hlt    
  0x00007ff0012a88d8: hlt    
  0x00007ff0012a88d9: hlt    
  0x00007ff0012a88da: hlt    
  0x00007ff0012a88db: hlt    
  0x00007ff0012a88dc: hlt    
  0x00007ff0012a88dd: hlt    
  0x00007ff0012a88de: hlt    
  0x00007ff0012a88df: hlt    
[Exception Handler]
[Stub Code]
  0x00007ff0012a88e0: callq  0x00007ff0012186e0  ;   {no_reloc}
  0x00007ff0012a88e5: mov    %rsp,-0x28(%rsp)
  0x00007ff0012a88ea: sub    $0x80,%rsp
  0x00007ff0012a88f1: mov    %rax,0x78(%rsp)
  0x00007ff0012a88f6: mov    %rcx,0x70(%rsp)
  0x00007ff0012a88fb: mov    %rdx,0x68(%rsp)
  0x00007ff0012a8900: mov    %rbx,0x60(%rsp)
  0x00007ff0012a8905: mov    %rbp,0x50(%rsp)
  0x00007ff0012a890a: mov    %rsi,0x48(%rsp)
  0x00007ff0012a890f: mov    %rdi,0x40(%rsp)
  0x00007ff0012a8914: mov    %r8,0x38(%rsp)
  0x00007ff0012a8919: mov    %r9,0x30(%rsp)
  0x00007ff0012a891e: mov    %r10,0x28(%rsp)
  0x00007ff0012a8923: mov    %r11,0x20(%rsp)
  0x00007ff0012a8928: mov    %r12,0x18(%rsp)
  0x00007ff0012a892d: mov    %r13,0x10(%rsp)
  0x00007ff0012a8932: mov    %r14,0x8(%rsp)
  0x00007ff0012a8937: mov    %r15,(%rsp)
  0x00007ff0012a893b: movabs $0x7ff017f80bfe,%rdi  ;   {external_word}
  0x00007ff0012a8945: movabs $0x7ff0012a88e5,%rsi  ;   {internal_word}
  0x00007ff0012a894f: mov    %rsp,%rdx
  0x00007ff0012a8952: and    $0xfffffffffffffff0,%rsp
  0x00007ff0012a8956: callq  0x00007ff017c8f7f0  ;   {runtime_call}
  0x00007ff0012a895b: hlt    
[Deopt Handler Code]
  0x00007ff0012a895c: movabs $0x7ff0012a895c,%r10  ;   {section_word}
  0x00007ff0012a8966: push   %r10
  0x00007ff0012a8968: jmpq   0x00007ff001046e40  ;   {runtime_call}
  0x00007ff0012a896d: hlt    
  0x00007ff0012a896e: hlt    
  0x00007ff0012a896f: hlt    
<nmethod compile_id='2' compiler='C1' level='3' entry='0x00007ff0012a8420' size='2504' address='0x00007ff0012a8290' relocation_offset='296' insts_offset='400' stub_offset='1616' scopes_data_offset='1768' scopes_pcs_offset='1984' dependencies_offset='2464' nul_chk_table_offset='2472' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='353' backedge_count='1192' iicount='353' stamp='0.053'/>
<writer thread='140669158946496'/>
<task_queued compile_id='3' method='java/lang/String hashCode ()I' bytes='55' count='395' backedge_count='5120' iicount='395' level='3' stamp='0.053' comment='tiered' hot_count='395'/>
<writer thread='140668587435712'/>
Decoding compiled method 0x00007ff0012a6550:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007feffd428000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007ff0012a66c0: mov    0x8(%rsi),%r10d
  0x00007ff0012a66c4: shl    $0x3,%r10
  0x00007ff0012a66c8: cmp    %rax,%r10
  0x00007ff0012a66cb: jne    0x00007ff001045ba0  ;   {runtime_call}
  0x00007ff0012a66d1: nopl   0x0(%rax,%rax,1)
  0x00007ff0012a66d9: nopl   0x0(%rax)
[Verified Entry Point]
  0x00007ff0012a66e0: mov    %eax,-0x14000(%rsp)
  0x00007ff0012a66e7: push   %rbp
  0x00007ff0012a66e8: sub    $0x30,%rsp
  0x00007ff0012a66ec: movabs $0x7feffd5f9270,%rax  ;   {metadata(method data for {method} {0x00007feffd428000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a66f6: mov    0xdc(%rax),%edi
  0x00007ff0012a66fc: add    $0x8,%edi
  0x00007ff0012a66ff: mov    %edi,0xdc(%rax)
  0x00007ff0012a6705: movabs $0x7feffd428000,%rax  ;   {metadata({method} {0x00007feffd428000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a670f: and    $0x1ff8,%edi
  0x00007ff0012a6715: cmp    $0x0,%edi
  0x00007ff0012a6718: je     0x00007ff0012a6851  ;*aload_0
                                                ; - java.lang.String::hashCode@0 (line 1466)

  0x00007ff0012a671e: mov    0x10(%rsi),%eax    ;*getfield hash
                                                ; - java.lang.String::hashCode@1 (line 1466)

  0x00007ff0012a6721: cmp    $0x0,%eax
  0x00007ff0012a6724: movabs $0x7feffd5f9270,%rdi  ;   {metadata(method data for {method} {0x00007feffd428000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a672e: movabs $0x108,%rbx
  0x00007ff0012a6738: jne    0x00007ff0012a6748
  0x00007ff0012a673e: movabs $0x118,%rbx
  0x00007ff0012a6748: mov    (%rdi,%rbx,1),%rdx
  0x00007ff0012a674c: lea    0x1(%rdx),%rdx
  0x00007ff0012a6750: mov    %rdx,(%rdi,%rbx,1)
  0x00007ff0012a6754: jne    0x00007ff0012a6845  ;*ifne
                                                ; - java.lang.String::hashCode@6 (line 1467)

  0x00007ff0012a675a: mov    0xc(%rsi),%edi
  0x00007ff0012a675d: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::hashCode@10 (line 1467)

  0x00007ff0012a6761: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ; implicit exception: dispatches to 0x00007ff0012a6868
  0x00007ff0012a6764: cmp    $0x0,%ebx
  0x00007ff0012a6767: movabs $0x7feffd5f9270,%rdx  ;   {metadata(method data for {method} {0x00007feffd428000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a6771: movabs $0x128,%rcx
  0x00007ff0012a677b: jle    0x00007ff0012a678b
  0x00007ff0012a6781: movabs $0x138,%rcx
  0x00007ff0012a678b: mov    (%rdx,%rcx,1),%r8
  0x00007ff0012a678f: lea    0x1(%r8),%r8
  0x00007ff0012a6793: mov    %r8,(%rdx,%rcx,1)
  0x00007ff0012a6797: jle    0x00007ff0012a6845  ;*ifle
                                                ; - java.lang.String::hashCode@14 (line 1467)

  0x00007ff0012a679d: mov    $0x0,%edx
  0x00007ff0012a67a2: jmpq   0x00007ff0012a680a  ;*iload_3
                                                ; - java.lang.String::hashCode@24 (line 1470)

  0x00007ff0012a67a7: nop
  0x00007ff0012a67a8: movslq %edx,%rcx
  0x00007ff0012a67ab: movzwl 0x10(%rdi,%rcx,2),%ecx  ;*caload
                                                ; - java.lang.String::hashCode@39 (line 1471)

  0x00007ff0012a67b0: mov    %rax,%r8
  0x00007ff0012a67b3: shl    $0x5,%eax
  0x00007ff0012a67b6: sub    %r8d,%eax
  0x00007ff0012a67b9: add    %ecx,%eax
  0x00007ff0012a67bb: inc    %edx
  0x00007ff0012a67bd: movabs $0x7feffd5f9270,%rcx  ;   {metadata(method data for {method} {0x00007feffd428000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a67c7: mov    0xe0(%rcx),%r8d
  0x00007ff0012a67ce: add    $0x8,%r8d
  0x00007ff0012a67d2: mov    %r8d,0xe0(%rcx)
  0x00007ff0012a67d9: movabs $0x7feffd428000,%rcx  ;   {metadata({method} {0x00007feffd428000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a67e3: and    $0xfff8,%r8d
  0x00007ff0012a67ea: cmp    $0x0,%r8d
  0x00007ff0012a67ee: je     0x00007ff0012a686d  ; OopMap{rdi=Oop rsi=Oop off=308}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x00007ff0012a67f4: test   %eax,0x17274906(%rip)        # 0x00007ff01851b100
                                                ;   {poll}
  0x00007ff0012a67fa: movabs $0x7feffd5f9270,%rcx  ;   {metadata(method data for {method} {0x00007feffd428000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a6804: incl   0x168(%rcx)        ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)

  0x00007ff0012a680a: cmp    %ebx,%edx
  0x00007ff0012a680c: movabs $0x7feffd5f9270,%rcx  ;   {metadata(method data for {method} {0x00007feffd428000} &apos;hashCode&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a6816: movabs $0x148,%r8
  0x00007ff0012a6820: jge    0x00007ff0012a6830
  0x00007ff0012a6826: movabs $0x158,%r8
  0x00007ff0012a6830: mov    (%rcx,%r8,1),%r9
  0x00007ff0012a6834: lea    0x1(%r9),%r9
  0x00007ff0012a6838: mov    %r9,(%rcx,%r8,1)
  0x00007ff0012a683c: jl     0x00007ff0012a67a8  ;*if_icmpge
                                                ; - java.lang.String::hashCode@30 (line 1470)

  0x00007ff0012a6842: mov    %eax,0x10(%rsi)    ;*putfield hash
                                                ; - java.lang.String::hashCode@50 (line 1473)

  0x00007ff0012a6845: add    $0x30,%rsp
  0x00007ff0012a6849: pop    %rbp
  0x00007ff0012a684a: test   %eax,0x172748b0(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012a6850: retq   
  0x00007ff0012a6851: mov    %rax,0x8(%rsp)
  0x00007ff0012a6856: movq   $0xffffffffffffffff,(%rsp)
  0x00007ff0012a685e: callq  0x00007ff0012175e0  ; OopMap{rsi=Oop off=419}
                                                ;*synchronization entry
                                                ; - java.lang.String::hashCode@-1 (line 1466)
                                                ;   {runtime_call}
  0x00007ff0012a6863: jmpq   0x00007ff0012a671e
  0x00007ff0012a6868: callq  0x00007ff001186e80  ; OopMap{rsi=Oop rdi=Oop off=429}
                                                ;*arraylength
                                                ; - java.lang.String::hashCode@13 (line 1467)
                                                ;   {runtime_call}
  0x00007ff0012a686d: mov    %rcx,0x8(%rsp)
  0x00007ff0012a6872: movq   $0x2d,(%rsp)
  0x00007ff0012a687a: callq  0x00007ff0012175e0  ; OopMap{rdi=Oop rsi=Oop off=447}
                                                ;*goto
                                                ; - java.lang.String::hashCode@45 (line 1470)
                                                ;   {runtime_call}
  0x00007ff0012a687f: jmpq   0x00007ff0012a67f4
  0x00007ff0012a6884: nop
  0x00007ff0012a6885: nop
  0x00007ff0012a6886: mov    0x310(%r15),%rax
  0x00007ff0012a688d: movabs $0x0,%r10
  0x00007ff0012a6897: mov    %r10,0x310(%r15)
  0x00007ff0012a689e: movabs $0x0,%r10
  0x00007ff0012a68a8: mov    %r10,0x318(%r15)
  0x00007ff0012a68af: add    $0x30,%rsp
  0x00007ff0012a68b3: pop    %rbp
  0x00007ff0012a68b4: jmpq   0x00007ff00106cba0  ;   {runtime_call}
  0x00007ff0012a68b9: hlt    
  0x00007ff0012a68ba: hlt    
  0x00007ff0012a68bb: hlt    
  0x00007ff0012a68bc: hlt    
  0x00007ff0012a68bd: hlt    
  0x00007ff0012a68be: hlt    
  0x00007ff0012a68bf: hlt    
[Exception Handler]
[Stub Code]
  0x00007ff0012a68c0: callq  0x00007ff0012186e0  ;   {no_reloc}
  0x00007ff0012a68c5: mov    %rsp,-0x28(%rsp)
  0x00007ff0012a68ca: sub    $0x80,%rsp
  0x00007ff0012a68d1: mov    %rax,0x78(%rsp)
  0x00007ff0012a68d6: mov    %rcx,0x70(%rsp)
  0x00007ff0012a68db: mov    %rdx,0x68(%rsp)
  0x00007ff0012a68e0: mov    %rbx,0x60(%rsp)
  0x00007ff0012a68e5: mov    %rbp,0x50(%rsp)
  0x00007ff0012a68ea: mov    %rsi,0x48(%rsp)
  0x00007ff0012a68ef: mov    %rdi,0x40(%rsp)
  0x00007ff0012a68f4: mov    %r8,0x38(%rsp)
  0x00007ff0012a68f9: mov    %r9,0x30(%rsp)
  0x00007ff0012a68fe: mov    %r10,0x28(%rsp)
  0x00007ff0012a6903: mov    %r11,0x20(%rsp)
  0x00007ff0012a6908: mov    %r12,0x18(%rsp)
  0x00007ff0012a690d: mov    %r13,0x10(%rsp)
  0x00007ff0012a6912: mov    %r14,0x8(%rsp)
  0x00007ff0012a6917: mov    %r15,(%rsp)
  0x00007ff0012a691b: movabs $0x7ff017f80bfe,%rdi  ;   {external_word}
  0x00007ff0012a6925: movabs $0x7ff0012a68c5,%rsi  ;   {internal_word}
  0x00007ff0012a692f: mov    %rsp,%rdx
  0x00007ff0012a6932: and    $0xfffffffffffffff0,%rsp
  0x00007ff0012a6936: callq  0x00007ff017c8f7f0  ;   {runtime_call}
  0x00007ff0012a693b: hlt    
[Deopt Handler Code]
  0x00007ff0012a693c: movabs $0x7ff0012a693c,%r10  ;   {section_word}
  0x00007ff0012a6946: push   %r10
  0x00007ff0012a6948: jmpq   0x00007ff001046e40  ;   {runtime_call}
  0x00007ff0012a694d: hlt    
  0x00007ff0012a694e: hlt    
  0x00007ff0012a694f: hlt    
<nmethod compile_id='3' compiler='C1' level='3' entry='0x00007ff0012a66c0' size='1448' address='0x00007ff0012a6550' relocation_offset='296' insts_offset='368' stub_offset='880' scopes_data_offset='1032' scopes_pcs_offset='1152' dependencies_offset='1424' nul_chk_table_offset='1432' method='java/lang/String hashCode ()I' bytes='55' count='398' backedge_count='5201' iicount='398' stamp='0.076'/>
<writer thread='140669158946496'/>
<task_queued compile_id='4' method='java/lang/Math min (II)I' bytes='11' count='512' iicount='512' level='3' stamp='0.078' comment='tiered' hot_count='512'/>
Decoding compiled method 0x00007ff0012a7ad0:
Code:
[Entry Point]
  # {method} {0x00007feffd43c898} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/Object&apos;
  # parm1:    rdx       = int
  # parm2:    rcx:rcx   = &apos;java/lang/Object&apos;
  # parm3:    r8        = int
  # parm4:    r9        = int
  #           [sp+0x60]  (sp of caller)
  0x00007ff0012a7c40: mov    0x8(%rsi),%r10d
  0x00007ff0012a7c44: shl    $0x3,%r10
  0x00007ff0012a7c48: cmp    %r10,%rax
  0x00007ff0012a7c4b: je     0x00007ff0012a7c58
  0x00007ff0012a7c51: jmpq   0x00007ff001045ba0  ;   {runtime_call}
  0x00007ff0012a7c56: xchg   %ax,%ax
[Verified Entry Point]
  0x00007ff0012a7c58: mov    %eax,-0x14000(%rsp)
  0x00007ff0012a7c5f: push   %rbp
  0x00007ff0012a7c60: mov    %rsp,%rbp
  0x00007ff0012a7c63: sub    $0x50,%rsp
  0x00007ff0012a7c67: mov    %r9,(%rsp)
  0x00007ff0012a7c6b: mov    %r8,%r9
  0x00007ff0012a7c6e: mov    %rcx,0x18(%rsp)
  0x00007ff0012a7c73: cmp    $0x0,%rcx
  0x00007ff0012a7c77: lea    0x18(%rsp),%r8
  0x00007ff0012a7c7c: cmove  0x18(%rsp),%r8
  0x00007ff0012a7c82: mov    %rdx,%rcx
  0x00007ff0012a7c85: mov    %rsi,0x8(%rsp)
  0x00007ff0012a7c8a: cmp    $0x0,%rsi
  0x00007ff0012a7c8e: lea    0x8(%rsp),%rdx
  0x00007ff0012a7c93: cmove  0x8(%rsp),%rdx
  0x00007ff0012a7c99: movabs $0x674180c78,%r14  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00007ff0012a7ca3: mov    %r14,0x38(%rsp)
  0x00007ff0012a7ca8: lea    0x38(%rsp),%r14
  0x00007ff0012a7cad: mov    %r14,%rsi          ; OopMap{[24]=Oop [8]=Oop [56]=Oop off=112}
  0x00007ff0012a7cb0: movabs $0x7ff0012a7cb0,%r10  ;   {section_word}
  0x00007ff0012a7cba: mov    %r10,0x248(%r15)
  0x00007ff0012a7cc1: mov    %rsp,0x240(%r15)
  0x00007ff0012a7cc8: cmpb   $0x0,0x16f4189d(%rip)        # 0x00007ff0181e956c
                                                ;   {external_word}
  0x00007ff0012a7ccf: je     0x00007ff0012a7d13
  0x00007ff0012a7cd5: push   %rsi
  0x00007ff0012a7cd6: push   %rdx
  0x00007ff0012a7cd7: push   %rcx
  0x00007ff0012a7cd8: push   %r8
  0x00007ff0012a7cda: push   %r9
  0x00007ff0012a7cdc: movabs $0x7feffd43c898,%rsi  ;   {metadata({method} {0x00007feffd43c898} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x00007ff0012a7ce6: mov    %r15,%rdi
  0x00007ff0012a7ce9: test   $0xf,%esp
  0x00007ff0012a7cef: je     0x00007ff0012a7d07
  0x00007ff0012a7cf5: sub    $0x8,%rsp
  0x00007ff0012a7cf9: callq  0x00007ff017e26c00  ;   {runtime_call}
  0x00007ff0012a7cfe: add    $0x8,%rsp
  0x00007ff0012a7d02: jmpq   0x00007ff0012a7d0c
  0x00007ff0012a7d07: callq  0x00007ff017e26c00  ;   {runtime_call}
  0x00007ff0012a7d0c: pop    %r9
  0x00007ff0012a7d0e: pop    %r8
  0x00007ff0012a7d10: pop    %rcx
  0x00007ff0012a7d11: pop    %rdx
  0x00007ff0012a7d12: pop    %rsi
  0x00007ff0012a7d13: lea    0x260(%r15),%rdi
  0x00007ff0012a7d1a: movl   $0x4,0x2d8(%r15)
  0x00007ff0012a7d25: callq  0x00007ff017b45400  ;   {runtime_call}
  0x00007ff0012a7d2a: vzeroupper 
  0x00007ff0012a7d2d: movl   $0x5,0x2d8(%r15)
  0x00007ff0012a7d38: mov    %r15d,%ecx
  0x00007ff0012a7d3b: shr    $0x4,%ecx
  0x00007ff0012a7d3e: and    $0xffc,%ecx
  0x00007ff0012a7d44: movabs $0x7ff01851a000,%r10  ;   {external_word}
  0x00007ff0012a7d4e: mov    %ecx,(%r10,%rcx,1)
  0x00007ff0012a7d52: cmpl   $0x0,0x16f4ec30(%rip)        # 0x00007ff0181f698c
                                                ;   {external_word}
  0x00007ff0012a7d5c: jne    0x00007ff0012a7d70
  0x00007ff0012a7d62: cmpl   $0x0,0x30(%r15)
  0x00007ff0012a7d6a: je     0x00007ff0012a7d89
  0x00007ff0012a7d70: mov    %r15,%rdi
  0x00007ff0012a7d73: mov    %rsp,%r12
  0x00007ff0012a7d76: sub    $0x0,%rsp
  0x00007ff0012a7d7a: and    $0xfffffffffffffff0,%rsp
  0x00007ff0012a7d7e: callq  0x00007ff017ed1ee0  ;   {runtime_call}
  0x00007ff0012a7d83: mov    %r12,%rsp
  0x00007ff0012a7d86: xor    %r12,%r12
  0x00007ff0012a7d89: movl   $0x8,0x2d8(%r15)
  0x00007ff0012a7d94: cmpl   $0x1,0x304(%r15)
  0x00007ff0012a7d9f: je     0x00007ff0012a7e27
  0x00007ff0012a7da5: cmpb   $0x0,0x16f417c0(%rip)        # 0x00007ff0181e956c
                                                ;   {external_word}
  0x00007ff0012a7dac: je     0x00007ff0012a7de2
  0x00007ff0012a7db2: movabs $0x7feffd43c898,%rsi  ;   {metadata({method} {0x00007feffd43c898} &apos;arraycopy&apos; &apos;(Ljava/lang/Object;ILjava/lang/Object;II)V&apos; in &apos;java/lang/System&apos;)}
  0x00007ff0012a7dbc: mov    %r15,%rdi
  0x00007ff0012a7dbf: test   $0xf,%esp
  0x00007ff0012a7dc5: je     0x00007ff0012a7ddd
  0x00007ff0012a7dcb: sub    $0x8,%rsp
  0x00007ff0012a7dcf: callq  0x00007ff017e26cb0  ;   {runtime_call}
  0x00007ff0012a7dd4: add    $0x8,%rsp
  0x00007ff0012a7dd8: jmpq   0x00007ff0012a7de2
  0x00007ff0012a7ddd: callq  0x00007ff017e26cb0  ;   {runtime_call}
  0x00007ff0012a7de2: movabs $0x0,%r10
  0x00007ff0012a7dec: mov    %r10,0x240(%r15)
  0x00007ff0012a7df3: movabs $0x0,%r10
  0x00007ff0012a7dfd: mov    %r10,0x248(%r15)
  0x00007ff0012a7e04: mov    0x38(%r15),%rcx
  0x00007ff0012a7e08: movl   $0x0,0x100(%rcx)
  0x00007ff0012a7e12: leaveq 
  0x00007ff0012a7e13: cmpq   $0x0,0x8(%r15)
  0x00007ff0012a7e1b: jne    0x00007ff0012a7e22
  0x00007ff0012a7e21: retq   
  0x00007ff0012a7e22: jmpq   Stub::forward exception  ;   {runtime_call}
  0x00007ff0012a7e27: mov    %rsp,%r12
  0x00007ff0012a7e2a: sub    $0x0,%rsp
  0x00007ff0012a7e2e: and    $0xfffffffffffffff0,%rsp
  0x00007ff0012a7e32: callq  0x00007ff017e27230  ;   {runtime_call}
  0x00007ff0012a7e37: mov    %r12,%rsp
  0x00007ff0012a7e3a: xor    %r12,%r12
  0x00007ff0012a7e3d: jmpq   0x00007ff0012a7da5
  0x00007ff0012a7e42: hlt    
  0x00007ff0012a7e43: hlt    
  0x00007ff0012a7e44: hlt    
  0x00007ff0012a7e45: hlt    
  0x00007ff0012a7e46: hlt    
  0x00007ff0012a7e47: hlt    
<nmethod compile_id='5' compile_kind='c2n' level='0' entry='0x00007ff0012a7c40' size='888' address='0x00007ff0012a7ad0' relocation_offset='296' consts_offset='888' insts_offset='368' method='java/lang/System arraycopy (Ljava/lang/Object;ILjava/lang/Object;II)V' bytes='0' count='512' iicount='512' stamp='0.086'/>
<writer thread='140668586383040'/>
Decoding compiled method 0x00007ff0012aa8d0:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007feffd51a410} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;
  # parm0:    rsi       = int
  # parm1:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007ff0012aaa40: mov    %eax,-0x14000(%rsp)
  0x00007ff0012aaa47: push   %rbp
  0x00007ff0012aaa48: sub    $0x30,%rsp
  0x00007ff0012aaa4c: movabs $0x7feffd624558,%rax  ;   {metadata(method data for {method} {0x00007feffd51a410} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007ff0012aaa56: mov    0xdc(%rax),%edi
  0x00007ff0012aaa5c: add    $0x8,%edi
  0x00007ff0012aaa5f: mov    %edi,0xdc(%rax)
  0x00007ff0012aaa65: movabs $0x7feffd51a410,%rax  ;   {metadata({method} {0x00007feffd51a410} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007ff0012aaa6f: and    $0x1ff8,%edi
  0x00007ff0012aaa75: cmp    $0x0,%edi
  0x00007ff0012aaa78: je     0x00007ff0012aaadd  ;*iload_0
                                                ; - java.lang.Math::min@0 (line 1336)

  0x00007ff0012aaa7e: cmp    %edx,%esi
  0x00007ff0012aaa80: movabs $0x7feffd624558,%rax  ;   {metadata(method data for {method} {0x00007feffd51a410} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007ff0012aaa8a: movabs $0x108,%rdi
  0x00007ff0012aaa94: jg     0x00007ff0012aaaa4
  0x00007ff0012aaa9a: movabs $0x118,%rdi
  0x00007ff0012aaaa4: mov    (%rax,%rdi,1),%rbx
  0x00007ff0012aaaa8: lea    0x1(%rbx),%rbx
  0x00007ff0012aaaac: mov    %rbx,(%rax,%rdi,1)
  0x00007ff0012aaab0: jg     0x00007ff0012aaacb  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)

  0x00007ff0012aaab6: movabs $0x7feffd624558,%rax  ;   {metadata(method data for {method} {0x00007feffd51a410} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007ff0012aaac0: incl   0x128(%rax)
  0x00007ff0012aaac6: jmpq   0x00007ff0012aaace  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)

  0x00007ff0012aaacb: mov    %rdx,%rsi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)

  0x00007ff0012aaace: mov    %rsi,%rax
  0x00007ff0012aaad1: add    $0x30,%rsp
  0x00007ff0012aaad5: pop    %rbp
  0x00007ff0012aaad6: test   %eax,0x17270624(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012aaadc: retq   
  0x00007ff0012aaadd: mov    %rax,0x8(%rsp)
  0x00007ff0012aaae2: movq   $0xffffffffffffffff,(%rsp)
  0x00007ff0012aaaea: callq  0x00007ff0012175e0  ; OopMap{off=175}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ;   {runtime_call}
  0x00007ff0012aaaef: jmp    0x00007ff0012aaa7e
  0x00007ff0012aaaf1: nop
  0x00007ff0012aaaf2: nop
  0x00007ff0012aaaf3: mov    0x310(%r15),%rax
  0x00007ff0012aaafa: movabs $0x0,%r10
  0x00007ff0012aab04: mov    %r10,0x310(%r15)
  0x00007ff0012aab0b: movabs $0x0,%r10
  0x00007ff0012aab15: mov    %r10,0x318(%r15)
  0x00007ff0012aab1c: add    $0x30,%rsp
  0x00007ff0012aab20: pop    %rbp
  0x00007ff0012aab21: jmpq   0x00007ff00106cba0  ;   {runtime_call}
  0x00007ff0012aab26: hlt    
  0x00007ff0012aab27: hlt    
  0x00007ff0012aab28: hlt    
  0x00007ff0012aab29: hlt    
  0x00007ff0012aab2a: hlt    
  0x00007ff0012aab2b: hlt    
  0x00007ff0012aab2c: hlt    
  0x00007ff0012aab2d: hlt    
  0x00007ff0012aab2e: hlt    
  0x00007ff0012aab2f: hlt    
  0x00007ff0012aab30: hlt    
  0x00007ff0012aab31: hlt    
  0x00007ff0012aab32: hlt    
  0x00007ff0012aab33: hlt    
  0x00007ff0012aab34: hlt    
  0x00007ff0012aab35: hlt    
  0x00007ff0012aab36: hlt    
  0x00007ff0012aab37: hlt    
  0x00007ff0012aab38: hlt    
  0x00007ff0012aab39: hlt    
  0x00007ff0012aab3a: hlt    
  0x00007ff0012aab3b: hlt    
  0x00007ff0012aab3c: hlt    
  0x00007ff0012aab3d: hlt    
  0x00007ff0012aab3e: hlt    
  0x00007ff0012aab3f: hlt    
[Exception Handler]
[Stub Code]
  0x00007ff0012aab40: callq  0x00007ff0012186e0  ;   {no_reloc}
  0x00007ff0012aab45: mov    %rsp,-0x28(%rsp)
  0x00007ff0012aab4a: sub    $0x80,%rsp
  0x00007ff0012aab51: mov    %rax,0x78(%rsp)
  0x00007ff0012aab56: mov    %rcx,0x70(%rsp)
  0x00007ff0012aab5b: mov    %rdx,0x68(%rsp)
  0x00007ff0012aab60: mov    %rbx,0x60(%rsp)
  0x00007ff0012aab65: mov    %rbp,0x50(%rsp)
  0x00007ff0012aab6a: mov    %rsi,0x48(%rsp)
  0x00007ff0012aab6f: mov    %rdi,0x40(%rsp)
  0x00007ff0012aab74: mov    %r8,0x38(%rsp)
  0x00007ff0012aab79: mov    %r9,0x30(%rsp)
  0x00007ff0012aab7e: mov    %r10,0x28(%rsp)
  0x00007ff0012aab83: mov    %r11,0x20(%rsp)
  0x00007ff0012aab88: mov    %r12,0x18(%rsp)
  0x00007ff0012aab8d: mov    %r13,0x10(%rsp)
  0x00007ff0012aab92: mov    %r14,0x8(%rsp)
  0x00007ff0012aab97: mov    %r15,(%rsp)
  0x00007ff0012aab9b: movabs $0x7ff017f80bfe,%rdi  ;   {external_word}
  0x00007ff0012aaba5: movabs $0x7ff0012aab45,%rsi  ;   {internal_word}
  0x00007ff0012aabaf: mov    %rsp,%rdx
  0x00007ff0012aabb2: and    $0xfffffffffffffff0,%rsp
  0x00007ff0012aabb6: callq  0x00007ff017c8f7f0  ;   {runtime_call}
  0x00007ff0012aabbb: hlt    
[Deopt Handler Code]
  0x00007ff0012aabbc: movabs $0x7ff0012aabbc,%r10  ;   {section_word}
  0x00007ff0012aabc6: push   %r10
  0x00007ff0012aabc8: jmpq   0x00007ff001046e40  ;   {runtime_call}
  0x00007ff0012aabcd: hlt    
  0x00007ff0012aabce: hlt    
  0x00007ff0012aabcf: hlt    
<nmethod compile_id='4' compiler='C1' level='3' entry='0x00007ff0012aaa40' size='936' address='0x00007ff0012aa8d0' relocation_offset='296' insts_offset='368' stub_offset='624' scopes_data_offset='776' scopes_pcs_offset='816' dependencies_offset='928' method='java/lang/Math min (II)I' bytes='11' count='516' iicount='516' stamp='0.114'/>
<writer thread='140669158946496'/>
<task_queued compile_id='6' method='java/lang/String charAt (I)C' bytes='29' count='1280' iicount='1280' level='3' stamp='0.114' comment='tiered' hot_count='1280'/>
<task_queued compile_id='7' method='java/lang/String length ()I' bytes='6' count='384' iicount='384' level='3' stamp='0.114' comment='tiered' hot_count='384'/>
<task_queued compile_id='8' method='java/lang/String indexOf (II)I' bytes='70' count='128' backedge_count='2711' iicount='128' level='3' stamp='0.115' comment='tiered' hot_count='128'/>
<task_queued compile_id='9' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='256' iicount='256' level='3' stamp='0.115' comment='tiered' hot_count='256'/>
<writer thread='140668586383040'/>
Decoding compiled method 0x00007ff0012aa510:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007feffd426c60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007ff0012aa680: mov    0x8(%rsi),%r10d
  0x00007ff0012aa684: shl    $0x3,%r10
  0x00007ff0012aa688: cmp    %rax,%r10
  0x00007ff0012aa68b: jne    0x00007ff001045ba0  ;   {runtime_call}
  0x00007ff0012aa691: nopl   0x0(%rax,%rax,1)
  0x00007ff0012aa699: nopl   0x0(%rax)
[Verified Entry Point]
  0x00007ff0012aa6a0: mov    %eax,-0x14000(%rsp)
  0x00007ff0012aa6a7: push   %rbp
  0x00007ff0012aa6a8: sub    $0x30,%rsp
  0x00007ff0012aa6ac: movabs $0x7feffd6246b8,%rax  ;   {metadata(method data for {method} {0x00007feffd426c60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012aa6b6: mov    0xdc(%rax),%edi
  0x00007ff0012aa6bc: add    $0x8,%edi
  0x00007ff0012aa6bf: mov    %edi,0xdc(%rax)
  0x00007ff0012aa6c5: movabs $0x7feffd426c60,%rax  ;   {metadata({method} {0x00007feffd426c60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012aa6cf: and    $0x1ff8,%edi
  0x00007ff0012aa6d5: cmp    $0x0,%edi
  0x00007ff0012aa6d8: je     0x00007ff0012aa6f4  ;*aload_0
                                                ; - java.lang.String::length@0 (line 623)

  0x00007ff0012aa6de: mov    0xc(%rsi),%eax
  0x00007ff0012aa6e1: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)

  0x00007ff0012aa6e5: mov    0xc(%rax),%eax     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; implicit exception: dispatches to 0x00007ff0012aa708
  0x00007ff0012aa6e8: add    $0x30,%rsp
  0x00007ff0012aa6ec: pop    %rbp
  0x00007ff0012aa6ed: test   %eax,0x17270a0d(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012aa6f3: retq   
  0x00007ff0012aa6f4: mov    %rax,0x8(%rsp)
  0x00007ff0012aa6f9: movq   $0xffffffffffffffff,(%rsp)
  0x00007ff0012aa701: callq  0x00007ff0012175e0  ; OopMap{rsi=Oop off=134}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ;   {runtime_call}
  0x00007ff0012aa706: jmp    0x00007ff0012aa6de
  0x00007ff0012aa708: callq  0x00007ff001186e80  ; OopMap{off=141}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ;   {runtime_call}
  0x00007ff0012aa70d: nop
  0x00007ff0012aa70e: nop
  0x00007ff0012aa70f: mov    0x310(%r15),%rax
  0x00007ff0012aa716: movabs $0x0,%r10
  0x00007ff0012aa720: mov    %r10,0x310(%r15)
  0x00007ff0012aa727: movabs $0x0,%r10
  0x00007ff0012aa731: mov    %r10,0x318(%r15)
  0x00007ff0012aa738: add    $0x30,%rsp
  0x00007ff0012aa73c: pop    %rbp
  0x00007ff0012aa73d: jmpq   0x00007ff00106cba0  ;   {runtime_call}
  0x00007ff0012aa742: hlt    
  0x00007ff0012aa743: hlt    
  0x00007ff0012aa744: hlt    
  0x00007ff0012aa745: hlt    
  0x00007ff0012aa746: hlt    
  0x00007ff0012aa747: hlt    
  0x00007ff0012aa748: hlt    
  0x00007ff0012aa749: hlt    
  0x00007ff0012aa74a: hlt    
  0x00007ff0012aa74b: hlt    
  0x00007ff0012aa74c: hlt    
  0x00007ff0012aa74d: hlt    
  0x00007ff0012aa74e: hlt    
  0x00007ff0012aa74f: hlt    
  0x00007ff0012aa750: hlt    
  0x00007ff0012aa751: hlt    
  0x00007ff0012aa752: hlt    
  0x00007ff0012aa753: hlt    
  0x00007ff0012aa754: hlt    
  0x00007ff0012aa755: hlt    
  0x00007ff0012aa756: hlt    
  0x00007ff0012aa757: hlt    
  0x00007ff0012aa758: hlt    
  0x00007ff0012aa759: hlt    
  0x00007ff0012aa75a: hlt    
  0x00007ff0012aa75b: hlt    
  0x00007ff0012aa75c: hlt    
  0x00007ff0012aa75d: hlt    
  0x00007ff0012aa75e: hlt    
  0x00007ff0012aa75f: hlt    
[Exception Handler]
[Stub Code]
  0x00007ff0012aa760: callq  0x00007ff0012186e0  ;   {no_reloc}
  0x00007ff0012aa765: mov    %rsp,-0x28(%rsp)
  0x00007ff0012aa76a: sub    $0x80,%rsp
  0x00007ff0012aa771: mov    %rax,0x78(%rsp)
  0x00007ff0012aa776: mov    %rcx,0x70(%rsp)
  0x00007ff0012aa77b: mov    %rdx,0x68(%rsp)
  0x00007ff0012aa780: mov    %rbx,0x60(%rsp)
  0x00007ff0012aa785: mov    %rbp,0x50(%rsp)
  0x00007ff0012aa78a: mov    %rsi,0x48(%rsp)
  0x00007ff0012aa78f: mov    %rdi,0x40(%rsp)
  0x00007ff0012aa794: mov    %r8,0x38(%rsp)
  0x00007ff0012aa799: mov    %r9,0x30(%rsp)
  0x00007ff0012aa79e: mov    %r10,0x28(%rsp)
  0x00007ff0012aa7a3: mov    %r11,0x20(%rsp)
  0x00007ff0012aa7a8: mov    %r12,0x18(%rsp)
  0x00007ff0012aa7ad: mov    %r13,0x10(%rsp)
  0x00007ff0012aa7b2: mov    %r14,0x8(%rsp)
  0x00007ff0012aa7b7: mov    %r15,(%rsp)
  0x00007ff0012aa7bb: movabs $0x7ff017f80bfe,%rdi  ;   {external_word}
  0x00007ff0012aa7c5: movabs $0x7ff0012aa765,%rsi  ;   {internal_word}
  0x00007ff0012aa7cf: mov    %rsp,%rdx
  0x00007ff0012aa7d2: and    $0xfffffffffffffff0,%rsp
  0x00007ff0012aa7d6: callq  0x00007ff017c8f7f0  ;   {runtime_call}
  0x00007ff0012aa7db: hlt    
[Deopt Handler Code]
  0x00007ff0012aa7dc: movabs $0x7ff0012aa7dc,%r10  ;   {section_word}
  0x00007ff0012aa7e6: push   %r10
  0x00007ff0012aa7e8: jmpq   0x00007ff001046e40  ;   {runtime_call}
  0x00007ff0012aa7ed: hlt    
  0x00007ff0012aa7ee: hlt    
  0x00007ff0012aa7ef: hlt    
<nmethod compile_id='7' compiler='C1' level='3' entry='0x00007ff0012aa680' size='920' address='0x00007ff0012aa510' relocation_offset='296' insts_offset='368' stub_offset='592' scopes_data_offset='744' scopes_pcs_offset='784' dependencies_offset='896' nul_chk_table_offset='904' method='java/lang/String length ()I' bytes='6' count='475' iicount='475' stamp='0.144'/>
<writer thread='140669158946496'/>
<task_queued compile_id='10' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='1536' iicount='1536' level='1' stamp='0.145' comment='tiered' hot_count='1536'/>
<writer thread='140668585330368'/>
Decoding compiled method 0x00007ff0012a9f90:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007feffd426db0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007ff0012aa100: mov    0x8(%rsi),%r10d
  0x00007ff0012aa104: shl    $0x3,%r10
  0x00007ff0012aa108: cmp    %rax,%r10
  0x00007ff0012aa10b: jne    0x00007ff001045ba0  ;   {runtime_call}
  0x00007ff0012aa111: nopl   0x0(%rax,%rax,1)
  0x00007ff0012aa119: nopl   0x0(%rax)
[Verified Entry Point]
  0x00007ff0012aa120: mov    %eax,-0x14000(%rsp)
  0x00007ff0012aa127: push   %rbp
  0x00007ff0012aa128: sub    $0x30,%rsp
  0x00007ff0012aa12c: mov    %rdx,%rdi
  0x00007ff0012aa12f: movabs $0x7feffd5bb938,%rax  ;   {metadata(method data for {method} {0x00007feffd426db0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012aa139: mov    0xdc(%rax),%edx
  0x00007ff0012aa13f: add    $0x8,%edx
  0x00007ff0012aa142: mov    %edx,0xdc(%rax)
  0x00007ff0012aa148: movabs $0x7feffd426db0,%rax  ;   {metadata({method} {0x00007feffd426db0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012aa152: and    $0x1ff8,%edx
  0x00007ff0012aa158: cmp    $0x0,%edx
  0x00007ff0012aa15b: je     0x00007ff0012aa236  ;*iload_1
                                                ; - java.lang.String::charAt@0 (line 657)

  0x00007ff0012aa161: cmp    $0x0,%edi
  0x00007ff0012aa164: movabs $0x7feffd5bb938,%rax  ;   {metadata(method data for {method} {0x00007feffd426db0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012aa16e: movabs $0x108,%rdx
  0x00007ff0012aa178: jl     0x00007ff0012aa188
  0x00007ff0012aa17e: movabs $0x118,%rdx
  0x00007ff0012aa188: mov    (%rax,%rdx,1),%rbx
  0x00007ff0012aa18c: lea    0x1(%rbx),%rbx
  0x00007ff0012aa190: mov    %rbx,(%rax,%rdx,1)
  0x00007ff0012aa194: jl     0x00007ff0012aa1f6  ;*iflt
                                                ; - java.lang.String::charAt@1 (line 657)

  0x00007ff0012aa19a: mov    0xc(%rsi),%eax
  0x00007ff0012aa19d: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::charAt@6 (line 657)

  0x00007ff0012aa1a1: mov    0xc(%rax),%edx     ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ; implicit exception: dispatches to 0x00007ff0012aa24d
  0x00007ff0012aa1a4: cmp    %edx,%edi
  0x00007ff0012aa1a6: movabs $0x7feffd5bb938,%rdx  ;   {metadata(method data for {method} {0x00007feffd426db0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012aa1b0: movabs $0x128,%rsi
  0x00007ff0012aa1ba: jl     0x00007ff0012aa1ca
  0x00007ff0012aa1c0: movabs $0x138,%rsi
  0x00007ff0012aa1ca: mov    (%rdx,%rsi,1),%rbx
  0x00007ff0012aa1ce: lea    0x1(%rbx),%rbx
  0x00007ff0012aa1d2: mov    %rbx,(%rdx,%rsi,1)
  0x00007ff0012aa1d6: jge    0x00007ff0012aa1f6  ;*if_icmplt
                                                ; - java.lang.String::charAt@10 (line 657)

  0x00007ff0012aa1dc: movslq %edi,%rdi
  0x00007ff0012aa1df: movzwl 0x10(%rax,%rdi,2),%eax  ;*caload
                                                ; - java.lang.String::charAt@27 (line 660)

  0x00007ff0012aa1e4: and    $0xffff,%eax
  0x00007ff0012aa1ea: add    $0x30,%rsp
  0x00007ff0012aa1ee: pop    %rbp
  0x00007ff0012aa1ef: test   %eax,0x17270f0b(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012aa1f5: retq                      ;*ireturn
                                                ; - java.lang.String::charAt@28 (line 660)

  0x00007ff0012aa1f6: xchg   %ax,%ax
  0x00007ff0012aa1f8: jmpq   0x00007ff0012aa261  ;   {no_reloc}
  0x00007ff0012aa1fd: add    %al,(%rax)
  0x00007ff0012aa1ff: add    %al,(%rax)
  0x00007ff0012aa201: add    %ch,%cl
  0x00007ff0012aa203: add    %al,%fs:(%rax)
  0x00007ff0012aa206: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::charAt@13 (line 658)

  0x00007ff0012aa209: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x00007feffd426db0} &apos;charAt&apos; &apos;(I)C&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012aa20c: cmp    %bh,0x7feffd5b(%rcx)
  0x00007ff0012aa212: add    %al,(%rax)
  0x00007ff0012aa214: addq   $0x1,0x148(%rsi)
  0x00007ff0012aa21c: mov    %rdi,%rdx
  0x00007ff0012aa21f: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)

  0x00007ff0012aa222: mov    %rax,0x20(%rsp)
  0x00007ff0012aa227: callq  0x00007ff001045de0  ; OopMap{[32]=Oop off=300}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::charAt@18 (line 658)
                                                ;   {optimized virtual_call}
  0x00007ff0012aa22c: mov    0x20(%rsp),%rax
  0x00007ff0012aa231: jmpq   0x00007ff0012aa2a0
  0x00007ff0012aa236: mov    %rax,0x8(%rsp)
  0x00007ff0012aa23b: movq   $0xffffffffffffffff,(%rsp)
  0x00007ff0012aa243: callq  0x00007ff0012175e0  ; OopMap{rsi=Oop off=328}
                                                ;*synchronization entry
                                                ; - java.lang.String::charAt@-1 (line 657)
                                                ;   {runtime_call}
  0x00007ff0012aa248: jmpq   0x00007ff0012aa161
  0x00007ff0012aa24d: callq  0x00007ff001186e80  ; OopMap{rax=Oop off=338}
                                                ;*arraylength
                                                ; - java.lang.String::charAt@9 (line 657)
                                                ;   {runtime_call}
  0x00007ff0012aa252: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007ff0012aa25c: mov    $0xa050f00,%eax
  0x00007ff0012aa261: callq  0x00007ff001214d20  ; OopMap{off=358}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ;   {runtime_call}
  0x00007ff0012aa266: jmp    0x00007ff0012aa1f8
  0x00007ff0012aa268: nop
  0x00007ff0012aa269: nop
  0x00007ff0012aa26a: nop
  0x00007ff0012aa26b: mov    %rdx,%rdx
  0x00007ff0012aa26e: callq  0x00007ff001187320  ; OopMap{off=371}
                                                ;*new  ; - java.lang.String::charAt@13 (line 658)
                                                ;   {runtime_call}
  0x00007ff0012aa273: jmp    0x00007ff0012aa207
  0x00007ff0012aa275: nop
  0x00007ff0012aa276: nop
  0x00007ff0012aa277: mov    0x310(%r15),%rax
  0x00007ff0012aa27e: movabs $0x0,%r10
  0x00007ff0012aa288: mov    %r10,0x310(%r15)
  0x00007ff0012aa28f: movabs $0x0,%r10
  0x00007ff0012aa299: mov    %r10,0x318(%r15)
  0x00007ff0012aa2a0: add    $0x30,%rsp
  0x00007ff0012aa2a4: pop    %rbp
  0x00007ff0012aa2a5: jmpq   0x00007ff00106cba0  ;   {runtime_call}
  0x00007ff0012aa2aa: hlt    
  0x00007ff0012aa2ab: hlt    
  0x00007ff0012aa2ac: hlt    
  0x00007ff0012aa2ad: hlt    
  0x00007ff0012aa2ae: hlt    
  0x00007ff0012aa2af: hlt    
  0x00007ff0012aa2b0: hlt    
  0x00007ff0012aa2b1: hlt    
  0x00007ff0012aa2b2: hlt    
  0x00007ff0012aa2b3: hlt    
  0x00007ff0012aa2b4: hlt    
  0x00007ff0012aa2b5: hlt    
  0x00007ff0012aa2b6: hlt    
  0x00007ff0012aa2b7: hlt    
  0x00007ff0012aa2b8: hlt    
  0x00007ff0012aa2b9: hlt    
  0x00007ff0012aa2ba: hlt    
  0x00007ff0012aa2bb: hlt    
  0x00007ff0012aa2bc: hlt    
  0x00007ff0012aa2bd: hlt    
  0x00007ff0012aa2be: hlt    
  0x00007ff0012aa2bf: hlt    
[Stub Code]
  0x00007ff0012aa2c0: nop                       ;   {no_reloc}
  0x00007ff0012aa2c1: nop
  0x00007ff0012aa2c2: nop
  0x00007ff0012aa2c3: nop
  0x00007ff0012aa2c4: nop
  0x00007ff0012aa2c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007ff0012aa2cf: jmpq   0x00007ff0012aa2cf  ;   {runtime_call}
[Exception Handler]
  0x00007ff0012aa2d4: callq  0x00007ff0012186e0  ;   {runtime_call}
  0x00007ff0012aa2d9: mov    %rsp,-0x28(%rsp)
  0x00007ff0012aa2de: sub    $0x80,%rsp
  0x00007ff0012aa2e5: mov    %rax,0x78(%rsp)
  0x00007ff0012aa2ea: mov    %rcx,0x70(%rsp)
  0x00007ff0012aa2ef: mov    %rdx,0x68(%rsp)
  0x00007ff0012aa2f4: mov    %rbx,0x60(%rsp)
  0x00007ff0012aa2f9: mov    %rbp,0x50(%rsp)
  0x00007ff0012aa2fe: mov    %rsi,0x48(%rsp)
  0x00007ff0012aa303: mov    %rdi,0x40(%rsp)
  0x00007ff0012aa308: mov    %r8,0x38(%rsp)
  0x00007ff0012aa30d: mov    %r9,0x30(%rsp)
  0x00007ff0012aa312: mov    %r10,0x28(%rsp)
  0x00007ff0012aa317: mov    %r11,0x20(%rsp)
  0x00007ff0012aa31c: mov    %r12,0x18(%rsp)
  0x00007ff0012aa321: mov    %r13,0x10(%rsp)
  0x00007ff0012aa326: mov    %r14,0x8(%rsp)
  0x00007ff0012aa32b: mov    %r15,(%rsp)
  0x00007ff0012aa32f: movabs $0x7ff017f80bfe,%rdi  ;   {external_word}
  0x00007ff0012aa339: movabs $0x7ff0012aa2d9,%rsi  ;   {internal_word}
  0x00007ff0012aa343: mov    %rsp,%rdx
  0x00007ff0012aa346: and    $0xfffffffffffffff0,%rsp
  0x00007ff0012aa34a: callq  0x00007ff017c8f7f0  ;   {runtime_call}
  0x00007ff0012aa34f: hlt    
[Deopt Handler Code]
  0x00007ff0012aa350: movabs $0x7ff0012aa350,%r10  ;   {section_word}
  0x00007ff0012aa35a: push   %r10
  0x00007ff0012aa35c: jmpq   0x00007ff001046e40  ;   {runtime_call}
  0x00007ff0012aa361: hlt    
  0x00007ff0012aa362: hlt    
  0x00007ff0012aa363: hlt    
  0x00007ff0012aa364: hlt    
  0x00007ff0012aa365: hlt    
  0x00007ff0012aa366: hlt    
  0x00007ff0012aa367: hlt    
<nmethod compile_id='6' compiler='C1' level='3' entry='0x00007ff0012aa100' size='1376' address='0x00007ff0012a9f90' relocation_offset='296' insts_offset='368' stub_offset='816' scopes_data_offset='992' scopes_pcs_offset='1096' dependencies_offset='1352' nul_chk_table_offset='1360' method='java/lang/String charAt (I)C' bytes='29' count='1742' iicount='1742' stamp='0.160'/>
<writer thread='140668588488384'/>
Decoding compiled method 0x00007ff0012a9790:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007feffd428180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007ff0012a9920: mov    0x8(%rsi),%r10d
  0x00007ff0012a9924: shl    $0x3,%r10
  0x00007ff0012a9928: cmp    %rax,%r10
  0x00007ff0012a992b: jne    0x00007ff001045ba0  ;   {runtime_call}
  0x00007ff0012a9931: nopl   0x0(%rax,%rax,1)
  0x00007ff0012a9939: nopl   0x0(%rax)
[Verified Entry Point]
  0x00007ff0012a9940: mov    %eax,-0x14000(%rsp)
  0x00007ff0012a9947: push   %rbp
  0x00007ff0012a9948: sub    $0x30,%rsp
  0x00007ff0012a994c: movabs $0x7feffd6247d8,%rax  ;   {metadata(method data for {method} {0x00007feffd428180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a9956: mov    0xdc(%rax),%edi
  0x00007ff0012a995c: add    $0x8,%edi
  0x00007ff0012a995f: mov    %edi,0xdc(%rax)
  0x00007ff0012a9965: movabs $0x7feffd428180,%rax  ;   {metadata({method} {0x00007feffd428180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a996f: and    $0x1ff8,%edi
  0x00007ff0012a9975: cmp    $0x0,%edi
  0x00007ff0012a9978: je     0x00007ff0012a9b81  ;*aload_0
                                                ; - java.lang.String::indexOf@0 (line 1546)

  0x00007ff0012a997e: mov    0xc(%rsi),%eax
  0x00007ff0012a9981: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::indexOf@1 (line 1546)

  0x00007ff0012a9985: mov    0xc(%rax),%edi     ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ; implicit exception: dispatches to 0x00007ff0012a9b98
  0x00007ff0012a9988: cmp    $0x0,%ecx
  0x00007ff0012a998b: movabs $0x7feffd6247d8,%rbx  ;   {metadata(method data for {method} {0x00007feffd428180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a9995: movabs $0x108,%r8
  0x00007ff0012a999f: jge    0x00007ff0012a99af
  0x00007ff0012a99a5: movabs $0x118,%r8
  0x00007ff0012a99af: mov    (%rbx,%r8,1),%r9
  0x00007ff0012a99b3: lea    0x1(%r9),%r9
  0x00007ff0012a99b7: mov    %r9,(%rbx,%r8,1)
  0x00007ff0012a99bb: jge    0x00007ff0012a99db  ;*ifge
                                                ; - java.lang.String::indexOf@7 (line 1547)

  0x00007ff0012a99c1: movabs $0x7feffd6247d8,%rcx  ;   {metadata(method data for {method} {0x00007feffd428180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a99cb: incl   0x128(%rcx)
  0x00007ff0012a99d1: mov    $0x0,%ecx
  0x00007ff0012a99d6: jmpq   0x00007ff0012a9a13  ;*goto
                                                ; - java.lang.String::indexOf@12 (line 1548)

  0x00007ff0012a99db: cmp    %edi,%ecx
  0x00007ff0012a99dd: movabs $0x7feffd6247d8,%rbx  ;   {metadata(method data for {method} {0x00007feffd428180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a99e7: movabs $0x140,%r8
  0x00007ff0012a99f1: jl     0x00007ff0012a9a01
  0x00007ff0012a99f7: movabs $0x150,%r8
  0x00007ff0012a9a01: mov    (%rbx,%r8,1),%r9
  0x00007ff0012a9a05: lea    0x1(%r9),%r9
  0x00007ff0012a9a09: mov    %r9,(%rbx,%r8,1)
  0x00007ff0012a9a0d: jge    0x00007ff0012a9b70  ;*if_icmplt
                                                ; - java.lang.String::indexOf@17 (line 1549)

  0x00007ff0012a9a13: cmp    $0x10000,%edx
  0x00007ff0012a9a19: movabs $0x7feffd6247d8,%rbx  ;   {metadata(method data for {method} {0x00007feffd428180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a9a23: movabs $0x160,%r8
  0x00007ff0012a9a2d: jge    0x00007ff0012a9a3d
  0x00007ff0012a9a33: movabs $0x170,%r8
  0x00007ff0012a9a3d: mov    (%rbx,%r8,1),%r9
  0x00007ff0012a9a41: lea    0x1(%r9),%r9
  0x00007ff0012a9a45: mov    %r9,(%rbx,%r8,1)
  0x00007ff0012a9a49: jge    0x00007ff0012a9b48
  0x00007ff0012a9a4f: jmpq   0x00007ff0012a9aeb  ;*if_icmpge
                                                ; - java.lang.String::indexOf@25 (line 1554)

  0x00007ff0012a9a54: nopl   0x0(%rax)
  0x00007ff0012a9a58: movslq %ecx,%rsi
  0x00007ff0012a9a5b: cmp    0xc(%rax),%ecx
  0x00007ff0012a9a5e: jae    0x00007ff0012a9b9d
  0x00007ff0012a9a64: movzwl 0x10(%rax,%rsi,2),%esi  ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)

  0x00007ff0012a9a69: cmp    %edx,%esi
  0x00007ff0012a9a6b: movabs $0x7feffd6247d8,%rsi  ;   {metadata(method data for {method} {0x00007feffd428180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a9a75: movabs $0x1a0,%rbx
  0x00007ff0012a9a7f: jne    0x00007ff0012a9a8f
  0x00007ff0012a9a85: movabs $0x1b0,%rbx
  0x00007ff0012a9a8f: mov    (%rsi,%rbx,1),%r8
  0x00007ff0012a9a93: lea    0x1(%r8),%r8
  0x00007ff0012a9a97: mov    %r8,(%rsi,%rbx,1)
  0x00007ff0012a9a9b: je     0x00007ff0012a9b28  ;*if_icmpne
                                                ; - java.lang.String::indexOf@49 (line 1559)

  0x00007ff0012a9aa1: inc    %ecx
  0x00007ff0012a9aa3: movabs $0x7feffd6247d8,%rsi  ;   {metadata(method data for {method} {0x00007feffd428180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a9aad: mov    0xe0(%rsi),%ebx
  0x00007ff0012a9ab3: add    $0x8,%ebx
  0x00007ff0012a9ab6: mov    %ebx,0xe0(%rsi)
  0x00007ff0012a9abc: movabs $0x7feffd428180,%rsi  ;   {metadata({method} {0x00007feffd428180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a9ac6: and    $0xfff8,%ebx
  0x00007ff0012a9acc: cmp    $0x0,%ebx
  0x00007ff0012a9acf: je     0x00007ff0012a9ba6  ; OopMap{rax=Oop off=437}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x00007ff0012a9ad5: test   %eax,0x17271625(%rip)        # 0x00007ff01851b100
                                                ;   {poll}
  0x00007ff0012a9adb: movabs $0x7feffd6247d8,%rsi  ;   {metadata(method data for {method} {0x00007feffd428180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a9ae5: incl   0x1c0(%rsi)        ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)

  0x00007ff0012a9aeb: cmp    %edi,%ecx
  0x00007ff0012a9aed: movabs $0x7feffd6247d8,%rsi  ;   {metadata(method data for {method} {0x00007feffd428180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a9af7: movabs $0x180,%rbx
  0x00007ff0012a9b01: jge    0x00007ff0012a9b11
  0x00007ff0012a9b07: movabs $0x190,%rbx
  0x00007ff0012a9b11: mov    (%rsi,%rbx,1),%r8
  0x00007ff0012a9b15: lea    0x1(%r8),%r8
  0x00007ff0012a9b19: mov    %r8,(%rsi,%rbx,1)
  0x00007ff0012a9b1d: jge    0x00007ff0012a9b37
  0x00007ff0012a9b23: jmpq   0x00007ff0012a9a58  ;*if_icmpge
                                                ; - java.lang.String::indexOf@40 (line 1558)

  0x00007ff0012a9b28: mov    %rcx,%rax
  0x00007ff0012a9b2b: add    $0x30,%rsp
  0x00007ff0012a9b2f: pop    %rbp
  0x00007ff0012a9b30: test   %eax,0x172715ca(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012a9b36: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@54 (line 1560)

  0x00007ff0012a9b37: mov    $0xffffffff,%eax
  0x00007ff0012a9b3c: add    $0x30,%rsp
  0x00007ff0012a9b40: pop    %rbp
  0x00007ff0012a9b41: test   %eax,0x172715b9(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012a9b47: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@62 (line 1563)

  0x00007ff0012a9b48: mov    %rsi,%rdi
  0x00007ff0012a9b4b: movabs $0x7feffd6247d8,%rbx  ;   {metadata(method data for {method} {0x00007feffd428180} &apos;indexOf&apos; &apos;(II)I&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012a9b55: addq   $0x1,0x1d8(%rbx)
  0x00007ff0012a9b5d: nop
  0x00007ff0012a9b5e: nop
  0x00007ff0012a9b5f: callq  0x00007ff001045de0  ; OopMap{off=580}
                                                ;*invokespecial indexOfSupplementary
                                                ; - java.lang.String::indexOf@66 (line 1565)
                                                ;   {optimized virtual_call}
  0x00007ff0012a9b64: add    $0x30,%rsp
  0x00007ff0012a9b68: pop    %rbp
  0x00007ff0012a9b69: test   %eax,0x17271591(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012a9b6f: retq                      ;*ireturn
                                                ; - java.lang.String::indexOf@69 (line 1565)

  0x00007ff0012a9b70: mov    $0xffffffff,%eax
  0x00007ff0012a9b75: add    $0x30,%rsp
  0x00007ff0012a9b79: pop    %rbp
  0x00007ff0012a9b7a: test   %eax,0x17271580(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012a9b80: retq   
  0x00007ff0012a9b81: mov    %rax,0x8(%rsp)
  0x00007ff0012a9b86: movq   $0xffffffffffffffff,(%rsp)
  0x00007ff0012a9b8e: callq  0x00007ff0012175e0  ; OopMap{rsi=Oop off=627}
                                                ;*synchronization entry
                                                ; - java.lang.String::indexOf@-1 (line 1546)
                                                ;   {runtime_call}
  0x00007ff0012a9b93: jmpq   0x00007ff0012a997e
  0x00007ff0012a9b98: callq  0x00007ff001186e80  ; OopMap{rsi=Oop rax=Oop off=637}
                                                ;*arraylength
                                                ; - java.lang.String::indexOf@4 (line 1546)
                                                ;   {runtime_call}
  0x00007ff0012a9b9d: mov    %rcx,(%rsp)
  0x00007ff0012a9ba1: callq  0x00007ff00106c700  ; OopMap{rax=Oop off=646}
                                                ;*caload
                                                ; - java.lang.String::indexOf@47 (line 1559)
                                                ;   {runtime_call}
  0x00007ff0012a9ba6: mov    %rsi,0x8(%rsp)
  0x00007ff0012a9bab: movq   $0x3a,(%rsp)
  0x00007ff0012a9bb3: callq  0x00007ff0012175e0  ; OopMap{rax=Oop off=664}
                                                ;*goto
                                                ; - java.lang.String::indexOf@58 (line 1558)
                                                ;   {runtime_call}
  0x00007ff0012a9bb8: jmpq   0x00007ff0012a9ad5
  0x00007ff0012a9bbd: nop
  0x00007ff0012a9bbe: nop
  0x00007ff0012a9bbf: mov    0x310(%r15),%rax
  0x00007ff0012a9bc6: movabs $0x0,%r10
  0x00007ff0012a9bd0: mov    %r10,0x310(%r15)
  0x00007ff0012a9bd7: movabs $0x0,%r10
  0x00007ff0012a9be1: mov    %r10,0x318(%r15)
  0x00007ff0012a9be8: add    $0x30,%rsp
  0x00007ff0012a9bec: pop    %rbp
  0x00007ff0012a9bed: jmpq   0x00007ff00106cba0  ;   {runtime_call}
  0x00007ff0012a9bf2: hlt    
  0x00007ff0012a9bf3: hlt    
  0x00007ff0012a9bf4: hlt    
  0x00007ff0012a9bf5: hlt    
  0x00007ff0012a9bf6: hlt    
  0x00007ff0012a9bf7: hlt    
  0x00007ff0012a9bf8: hlt    
  0x00007ff0012a9bf9: hlt    
  0x00007ff0012a9bfa: hlt    
  0x00007ff0012a9bfb: hlt    
  0x00007ff0012a9bfc: hlt    
  0x00007ff0012a9bfd: hlt    
  0x00007ff0012a9bfe: hlt    
  0x00007ff0012a9bff: hlt    
[Stub Code]
  0x00007ff0012a9c00: nop                       ;   {no_reloc}
  0x00007ff0012a9c01: nop
  0x00007ff0012a9c02: nop
  0x00007ff0012a9c03: nop
  0x00007ff0012a9c04: nop
  0x00007ff0012a9c05: movabs $0x0,%rbx          ;   {static_stub}
  0x00007ff0012a9c0f: jmpq   0x00007ff0012a9c0f  ;   {runtime_call}
[Exception Handler]
  0x00007ff0012a9c14: callq  0x00007ff0012186e0  ;   {runtime_call}
  0x00007ff0012a9c19: mov    %rsp,-0x28(%rsp)
  0x00007ff0012a9c1e: sub    $0x80,%rsp
  0x00007ff0012a9c25: mov    %rax,0x78(%rsp)
  0x00007ff0012a9c2a: mov    %rcx,0x70(%rsp)
  0x00007ff0012a9c2f: mov    %rdx,0x68(%rsp)
  0x00007ff0012a9c34: mov    %rbx,0x60(%rsp)
  0x00007ff0012a9c39: mov    %rbp,0x50(%rsp)
  0x00007ff0012a9c3e: mov    %rsi,0x48(%rsp)
  0x00007ff0012a9c43: mov    %rdi,0x40(%rsp)
  0x00007ff0012a9c48: mov    %r8,0x38(%rsp)
  0x00007ff0012a9c4d: mov    %r9,0x30(%rsp)
  0x00007ff0012a9c52: mov    %r10,0x28(%rsp)
  0x00007ff0012a9c57: mov    %r11,0x20(%rsp)
  0x00007ff0012a9c5c: mov    %r12,0x18(%rsp)
  0x00007ff0012a9c61: mov    %r13,0x10(%rsp)
  0x00007ff0012a9c66: mov    %r14,0x8(%rsp)
  0x00007ff0012a9c6b: mov    %r15,(%rsp)
  0x00007ff0012a9c6f: movabs $0x7ff017f80bfe,%rdi  ;   {external_word}
  0x00007ff0012a9c79: movabs $0x7ff0012a9c19,%rsi  ;   {internal_word}
  0x00007ff0012a9c83: mov    %rsp,%rdx
  0x00007ff0012a9c86: and    $0xfffffffffffffff0,%rsp
  0x00007ff0012a9c8a: callq  0x00007ff017c8f7f0  ;   {runtime_call}
  0x00007ff0012a9c8f: hlt    
[Deopt Handler Code]
  0x00007ff0012a9c90: movabs $0x7ff0012a9c90,%r10  ;   {section_word}
  0x00007ff0012a9c9a: push   %r10
  0x00007ff0012a9c9c: jmpq   0x00007ff001046e40  ;   {runtime_call}
  0x00007ff0012a9ca1: hlt    
  0x00007ff0012a9ca2: hlt    
  0x00007ff0012a9ca3: hlt    
  0x00007ff0012a9ca4: hlt    
  0x00007ff0012a9ca5: hlt    
  0x00007ff0012a9ca6: hlt    
  0x00007ff0012a9ca7: hlt    
<nmethod compile_id='8' compiler='C1' level='3' entry='0x00007ff0012a9920' size='1848' address='0x00007ff0012a9790' relocation_offset='296' insts_offset='400' stub_offset='1136' scopes_data_offset='1312' scopes_pcs_offset='1472' dependencies_offset='1824' nul_chk_table_offset='1832' method='java/lang/String indexOf (II)I' bytes='70' count='154' backedge_count='3810' iicount='154' stamp='0.204'/>
Decoding compiled method 0x00007ff0012a7790:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007feffd423480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007ff0012a78e0: mov    0x8(%rsi),%r10d
  0x00007ff0012a78e4: shl    $0x3,%r10
  0x00007ff0012a78e8: cmp    %rax,%r10
  0x00007ff0012a78eb: jne    0x00007ff001045ba0  ;   {runtime_call}
  0x00007ff0012a78f1: nopl   0x0(%rax,%rax,1)
  0x00007ff0012a78f9: nopl   0x0(%rax)
[Verified Entry Point]
  0x00007ff0012a7900: mov    %eax,-0x14000(%rsp)
  0x00007ff0012a7907: push   %rbp
  0x00007ff0012a7908: sub    $0x30,%rsp
  0x00007ff0012a790c: mov    %rsi,%rdi          ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)

  0x00007ff0012a790f: mov    %rsi,0x20(%rsp)
  0x00007ff0012a7914: callq  0x00007ff0011870a0  ; OopMap{[32]=Oop off=57}
                                                ;*return
                                                ; - java.lang.Object::&lt;init&gt;@0 (line 37)
                                                ;   {runtime_call}
  0x00007ff0012a7919: add    $0x30,%rsp
  0x00007ff0012a791d: pop    %rbp
  0x00007ff0012a791e: test   %eax,0x172737dc(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012a7924: retq   
  0x00007ff0012a7925: nop
  0x00007ff0012a7926: nop
  0x00007ff0012a7927: mov    0x310(%r15),%rax
  0x00007ff0012a792e: movabs $0x0,%r10
  0x00007ff0012a7938: mov    %r10,0x310(%r15)
  0x00007ff0012a793f: movabs $0x0,%r10
  0x00007ff0012a7949: mov    %r10,0x318(%r15)
  0x00007ff0012a7950: add    $0x30,%rsp
  0x00007ff0012a7954: pop    %rbp
  0x00007ff0012a7955: jmpq   0x00007ff00106cba0  ;   {runtime_call}
  0x00007ff0012a795a: hlt    
  0x00007ff0012a795b: hlt    
  0x00007ff0012a795c: hlt    
  0x00007ff0012a795d: hlt    
  0x00007ff0012a795e: hlt    
  0x00007ff0012a795f: hlt    
[Exception Handler]
[Stub Code]
  0x00007ff0012a7960: callq  0x00007ff0012186e0  ;   {no_reloc}
  0x00007ff0012a7965: mov    %rsp,-0x28(%rsp)
  0x00007ff0012a796a: sub    $0x80,%rsp
  0x00007ff0012a7971: mov    %rax,0x78(%rsp)
  0x00007ff0012a7976: mov    %rcx,0x70(%rsp)
  0x00007ff0012a797b: mov    %rdx,0x68(%rsp)
  0x00007ff0012a7980: mov    %rbx,0x60(%rsp)
  0x00007ff0012a7985: mov    %rbp,0x50(%rsp)
  0x00007ff0012a798a: mov    %rsi,0x48(%rsp)
  0x00007ff0012a798f: mov    %rdi,0x40(%rsp)
  0x00007ff0012a7994: mov    %r8,0x38(%rsp)
  0x00007ff0012a7999: mov    %r9,0x30(%rsp)
  0x00007ff0012a799e: mov    %r10,0x28(%rsp)
  0x00007ff0012a79a3: mov    %r11,0x20(%rsp)
  0x00007ff0012a79a8: mov    %r12,0x18(%rsp)
  0x00007ff0012a79ad: mov    %r13,0x10(%rsp)
  0x00007ff0012a79b2: mov    %r14,0x8(%rsp)
  0x00007ff0012a79b7: mov    %r15,(%rsp)
  0x00007ff0012a79bb: movabs $0x7ff017f80bfe,%rdi  ;   {external_word}
  0x00007ff0012a79c5: movabs $0x7ff0012a7965,%rsi  ;   {internal_word}
  0x00007ff0012a79cf: mov    %rsp,%rdx
  0x00007ff0012a79d2: and    $0xfffffffffffffff0,%rsp
  0x00007ff0012a79d6: callq  0x00007ff017c8f7f0  ;   {runtime_call}
  0x00007ff0012a79db: hlt    
[Deopt Handler Code]
  0x00007ff0012a79dc: movabs $0x7ff0012a79dc,%r10  ;   {section_word}
  0x00007ff0012a79e6: push   %r10
  0x00007ff0012a79e8: jmpq   0x00007ff001046e40  ;   {runtime_call}
  0x00007ff0012a79ed: hlt    
  0x00007ff0012a79ee: hlt    
  0x00007ff0012a79ef: hlt    
<nmethod compile_id='10' compiler='C1' level='1' entry='0x00007ff0012a78e0' size='712' address='0x00007ff0012a7790' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='640' dependencies_offset='704' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='1571' iicount='1571' stamp='0.214'/>
<make_not_entrant thread='140668588488384' compile_id='1' compiler='C1' level='3' stamp='0.214'/>
<writer thread='140668586383040'/>
Decoding compiled method 0x00007ff0012b3910:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007feffd497dc0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx       = int
  #           [sp+0xb0]  (sp of caller)
  0x00007ff0012b3aa0: mov    0x8(%rsi),%r10d
  0x00007ff0012b3aa4: shl    $0x3,%r10
  0x00007ff0012b3aa8: cmp    %rax,%r10
  0x00007ff0012b3aab: jne    0x00007ff001045ba0  ;   {runtime_call}
  0x00007ff0012b3ab1: nopl   0x0(%rax,%rax,1)
  0x00007ff0012b3ab9: nopl   0x0(%rax)
[Verified Entry Point]
  0x00007ff0012b3ac0: mov    %eax,-0x14000(%rsp)
  0x00007ff0012b3ac7: push   %rbp
  0x00007ff0012b3ac8: sub    $0xa0,%rsp
  0x00007ff0012b3acf: movabs $0x7feffd6249e8,%rdi  ;   {metadata(method data for {method} {0x00007feffd497dc0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007ff0012b3ad9: mov    0xdc(%rdi),%ebx
  0x00007ff0012b3adf: add    $0x8,%ebx
  0x00007ff0012b3ae2: mov    %ebx,0xdc(%rdi)
  0x00007ff0012b3ae8: movabs $0x7feffd497dc0,%rdi  ;   {metadata({method} {0x00007feffd497dc0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007ff0012b3af2: and    $0x1ff8,%ebx
  0x00007ff0012b3af8: cmp    $0x0,%ebx
  0x00007ff0012b3afb: je     0x00007ff0012b3daf  ;*iload_1
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@0 (line 123)

  0x00007ff0012b3b01: mov    0x10(%rsi),%edi
  0x00007ff0012b3b04: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)

  0x00007ff0012b3b08: mov    0xc(%rdi),%ebx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; implicit exception: dispatches to 0x00007ff0012b3dc6
  0x00007ff0012b3b0b: mov    %rdx,%rax
  0x00007ff0012b3b0e: sub    %ebx,%eax
  0x00007ff0012b3b10: cmp    $0x0,%eax
  0x00007ff0012b3b13: movabs $0x7feffd6249e8,%rax  ;   {metadata(method data for {method} {0x00007feffd497dc0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007ff0012b3b1d: movabs $0x108,%rcx
  0x00007ff0012b3b27: jle    0x00007ff0012b3b37
  0x00007ff0012b3b2d: movabs $0x118,%rcx
  0x00007ff0012b3b37: mov    (%rax,%rcx,1),%r8
  0x00007ff0012b3b3b: lea    0x1(%r8),%r8
  0x00007ff0012b3b3f: mov    %r8,(%rax,%rcx,1)
  0x00007ff0012b3b43: jle    0x00007ff0012b3da0  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)

  0x00007ff0012b3b49: mov    %ebx,0x78(%rsp)
  0x00007ff0012b3b4d: mov    %rdi,0x80(%rsp)
  0x00007ff0012b3b55: mov    %rsi,%rax
  0x00007ff0012b3b58: movabs $0x7feffd6249e8,%rcx  ;   {metadata(method data for {method} {0x00007feffd497dc0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007ff0012b3b62: addq   $0x1,0x128(%rcx)
  0x00007ff0012b3b6a: mov    %rsi,%rax
  0x00007ff0012b3b6d: mov    %rax,%rsi          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00007ff0012b3b70: mov    %rax,0x88(%rsp)
  0x00007ff0012b3b78: nop
  0x00007ff0012b3b79: nop
  0x00007ff0012b3b7a: nop
  0x00007ff0012b3b7b: nop
  0x00007ff0012b3b7c: nop
  0x00007ff0012b3b7d: nop
  0x00007ff0012b3b7e: nop
  0x00007ff0012b3b7f: callq  0x00007ff001045de0  ; OopMap{[136]=Oop [128]=Oop off=228}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ;   {optimized virtual_call}
  0x00007ff0012b3b84: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)

  0x00007ff0012b3b87: movabs $0x7feffd6249e8,%rbx  ;   {metadata(method data for {method} {0x00007feffd497dc0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007ff0012b3b91: addq   $0x1,0x138(%rbx)
  0x00007ff0012b3b99: movabs $0x7feffd626310,%rbx  ;   {metadata(method data for {method} {0x00007feffd53ec88} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007ff0012b3ba3: mov    0xdc(%rbx),%edx
  0x00007ff0012b3ba9: add    $0x8,%edx
  0x00007ff0012b3bac: mov    %edx,0xdc(%rbx)
  0x00007ff0012b3bb2: movabs $0x7feffd53ec88,%rbx  ;   {metadata({method} {0x00007feffd53ec88} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007ff0012b3bbc: and    $0x7ffff8,%edx
  0x00007ff0012b3bc2: cmp    $0x0,%edx
  0x00007ff0012b3bc5: je     0x00007ff0012b3dcb
  0x00007ff0012b3bcb: mov    %r8,%rbx
  0x00007ff0012b3bce: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00007ff0012b3bd8: movslq %ebx,%rbx
  0x00007ff0012b3bdb: mov    %rbx,%rdi
  0x00007ff0012b3bde: cmp    $0xffffff,%rbx
  0x00007ff0012b3be5: ja     0x00007ff0012b3de2
  0x00007ff0012b3beb: movabs $0x17,%rsi
  0x00007ff0012b3bf5: lea    (%rsi,%rbx,2),%rsi
  0x00007ff0012b3bf9: and    $0xfffffffffffffff8,%rsi
  0x00007ff0012b3bfd: mov    0x60(%r15),%rax
  0x00007ff0012b3c01: lea    (%rax,%rsi,1),%rsi
  0x00007ff0012b3c05: cmp    0x70(%r15),%rsi
  0x00007ff0012b3c09: ja     0x00007ff0012b3de2
  0x00007ff0012b3c0f: mov    %rsi,0x60(%r15)
  0x00007ff0012b3c13: sub    %rax,%rsi
  0x00007ff0012b3c16: movq   $0x1,(%rax)
  0x00007ff0012b3c1d: mov    %rdx,%rcx
  0x00007ff0012b3c20: shr    $0x3,%rcx
  0x00007ff0012b3c24: mov    %ecx,0x8(%rax)
  0x00007ff0012b3c27: mov    %ebx,0xc(%rax)
  0x00007ff0012b3c2a: sub    $0x10,%rsi
  0x00007ff0012b3c2e: je     0x00007ff0012b3c45
  0x00007ff0012b3c34: xor    %rbx,%rbx
  0x00007ff0012b3c37: shr    $0x3,%rsi
  0x00007ff0012b3c3b: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007ff0012b3c40: dec    %rsi
  0x00007ff0012b3c43: jne    0x00007ff0012b3c3b  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00007ff0012b3c45: movabs $0x7feffd626310,%rsi  ;   {metadata(method data for {method} {0x00007feffd53ec88} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007ff0012b3c4f: addq   $0x1,0x108(%rsi)
  0x00007ff0012b3c57: movabs $0x7feffd624558,%rsi  ;   {metadata(method data for {method} {0x00007feffd51a410} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007ff0012b3c61: mov    0xdc(%rsi),%edx
  0x00007ff0012b3c67: add    $0x8,%edx
  0x00007ff0012b3c6a: mov    %edx,0xdc(%rsi)
  0x00007ff0012b3c70: movabs $0x7feffd51a410,%rsi  ;   {metadata({method} {0x00007feffd51a410} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007ff0012b3c7a: and    $0x7ffff8,%edx
  0x00007ff0012b3c80: cmp    $0x0,%edx
  0x00007ff0012b3c83: je     0x00007ff0012b3dec
  0x00007ff0012b3c89: mov    0x78(%rsp),%ebx
  0x00007ff0012b3c8d: cmp    %r8d,%ebx
  0x00007ff0012b3c90: movabs $0x7feffd624558,%rsi  ;   {metadata(method data for {method} {0x00007feffd51a410} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007ff0012b3c9a: movabs $0x108,%rdx
  0x00007ff0012b3ca4: jg     0x00007ff0012b3cb4
  0x00007ff0012b3caa: movabs $0x118,%rdx
  0x00007ff0012b3cb4: mov    (%rsi,%rdx,1),%rcx
  0x00007ff0012b3cb8: lea    0x1(%rcx),%rcx
  0x00007ff0012b3cbc: mov    %rcx,(%rsi,%rdx,1)
  0x00007ff0012b3cc0: jg     0x00007ff0012b3cdb  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00007ff0012b3cc6: movabs $0x7feffd624558,%rsi  ;   {metadata(method data for {method} {0x00007feffd51a410} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007ff0012b3cd0: incl   0x128(%rsi)
  0x00007ff0012b3cd6: jmpq   0x00007ff0012b3cde  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00007ff0012b3cdb: mov    %r8,%rbx           ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)

  0x00007ff0012b3cde: mov    0x80(%rsp),%rdi
  0x00007ff0012b3ce6: movabs $0x7feffd626310,%rsi  ;   {metadata(method data for {method} {0x00007feffd53ec88} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007ff0012b3cf0: addq   $0x1,0x118(%rsi)
  0x00007ff0012b3cf8: mov    %rdi,%rsi
  0x00007ff0012b3cfb: mov    $0x0,%edx
  0x00007ff0012b3d00: mov    %rax,%rcx
  0x00007ff0012b3d03: mov    $0x0,%r8d
  0x00007ff0012b3d09: mov    %rbx,%r9
  0x00007ff0012b3d0c: mov    %rax,0x90(%rsp)
  0x00007ff0012b3d14: lea    (%rdx,%r9,1),%rdi
  0x00007ff0012b3d18: cmp    0xc(%rsi),%edi
  0x00007ff0012b3d1b: ja     0x00007ff0012b3e03
  0x00007ff0012b3d21: lea    (%r8,%r9,1),%rdi
  0x00007ff0012b3d25: cmp    0xc(%rcx),%edi
  0x00007ff0012b3d28: ja     0x00007ff0012b3e03
  0x00007ff0012b3d2e: test   %r9d,%r9d
  0x00007ff0012b3d31: jl     0x00007ff0012b3e03
  0x00007ff0012b3d37: je     0x00007ff0012b3d73
  0x00007ff0012b3d3d: movslq %edx,%rdx
  0x00007ff0012b3d40: movslq %r8d,%r8
  0x00007ff0012b3d43: lea    0x10(%rsi,%rdx,2),%rdi
  0x00007ff0012b3d48: lea    0x10(%rcx,%r8,2),%rsi
  0x00007ff0012b3d4d: mov    %r9,%rdx
  0x00007ff0012b3d50: test   $0xf,%esp
  0x00007ff0012b3d56: je     0x00007ff0012b3d6e
  0x00007ff0012b3d5c: sub    $0x8,%rsp
  0x00007ff0012b3d60: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007ff0012b3d65: add    $0x8,%rsp
  0x00007ff0012b3d69: jmpq   0x00007ff0012b3d73
  0x00007ff0012b3d6e: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x00007ff0012b3d73: mov    0x90(%rsp),%rax
  0x00007ff0012b3d7b: mov    0x88(%rsp),%rsi
  0x00007ff0012b3d83: mov    %rax,%r10
  0x00007ff0012b3d86: shr    $0x3,%r10
  0x00007ff0012b3d8a: mov    %r10d,0x10(%rsi)
  0x00007ff0012b3d8e: shr    $0x9,%rsi
  0x00007ff0012b3d92: movabs $0x7ff013110000,%rdi
  0x00007ff0012b3d9c: movb   $0x0,(%rsi,%rdi,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)

  0x00007ff0012b3da0: add    $0xa0,%rsp
  0x00007ff0012b3da7: pop    %rbp
  0x00007ff0012b3da8: test   %eax,0x17267352(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012b3dae: retq   
  0x00007ff0012b3daf: mov    %rdi,0x8(%rsp)
  0x00007ff0012b3db4: movq   $0xffffffffffffffff,(%rsp)
  0x00007ff0012b3dbc: callq  0x00007ff0012175e0  ; OopMap{rsi=Oop off=801}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ;   {runtime_call}
  0x00007ff0012b3dc1: jmpq   0x00007ff0012b3b01
  0x00007ff0012b3dc6: callq  0x00007ff001186e80  ; OopMap{rsi=Oop rdi=Oop off=811}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ;   {runtime_call}
  0x00007ff0012b3dcb: mov    %rbx,0x8(%rsp)
  0x00007ff0012b3dd0: movq   $0xffffffffffffffff,(%rsp)
  0x00007ff0012b3dd8: callq  0x00007ff0012175e0  ; OopMap{[136]=Oop [128]=Oop off=829}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x00007ff0012b3ddd: jmpq   0x00007ff0012b3bcb
  0x00007ff0012b3de2: callq  0x00007ff001216120  ; OopMap{[136]=Oop [128]=Oop off=839}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x00007ff0012b3de7: jmpq   0x00007ff0012b3c45
  0x00007ff0012b3dec: mov    %rsi,0x8(%rsp)
  0x00007ff0012b3df1: movq   $0xffffffffffffffff,(%rsp)
  0x00007ff0012b3df9: callq  0x00007ff0012175e0  ; OopMap{[136]=Oop [128]=Oop rax=Oop off=862}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {runtime_call}
  0x00007ff0012b3dfe: jmpq   0x00007ff0012b3c89
  0x00007ff0012b3e03: nop
  0x00007ff0012b3e04: nop
  0x00007ff0012b3e05: nop
  0x00007ff0012b3e06: nop
  0x00007ff0012b3e07: callq  0x00007ff001046260  ; OopMap{[136]=Oop [144]=Oop off=876}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ;   {static_call}
  0x00007ff0012b3e0c: jmpq   0x00007ff0012b3d73
  0x00007ff0012b3e11: nop
  0x00007ff0012b3e12: nop
  0x00007ff0012b3e13: mov    0x310(%r15),%rax
  0x00007ff0012b3e1a: movabs $0x0,%r10
  0x00007ff0012b3e24: mov    %r10,0x310(%r15)
  0x00007ff0012b3e2b: movabs $0x0,%r10
  0x00007ff0012b3e35: mov    %r10,0x318(%r15)
  0x00007ff0012b3e3c: add    $0xa0,%rsp
  0x00007ff0012b3e43: pop    %rbp
  0x00007ff0012b3e44: jmpq   0x00007ff00106cba0  ;   {runtime_call}
  0x00007ff0012b3e49: hlt    
  0x00007ff0012b3e4a: hlt    
  0x00007ff0012b3e4b: hlt    
  0x00007ff0012b3e4c: hlt    
  0x00007ff0012b3e4d: hlt    
  0x00007ff0012b3e4e: hlt    
  0x00007ff0012b3e4f: hlt    
  0x00007ff0012b3e50: hlt    
  0x00007ff0012b3e51: hlt    
  0x00007ff0012b3e52: hlt    
  0x00007ff0012b3e53: hlt    
  0x00007ff0012b3e54: hlt    
  0x00007ff0012b3e55: hlt    
  0x00007ff0012b3e56: hlt    
  0x00007ff0012b3e57: hlt    
  0x00007ff0012b3e58: hlt    
  0x00007ff0012b3e59: hlt    
  0x00007ff0012b3e5a: hlt    
  0x00007ff0012b3e5b: hlt    
  0x00007ff0012b3e5c: hlt    
  0x00007ff0012b3e5d: hlt    
  0x00007ff0012b3e5e: hlt    
  0x00007ff0012b3e5f: hlt    
[Stub Code]
  0x00007ff0012b3e60: nop                       ;   {no_reloc}
  0x00007ff0012b3e61: nop
  0x00007ff0012b3e62: nop
  0x00007ff0012b3e63: nop
  0x00007ff0012b3e64: nop
  0x00007ff0012b3e65: movabs $0x0,%rbx          ;   {static_stub}
  0x00007ff0012b3e6f: jmpq   0x00007ff0012b3e6f  ;   {runtime_call}
  0x00007ff0012b3e74: nop
  0x00007ff0012b3e75: movabs $0x0,%rbx          ;   {static_stub}
  0x00007ff0012b3e7f: jmpq   0x00007ff0012b3e7f  ;   {runtime_call}
[Exception Handler]
  0x00007ff0012b3e84: callq  0x00007ff0012186e0  ;   {runtime_call}
  0x00007ff0012b3e89: mov    %rsp,-0x28(%rsp)
  0x00007ff0012b3e8e: sub    $0x80,%rsp
  0x00007ff0012b3e95: mov    %rax,0x78(%rsp)
  0x00007ff0012b3e9a: mov    %rcx,0x70(%rsp)
  0x00007ff0012b3e9f: mov    %rdx,0x68(%rsp)
  0x00007ff0012b3ea4: mov    %rbx,0x60(%rsp)
  0x00007ff0012b3ea9: mov    %rbp,0x50(%rsp)
  0x00007ff0012b3eae: mov    %rsi,0x48(%rsp)
  0x00007ff0012b3eb3: mov    %rdi,0x40(%rsp)
  0x00007ff0012b3eb8: mov    %r8,0x38(%rsp)
  0x00007ff0012b3ebd: mov    %r9,0x30(%rsp)
  0x00007ff0012b3ec2: mov    %r10,0x28(%rsp)
  0x00007ff0012b3ec7: mov    %r11,0x20(%rsp)
  0x00007ff0012b3ecc: mov    %r12,0x18(%rsp)
  0x00007ff0012b3ed1: mov    %r13,0x10(%rsp)
  0x00007ff0012b3ed6: mov    %r14,0x8(%rsp)
  0x00007ff0012b3edb: mov    %r15,(%rsp)
  0x00007ff0012b3edf: movabs $0x7ff017f80bfe,%rdi  ;   {external_word}
  0x00007ff0012b3ee9: movabs $0x7ff0012b3e89,%rsi  ;   {internal_word}
  0x00007ff0012b3ef3: mov    %rsp,%rdx
  0x00007ff0012b3ef6: and    $0xfffffffffffffff0,%rsp
  0x00007ff0012b3efa: callq  0x00007ff017c8f7f0  ;   {runtime_call}
  0x00007ff0012b3eff: hlt    
[Deopt Handler Code]
  0x00007ff0012b3f00: movabs $0x7ff0012b3f00,%r10  ;   {section_word}
  0x00007ff0012b3f0a: push   %r10
  0x00007ff0012b3f0c: jmpq   0x00007ff001046e40  ;   {runtime_call}
  0x00007ff0012b3f11: hlt    
  0x00007ff0012b3f12: hlt    
  0x00007ff0012b3f13: hlt    
  0x00007ff0012b3f14: hlt    
  0x00007ff0012b3f15: hlt    
  0x00007ff0012b3f16: hlt    
  0x00007ff0012b3f17: hlt    
<nmethod compile_id='9' compiler='C1' level='3' entry='0x00007ff0012b3aa0' size='2128' address='0x00007ff0012b3910' relocation_offset='296' insts_offset='400' stub_offset='1360' scopes_data_offset='1568' scopes_pcs_offset='1768' dependencies_offset='2104' nul_chk_table_offset='2112' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='290' iicount='290' stamp='0.250'/>
<writer thread='140669158946496'/>
<task_queued compile_id='11' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='256' iicount='256' level='1' stamp='0.252' comment='tiered' hot_count='256'/>
<writer thread='140668587435712'/>
Decoding compiled method 0x00007ff0012b3250:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007feffd44b5e8} &apos;get&apos; &apos;()Ljava/lang/Object;&apos; in &apos;java/lang/ref/Reference&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007ff0012b33a0: mov    0x8(%rsi),%r10d
  0x00007ff0012b33a4: shl    $0x3,%r10
  0x00007ff0012b33a8: cmp    %rax,%r10
  0x00007ff0012b33ab: jne    0x00007ff001045ba0  ;   {runtime_call}
  0x00007ff0012b33b1: nopl   0x0(%rax,%rax,1)
  0x00007ff0012b33b9: nopl   0x0(%rax)
[Verified Entry Point]
  0x00007ff0012b33c0: mov    %eax,-0x14000(%rsp)
  0x00007ff0012b33c7: push   %rbp
  0x00007ff0012b33c8: sub    $0x30,%rsp
  0x00007ff0012b33cc: mov    0xc(%rsi),%eax
  0x00007ff0012b33cf: shl    $0x3,%rax          ;*aload_0
                                                ; - java.lang.ref.Reference::get@0 (line 254)

  0x00007ff0012b33d3: add    $0x30,%rsp
  0x00007ff0012b33d7: pop    %rbp
  0x00007ff0012b33d8: test   %eax,0x17267d22(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012b33de: retq   
  0x00007ff0012b33df: nop
  0x00007ff0012b33e0: nop
  0x00007ff0012b33e1: mov    0x310(%r15),%rax
  0x00007ff0012b33e8: movabs $0x0,%r10
  0x00007ff0012b33f2: mov    %r10,0x310(%r15)
  0x00007ff0012b33f9: movabs $0x0,%r10
  0x00007ff0012b3403: mov    %r10,0x318(%r15)
  0x00007ff0012b340a: add    $0x30,%rsp
  0x00007ff0012b340e: pop    %rbp
  0x00007ff0012b340f: jmpq   0x00007ff00106cba0  ;   {runtime_call}
  0x00007ff0012b3414: hlt    
  0x00007ff0012b3415: hlt    
  0x00007ff0012b3416: hlt    
  0x00007ff0012b3417: hlt    
  0x00007ff0012b3418: hlt    
  0x00007ff0012b3419: hlt    
  0x00007ff0012b341a: hlt    
  0x00007ff0012b341b: hlt    
  0x00007ff0012b341c: hlt    
  0x00007ff0012b341d: hlt    
  0x00007ff0012b341e: hlt    
  0x00007ff0012b341f: hlt    
[Exception Handler]
[Stub Code]
  0x00007ff0012b3420: callq  0x00007ff0012186e0  ;   {no_reloc}
  0x00007ff0012b3425: mov    %rsp,-0x28(%rsp)
  0x00007ff0012b342a: sub    $0x80,%rsp
  0x00007ff0012b3431: mov    %rax,0x78(%rsp)
  0x00007ff0012b3436: mov    %rcx,0x70(%rsp)
  0x00007ff0012b343b: mov    %rdx,0x68(%rsp)
  0x00007ff0012b3440: mov    %rbx,0x60(%rsp)
  0x00007ff0012b3445: mov    %rbp,0x50(%rsp)
  0x00007ff0012b344a: mov    %rsi,0x48(%rsp)
  0x00007ff0012b344f: mov    %rdi,0x40(%rsp)
  0x00007ff0012b3454: mov    %r8,0x38(%rsp)
  0x00007ff0012b3459: mov    %r9,0x30(%rsp)
  0x00007ff0012b345e: mov    %r10,0x28(%rsp)
  0x00007ff0012b3463: mov    %r11,0x20(%rsp)
  0x00007ff0012b3468: mov    %r12,0x18(%rsp)
  0x00007ff0012b346d: mov    %r13,0x10(%rsp)
  0x00007ff0012b3472: mov    %r14,0x8(%rsp)
  0x00007ff0012b3477: mov    %r15,(%rsp)
  0x00007ff0012b347b: movabs $0x7ff017f80bfe,%rdi  ;   {external_word}
  0x00007ff0012b3485: movabs $0x7ff0012b3425,%rsi  ;   {internal_word}
  0x00007ff0012b348f: mov    %rsp,%rdx
  0x00007ff0012b3492: and    $0xfffffffffffffff0,%rsp
  0x00007ff0012b3496: callq  0x00007ff017c8f7f0  ;   {runtime_call}
  0x00007ff0012b349b: hlt    
[Deopt Handler Code]
  0x00007ff0012b349c: movabs $0x7ff0012b349c,%r10  ;   {section_word}
  0x00007ff0012b34a6: push   %r10
  0x00007ff0012b34a8: jmpq   0x00007ff001046e40  ;   {runtime_call}
  0x00007ff0012b34ad: hlt    
  0x00007ff0012b34ae: hlt    
  0x00007ff0012b34af: hlt    
<nmethod compile_id='11' compiler='C1' level='1' entry='0x00007ff0012b33a0' size='680' address='0x00007ff0012b3250' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='624' dependencies_offset='672' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='258' iicount='258' stamp='0.261'/>
<writer thread='140669158946496'/>
<task_queued compile_id='12' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='256' iicount='256' level='3' stamp='0.263' comment='tiered' hot_count='256'/>
<task_queued compile_id='13' method='java/lang/String getChars (II[CI)V' bytes='62' count='256' iicount='256' level='3' stamp='0.263' comment='tiered' hot_count='256'/>
<writer thread='140668588488384'/>
Decoding compiled method 0x00007ff0012b4190:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007feffd427208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx       = int
  # parm1:    rcx       = int
  # parm2:    r8:r8     = &apos;[C&apos;
  # parm3:    r9        = int
  #           [sp+0x70]  (sp of caller)
  0x00007ff0012b4340: mov    0x8(%rsi),%r10d
  0x00007ff0012b4344: shl    $0x3,%r10
  0x00007ff0012b4348: cmp    %rax,%r10
  0x00007ff0012b434b: jne    0x00007ff001045ba0  ;   {runtime_call}
  0x00007ff0012b4351: nopl   0x0(%rax,%rax,1)
  0x00007ff0012b4359: nopl   0x0(%rax)
[Verified Entry Point]
  0x00007ff0012b4360: mov    %eax,-0x14000(%rsp)
  0x00007ff0012b4367: push   %rbp
  0x00007ff0012b4368: sub    $0x60,%rsp
  0x00007ff0012b436c: mov    %rdx,%rdi
  0x00007ff0012b436f: movabs $0x7feffd656120,%rdx  ;   {metadata(method data for {method} {0x00007feffd427208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012b4379: mov    0xdc(%rdx),%ebx
  0x00007ff0012b437f: add    $0x8,%ebx
  0x00007ff0012b4382: mov    %ebx,0xdc(%rdx)
  0x00007ff0012b4388: movabs $0x7feffd427208,%rdx  ;   {metadata({method} {0x00007feffd427208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012b4392: and    $0x1ff8,%ebx
  0x00007ff0012b4398: cmp    $0x0,%ebx
  0x00007ff0012b439b: je     0x00007ff0012b45c6  ;*iload_1
                                                ; - java.lang.String::getChars@0 (line 817)

  0x00007ff0012b43a1: cmp    $0x0,%edi
  0x00007ff0012b43a4: movabs $0x7feffd656120,%rdx  ;   {metadata(method data for {method} {0x00007feffd427208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012b43ae: movabs $0x108,%rbx
  0x00007ff0012b43b8: jge    0x00007ff0012b43c8
  0x00007ff0012b43be: movabs $0x118,%rbx
  0x00007ff0012b43c8: mov    (%rdx,%rbx,1),%rax
  0x00007ff0012b43cc: lea    0x1(%rax),%rax
  0x00007ff0012b43d0: mov    %rax,(%rdx,%rbx,1)
  0x00007ff0012b43d4: jl     0x00007ff0012b4586  ;*ifge
                                                ; - java.lang.String::getChars@1 (line 817)

  0x00007ff0012b43da: mov    0xc(%rsi),%esi
  0x00007ff0012b43dd: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::getChars@15 (line 820)

  0x00007ff0012b43e1: mov    0xc(%rsi),%edx     ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ; implicit exception: dispatches to 0x00007ff0012b45dd
  0x00007ff0012b43e4: cmp    %edx,%ecx
  0x00007ff0012b43e6: movabs $0x7feffd656120,%rdx  ;   {metadata(method data for {method} {0x00007feffd427208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012b43f0: movabs $0x138,%rbx
  0x00007ff0012b43fa: jle    0x00007ff0012b440a
  0x00007ff0012b4400: movabs $0x148,%rbx
  0x00007ff0012b440a: mov    (%rdx,%rbx,1),%rax
  0x00007ff0012b440e: lea    0x1(%rax),%rax
  0x00007ff0012b4412: mov    %rax,(%rdx,%rbx,1)
  0x00007ff0012b4416: jg     0x00007ff0012b4546  ;*if_icmple
                                                ; - java.lang.String::getChars@19 (line 820)

  0x00007ff0012b441c: cmp    %ecx,%edi
  0x00007ff0012b441e: movabs $0x7feffd656120,%rdx  ;   {metadata(method data for {method} {0x00007feffd427208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012b4428: movabs $0x168,%rbx
  0x00007ff0012b4432: jle    0x00007ff0012b4442
  0x00007ff0012b4438: movabs $0x178,%rbx
  0x00007ff0012b4442: mov    (%rdx,%rbx,1),%rax
  0x00007ff0012b4446: lea    0x1(%rax),%rax
  0x00007ff0012b444a: mov    %rax,(%rdx,%rbx,1)
  0x00007ff0012b444e: jg     0x00007ff0012b44fc  ;*if_icmple
                                                ; - java.lang.String::getChars@33 (line 823)

  0x00007ff0012b4454: movabs $0x7feffd656120,%rdx  ;   {metadata(method data for {method} {0x00007feffd427208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012b445e: addq   $0x1,0x198(%rdx)
  0x00007ff0012b4466: mov    %rcx,%rbx
  0x00007ff0012b4469: sub    %edi,%ebx
  0x00007ff0012b446b: mov    %rdi,%rdx
  0x00007ff0012b446e: mov    %r8,%rcx
  0x00007ff0012b4471: mov    %r9,%r8
  0x00007ff0012b4474: mov    %rbx,%r9
  0x00007ff0012b4477: test   %rcx,%rcx
  0x00007ff0012b447a: je     0x00007ff0012b45e2
  0x00007ff0012b4480: test   %edx,%edx
  0x00007ff0012b4482: jl     0x00007ff0012b45e2
  0x00007ff0012b4488: test   %r8d,%r8d
  0x00007ff0012b448b: jl     0x00007ff0012b45e2
  0x00007ff0012b4491: lea    (%rdx,%r9,1),%rdi
  0x00007ff0012b4495: cmp    0xc(%rsi),%edi
  0x00007ff0012b4498: ja     0x00007ff0012b45e2
  0x00007ff0012b449e: lea    (%r8,%r9,1),%rdi
  0x00007ff0012b44a2: cmp    0xc(%rcx),%edi
  0x00007ff0012b44a5: ja     0x00007ff0012b45e2
  0x00007ff0012b44ab: test   %r9d,%r9d
  0x00007ff0012b44ae: jl     0x00007ff0012b45e2
  0x00007ff0012b44b4: je     0x00007ff0012b44f0
  0x00007ff0012b44ba: movslq %edx,%rdx
  0x00007ff0012b44bd: movslq %r8d,%r8
  0x00007ff0012b44c0: lea    0x10(%rsi,%rdx,2),%rdi
  0x00007ff0012b44c5: lea    0x10(%rcx,%r8,2),%rsi
  0x00007ff0012b44ca: mov    %r9,%rdx
  0x00007ff0012b44cd: test   $0xf,%esp
  0x00007ff0012b44d3: je     0x00007ff0012b44eb
  0x00007ff0012b44d9: sub    $0x8,%rsp
  0x00007ff0012b44dd: callq  Stub::jshort_arraycopy  ;   {runtime_call}
  0x00007ff0012b44e2: add    $0x8,%rsp
  0x00007ff0012b44e6: jmpq   0x00007ff0012b44f0
  0x00007ff0012b44eb: callq  Stub::jshort_arraycopy  ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {runtime_call}
  0x00007ff0012b44f0: add    $0x60,%rsp
  0x00007ff0012b44f4: pop    %rbp
  0x00007ff0012b44f5: test   %eax,0x17266c05(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012b44fb: retq                      ;*return
                                                ; - java.lang.String::getChars@61 (line 827)

  0x00007ff0012b44fc: nopl   0x0(%rax)
  0x00007ff0012b4500: jmpq   0x00007ff0012b4600  ;   {no_reloc}
  0x00007ff0012b4505: add    %al,(%rax)
  0x00007ff0012b4507: add    %al,(%rax)
  0x00007ff0012b4509: add    %ch,%cl
  0x00007ff0012b450b: sti    
  0x00007ff0012b450c: add    %al,(%rax)
  0x00007ff0012b450e: add    %cl,-0x75(%rax)    ;*new  ; - java.lang.String::getChars@36 (line 824)

  0x00007ff0012b4511: rorb   -0x42(%rax)        ;   {metadata(method data for {method} {0x00007feffd427208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012b4514: and    %ah,0x65(%rcx)
  0x00007ff0012b4517: std    
  0x00007ff0012b4518: out    %eax,(%dx)
  0x00007ff0012b4519: jg     0x00007ff0012b451b
  0x00007ff0012b451b: add    %cl,-0x7d(%rax)
  0x00007ff0012b451e: xchg   %cl,0x1000001(%rax)
  0x00007ff0012b4524: sub    %edi,%ecx
  0x00007ff0012b4526: mov    %rcx,%rdx
  0x00007ff0012b4529: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43 (line 824)

  0x00007ff0012b452c: mov    %rax,0x38(%rsp)
  0x00007ff0012b4531: nop
  0x00007ff0012b4532: nop
  0x00007ff0012b4533: nop
  0x00007ff0012b4534: nop
  0x00007ff0012b4535: nop
  0x00007ff0012b4536: nop
  0x00007ff0012b4537: callq  0x00007ff001045de0  ; OopMap{[56]=Oop off=508}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@43 (line 824)
                                                ;   {optimized virtual_call}
  0x00007ff0012b453c: mov    0x38(%rsp),%rax
  0x00007ff0012b4541: jmpq   0x00007ff0012b468e  ;*athrow
                                                ; - java.lang.String::getChars@46 (line 824)

  0x00007ff0012b4546: xchg   %ax,%ax
  0x00007ff0012b4548: jmpq   0x00007ff0012b4626  ;   {no_reloc}
  0x00007ff0012b454d: add    %al,(%rax)
  0x00007ff0012b454f: add    %al,(%rax)
  0x00007ff0012b4551: add    %ch,%cl
  0x00007ff0012b4553: flds   (%rax)
  0x00007ff0012b4555: add    %al,(%rax)         ;*new  ; - java.lang.String::getChars@22 (line 821)

  0x00007ff0012b4557: mov    %rax,%rdx
  0x00007ff0012b455a: movabs $0x7feffd656120,%rsi  ;   {metadata(method data for {method} {0x00007feffd427208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012b4564: addq   $0x1,0x158(%rsi)
  0x00007ff0012b456c: mov    %rcx,%rdx
  0x00007ff0012b456f: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27 (line 821)

  0x00007ff0012b4572: mov    %rax,0x40(%rsp)
  0x00007ff0012b4577: callq  0x00007ff001045de0  ; OopMap{[64]=Oop off=572}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@27 (line 821)
                                                ;   {optimized virtual_call}
  0x00007ff0012b457c: mov    0x40(%rsp),%rax
  0x00007ff0012b4581: jmpq   0x00007ff0012b468e  ;*athrow
                                                ; - java.lang.String::getChars@30 (line 821)

  0x00007ff0012b4586: xchg   %ax,%ax
  0x00007ff0012b4588: jmpq   0x00007ff0012b464c  ;   {no_reloc}
  0x00007ff0012b458d: add    %al,(%rax)
  0x00007ff0012b458f: add    %al,(%rax)
  0x00007ff0012b4591: add    %ch,%cl
  0x00007ff0012b4593: mov    $0x48000000,%edi   ;*new  ; - java.lang.String::getChars@4 (line 818)

  0x00007ff0012b4598: mov    %eax,%edx
  0x00007ff0012b459a: movabs $0x7feffd656120,%rsi  ;   {metadata(method data for {method} {0x00007feffd427208} &apos;getChars&apos; &apos;(II[CI)V&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012b45a4: addq   $0x1,0x128(%rsi)
  0x00007ff0012b45ac: mov    %rdi,%rdx
  0x00007ff0012b45af: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9 (line 818)

  0x00007ff0012b45b2: mov    %rax,0x48(%rsp)
  0x00007ff0012b45b7: callq  0x00007ff001045de0  ; OopMap{[72]=Oop off=636}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::getChars@9 (line 818)
                                                ;   {optimized virtual_call}
  0x00007ff0012b45bc: mov    0x48(%rsp),%rax
  0x00007ff0012b45c1: jmpq   0x00007ff0012b468e
  0x00007ff0012b45c6: mov    %rdx,0x8(%rsp)
  0x00007ff0012b45cb: movq   $0xffffffffffffffff,(%rsp)
  0x00007ff0012b45d3: callq  0x00007ff0012175e0  ; OopMap{rsi=Oop r8=Oop off=664}
                                                ;*synchronization entry
                                                ; - java.lang.String::getChars@-1 (line 817)
                                                ;   {runtime_call}
  0x00007ff0012b45d8: jmpq   0x00007ff0012b43a1
  0x00007ff0012b45dd: callq  0x00007ff001186e80  ; OopMap{r8=Oop rsi=Oop off=674}
                                                ;*arraylength
                                                ; - java.lang.String::getChars@18 (line 820)
                                                ;   {runtime_call}
  0x00007ff0012b45e2: nop
  0x00007ff0012b45e3: nop
  0x00007ff0012b45e4: nop
  0x00007ff0012b45e5: nop
  0x00007ff0012b45e6: nop
  0x00007ff0012b45e7: callq  0x00007ff001046260  ; OopMap{off=684}
                                                ;*invokestatic arraycopy
                                                ; - java.lang.String::getChars@58 (line 826)
                                                ;   {static_call}
  0x00007ff0012b45ec: jmpq   0x00007ff0012b44f0
  0x00007ff0012b45f1: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007ff0012b45fb: mov    $0xa050f00,%eax
  0x00007ff0012b4600: callq  0x00007ff001214d20  ; OopMap{off=709}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x00007ff0012b4605: jmpq   0x00007ff0012b4500
  0x00007ff0012b460a: mov    %rdx,%rdx
  0x00007ff0012b460d: callq  0x00007ff001187320  ; OopMap{off=722}
                                                ;*new  ; - java.lang.String::getChars@36 (line 824)
                                                ;   {runtime_call}
  0x00007ff0012b4612: jmpq   0x00007ff0012b450f
  0x00007ff0012b4617: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007ff0012b4621: mov    $0xa050f00,%eax
  0x00007ff0012b4626: callq  0x00007ff001214d20  ; OopMap{off=747}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x00007ff0012b462b: jmpq   0x00007ff0012b4548
  0x00007ff0012b4630: mov    %rdx,%rdx
  0x00007ff0012b4633: callq  0x00007ff001187320  ; OopMap{off=760}
                                                ;*new  ; - java.lang.String::getChars@22 (line 821)
                                                ;   {runtime_call}
  0x00007ff0012b4638: jmpq   0x00007ff0012b4557
  0x00007ff0012b463d: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007ff0012b4647: mov    $0xa050f00,%eax
  0x00007ff0012b464c: callq  0x00007ff001214d20  ; OopMap{off=785}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x00007ff0012b4651: jmpq   0x00007ff0012b4588
  0x00007ff0012b4656: mov    %rdx,%rdx
  0x00007ff0012b4659: callq  0x00007ff001187320  ; OopMap{off=798}
                                                ;*new  ; - java.lang.String::getChars@4 (line 818)
                                                ;   {runtime_call}
  0x00007ff0012b465e: jmpq   0x00007ff0012b4597
  0x00007ff0012b4663: nop
  0x00007ff0012b4664: nop
  0x00007ff0012b4665: mov    0x310(%r15),%rax
  0x00007ff0012b466c: movabs $0x0,%r10
  0x00007ff0012b4676: mov    %r10,0x310(%r15)
  0x00007ff0012b467d: movabs $0x0,%r10
  0x00007ff0012b4687: mov    %r10,0x318(%r15)
  0x00007ff0012b468e: add    $0x60,%rsp
  0x00007ff0012b4692: pop    %rbp
  0x00007ff0012b4693: jmpq   0x00007ff00106cba0  ;   {runtime_call}
  0x00007ff0012b4698: hlt    
  0x00007ff0012b4699: hlt    
  0x00007ff0012b469a: hlt    
  0x00007ff0012b469b: hlt    
  0x00007ff0012b469c: hlt    
  0x00007ff0012b469d: hlt    
  0x00007ff0012b469e: hlt    
  0x00007ff0012b469f: hlt    
[Stub Code]
  0x00007ff0012b46a0: nop                       ;   {no_reloc}
  0x00007ff0012b46a1: nop
  0x00007ff0012b46a2: nop
  0x00007ff0012b46a3: nop
  0x00007ff0012b46a4: nop
  0x00007ff0012b46a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007ff0012b46af: jmpq   0x00007ff0012b46af  ;   {runtime_call}
  0x00007ff0012b46b4: nop
  0x00007ff0012b46b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007ff0012b46bf: jmpq   0x00007ff0012b46bf  ;   {runtime_call}
  0x00007ff0012b46c4: nop
  0x00007ff0012b46c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007ff0012b46cf: jmpq   0x00007ff0012b46cf  ;   {runtime_call}
  0x00007ff0012b46d4: nop
  0x00007ff0012b46d5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007ff0012b46df: jmpq   0x00007ff0012b46df  ;   {runtime_call}
[Exception Handler]
  0x00007ff0012b46e4: callq  0x00007ff0012186e0  ;   {runtime_call}
  0x00007ff0012b46e9: mov    %rsp,-0x28(%rsp)
  0x00007ff0012b46ee: sub    $0x80,%rsp
  0x00007ff0012b46f5: mov    %rax,0x78(%rsp)
  0x00007ff0012b46fa: mov    %rcx,0x70(%rsp)
  0x00007ff0012b46ff: mov    %rdx,0x68(%rsp)
  0x00007ff0012b4704: mov    %rbx,0x60(%rsp)
  0x00007ff0012b4709: mov    %rbp,0x50(%rsp)
  0x00007ff0012b470e: mov    %rsi,0x48(%rsp)
  0x00007ff0012b4713: mov    %rdi,0x40(%rsp)
  0x00007ff0012b4718: mov    %r8,0x38(%rsp)
  0x00007ff0012b471d: mov    %r9,0x30(%rsp)
  0x00007ff0012b4722: mov    %r10,0x28(%rsp)
  0x00007ff0012b4727: mov    %r11,0x20(%rsp)
  0x00007ff0012b472c: mov    %r12,0x18(%rsp)
  0x00007ff0012b4731: mov    %r13,0x10(%rsp)
  0x00007ff0012b4736: mov    %r14,0x8(%rsp)
  0x00007ff0012b473b: mov    %r15,(%rsp)
  0x00007ff0012b473f: movabs $0x7ff017f80bfe,%rdi  ;   {external_word}
  0x00007ff0012b4749: movabs $0x7ff0012b46e9,%rsi  ;   {internal_word}
  0x00007ff0012b4753: mov    %rsp,%rdx
  0x00007ff0012b4756: and    $0xfffffffffffffff0,%rsp
  0x00007ff0012b475a: callq  0x00007ff017c8f7f0  ;   {runtime_call}
  0x00007ff0012b475f: hlt    
[Deopt Handler Code]
  0x00007ff0012b4760: movabs $0x7ff0012b4760,%r10  ;   {section_word}
  0x00007ff0012b476a: push   %r10
  0x00007ff0012b476c: jmpq   0x00007ff001046e40  ;   {runtime_call}
  0x00007ff0012b4771: hlt    
  0x00007ff0012b4772: hlt    
  0x00007ff0012b4773: hlt    
  0x00007ff0012b4774: hlt    
  0x00007ff0012b4775: hlt    
  0x00007ff0012b4776: hlt    
  0x00007ff0012b4777: hlt    
<nmethod compile_id='13' compiler='C1' level='3' entry='0x00007ff0012b4340' size='2256' address='0x00007ff0012b4190' relocation_offset='296' insts_offset='432' stub_offset='1296' scopes_data_offset='1520' scopes_pcs_offset='1752' dependencies_offset='2232' nul_chk_table_offset='2240' method='java/lang/String getChars (II[CI)V' bytes='62' count='260' iicount='260' stamp='0.296'/>
<writer thread='140668585330368'/>
Decoding compiled method 0x00007ff0012b4a90:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007feffd498718} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;
  # this:     rsi:rsi   = &apos;java/lang/AbstractStringBuilder&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  #           [sp+0xf0]  (sp of caller)
  0x00007ff0012b4c60: mov    0x8(%rsi),%r10d
  0x00007ff0012b4c64: shl    $0x3,%r10
  0x00007ff0012b4c68: cmp    %rax,%r10
  0x00007ff0012b4c6b: jne    0x00007ff001045ba0  ;   {runtime_call}
  0x00007ff0012b4c71: nopl   0x0(%rax,%rax,1)
  0x00007ff0012b4c79: nopl   0x0(%rax)
[Verified Entry Point]
  0x00007ff0012b4c80: mov    %eax,-0x14000(%rsp)
  0x00007ff0012b4c87: push   %rbp
  0x00007ff0012b4c88: sub    $0xe0,%rsp
  0x00007ff0012b4c8f: mov    %rsi,0xb8(%rsp)
  0x00007ff0012b4c97: movabs $0x7feffd6545a0,%rdi  ;   {metadata(method data for {method} {0x00007feffd498718} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007ff0012b4ca1: mov    0xdc(%rdi),%ebx
  0x00007ff0012b4ca7: add    $0x8,%ebx
  0x00007ff0012b4caa: mov    %ebx,0xdc(%rdi)
  0x00007ff0012b4cb0: movabs $0x7feffd498718,%rdi  ;   {metadata({method} {0x00007feffd498718} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007ff0012b4cba: and    $0x1ff8,%ebx
  0x00007ff0012b4cc0: cmp    $0x0,%ebx
  0x00007ff0012b4cc3: je     0x00007ff0012b51f3  ;*aload_1
                                                ; - java.lang.AbstractStringBuilder::append@0 (line 445)

  0x00007ff0012b4cc9: cmp    $0x0,%rdx
  0x00007ff0012b4ccd: movabs $0x7feffd6545a0,%rdi  ;   {metadata(method data for {method} {0x00007feffd498718} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007ff0012b4cd7: movabs $0x108,%rbx
  0x00007ff0012b4ce1: jne    0x00007ff0012b4cf1
  0x00007ff0012b4ce7: movabs $0x118,%rbx
  0x00007ff0012b4cf1: mov    (%rdi,%rbx,1),%rax
  0x00007ff0012b4cf5: lea    0x1(%rax),%rax
  0x00007ff0012b4cf9: mov    %rax,(%rdi,%rbx,1)
  0x00007ff0012b4cfd: je     0x00007ff0012b51c3  ;*ifnonnull
                                                ; - java.lang.AbstractStringBuilder::append@1 (line 445)

  0x00007ff0012b4d03: cmp    (%rdx),%rax        ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x00007ff0012b520a
  0x00007ff0012b4d06: mov    %rdx,%rdi
  0x00007ff0012b4d09: movabs $0x7feffd6545a0,%rbx  ;   {metadata(method data for {method} {0x00007feffd498718} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007ff0012b4d13: mov    0x8(%rdi),%edi
  0x00007ff0012b4d16: shl    $0x3,%rdi
  0x00007ff0012b4d1a: cmp    0x140(%rbx),%rdi
  0x00007ff0012b4d21: jne    0x00007ff0012b4d30
  0x00007ff0012b4d23: addq   $0x1,0x148(%rbx)
  0x00007ff0012b4d2b: jmpq   0x00007ff0012b4d96
  0x00007ff0012b4d30: cmp    0x150(%rbx),%rdi
  0x00007ff0012b4d37: jne    0x00007ff0012b4d46
  0x00007ff0012b4d39: addq   $0x1,0x158(%rbx)
  0x00007ff0012b4d41: jmpq   0x00007ff0012b4d96
  0x00007ff0012b4d46: cmpq   $0x0,0x140(%rbx)
  0x00007ff0012b4d51: jne    0x00007ff0012b4d6a
  0x00007ff0012b4d53: mov    %rdi,0x140(%rbx)
  0x00007ff0012b4d5a: movq   $0x1,0x148(%rbx)
  0x00007ff0012b4d65: jmpq   0x00007ff0012b4d96
  0x00007ff0012b4d6a: cmpq   $0x0,0x150(%rbx)
  0x00007ff0012b4d75: jne    0x00007ff0012b4d8e
  0x00007ff0012b4d77: mov    %rdi,0x150(%rbx)
  0x00007ff0012b4d7e: movq   $0x1,0x158(%rbx)
  0x00007ff0012b4d89: jmpq   0x00007ff0012b4d96
  0x00007ff0012b4d8e: addq   $0x1,0x138(%rbx)
  0x00007ff0012b4d96: movabs $0x7feffd6246b8,%rdi  ;   {metadata(method data for {method} {0x00007feffd426c60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012b4da0: mov    0xdc(%rdi),%ebx
  0x00007ff0012b4da6: add    $0x8,%ebx
  0x00007ff0012b4da9: mov    %ebx,0xdc(%rdi)
  0x00007ff0012b4daf: movabs $0x7feffd426c60,%rdi  ;   {metadata({method} {0x00007feffd426c60} &apos;length&apos; &apos;()I&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012b4db9: and    $0x7ffff8,%ebx
  0x00007ff0012b4dbf: cmp    $0x0,%ebx
  0x00007ff0012b4dc2: je     0x00007ff0012b520f
  0x00007ff0012b4dc8: mov    0xc(%rdx),%edi
  0x00007ff0012b4dcb: shl    $0x3,%rdi          ;*getfield value
                                                ; - java.lang.String::length@1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)

  0x00007ff0012b4dcf: mov    0xc(%rdi),%edi     ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ; implicit exception: dispatches to 0x00007ff0012b5226
  0x00007ff0012b4dd2: mov    %edi,0xac(%rsp)
  0x00007ff0012b4dd9: mov    0xc(%rsi),%ebx     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@16 (line 448)

  0x00007ff0012b4ddc: add    %edi,%ebx
  0x00007ff0012b4dde: mov    %rsi,%rax
  0x00007ff0012b4de1: movabs $0x7feffd6545a0,%rcx  ;   {metadata(method data for {method} {0x00007feffd498718} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007ff0012b4deb: addq   $0x1,0x168(%rcx)
  0x00007ff0012b4df3: movabs $0x7feffd6249e8,%rax  ;   {metadata(method data for {method} {0x00007feffd497dc0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007ff0012b4dfd: mov    0xdc(%rax),%ecx
  0x00007ff0012b4e03: add    $0x8,%ecx
  0x00007ff0012b4e06: mov    %ecx,0xdc(%rax)
  0x00007ff0012b4e0c: movabs $0x7feffd497dc0,%rax  ;   {metadata({method} {0x00007feffd497dc0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007ff0012b4e16: and    $0x7ffff8,%ecx
  0x00007ff0012b4e1c: cmp    $0x0,%ecx
  0x00007ff0012b4e1f: je     0x00007ff0012b522b
  0x00007ff0012b4e25: mov    0x10(%rsi),%eax
  0x00007ff0012b4e28: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@2 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007ff0012b4e2c: mov    0xc(%rax),%ecx     ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ; implicit exception: dispatches to 0x00007ff0012b5242
  0x00007ff0012b4e2f: mov    %rbx,%r8
  0x00007ff0012b4e32: sub    %ecx,%r8d
  0x00007ff0012b4e35: cmp    $0x0,%r8d
  0x00007ff0012b4e39: movabs $0x7feffd6249e8,%r8  ;   {metadata(method data for {method} {0x00007feffd497dc0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007ff0012b4e43: movabs $0x108,%r9
  0x00007ff0012b4e4d: jle    0x00007ff0012b4e5d
  0x00007ff0012b4e53: movabs $0x118,%r9
  0x00007ff0012b4e5d: mov    (%r8,%r9,1),%r11
  0x00007ff0012b4e61: lea    0x1(%r11),%r11
  0x00007ff0012b4e65: mov    %r11,(%r8,%r9,1)
  0x00007ff0012b4e69: jg     0x00007ff0012b4e7c  ;*ifle
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@7 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007ff0012b4e6f: mov    %rdx,0xc0(%rsp)
  0x00007ff0012b4e77: jmpq   0x00007ff0012b50db  ;*return
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@26 (line 127)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007ff0012b4e7c: mov    %ecx,0xa8(%rsp)
  0x00007ff0012b4e83: mov    %rax,0xb0(%rsp)
  0x00007ff0012b4e8b: mov    %rdx,0xc0(%rsp)
  0x00007ff0012b4e93: mov    %rsi,%r8
  0x00007ff0012b4e96: movabs $0x7feffd6249e8,%r9  ;   {metadata(method data for {method} {0x00007feffd497dc0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007ff0012b4ea0: addq   $0x1,0x128(%r9)
  0x00007ff0012b4ea8: mov    %rbx,%rdx
  0x00007ff0012b4eab: mov    %rsi,%rbx
  0x00007ff0012b4eae: mov    %rbx,%rsi          ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007ff0012b4eb1: nop
  0x00007ff0012b4eb2: nop
  0x00007ff0012b4eb3: nop
  0x00007ff0012b4eb4: nop
  0x00007ff0012b4eb5: nop
  0x00007ff0012b4eb6: nop
  0x00007ff0012b4eb7: callq  0x00007ff001045de0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=604}
                                                ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {optimized virtual_call}
  0x00007ff0012b4ebc: mov    %rax,%r8           ;*invokespecial newCapacity
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@17 (line 125)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007ff0012b4ebf: movabs $0x7feffd6249e8,%rbx  ;   {metadata(method data for {method} {0x00007feffd497dc0} &apos;ensureCapacityInternal&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007ff0012b4ec9: addq   $0x1,0x138(%rbx)
  0x00007ff0012b4ed1: movabs $0x7feffd626310,%rbx  ;   {metadata(method data for {method} {0x00007feffd53ec88} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007ff0012b4edb: mov    0xdc(%rbx),%edx
  0x00007ff0012b4ee1: add    $0x8,%edx
  0x00007ff0012b4ee4: mov    %edx,0xdc(%rbx)
  0x00007ff0012b4eea: movabs $0x7feffd53ec88,%rbx  ;   {metadata({method} {0x00007feffd53ec88} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007ff0012b4ef4: and    $0x7ffff8,%edx
  0x00007ff0012b4efa: cmp    $0x0,%edx
  0x00007ff0012b4efd: je     0x00007ff0012b5247
  0x00007ff0012b4f03: mov    %r8,%rbx
  0x00007ff0012b4f06: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00007ff0012b4f10: movslq %ebx,%rbx
  0x00007ff0012b4f13: mov    %rbx,%rdi
  0x00007ff0012b4f16: cmp    $0xffffff,%rbx
  0x00007ff0012b4f1d: ja     0x00007ff0012b525e
  0x00007ff0012b4f23: movabs $0x17,%rsi
  0x00007ff0012b4f2d: lea    (%rsi,%rbx,2),%rsi
  0x00007ff0012b4f31: and    $0xfffffffffffffff8,%rsi
  0x00007ff0012b4f35: mov    0x60(%r15),%rax
  0x00007ff0012b4f39: lea    (%rax,%rsi,1),%rsi
  0x00007ff0012b4f3d: cmp    0x70(%r15),%rsi
  0x00007ff0012b4f41: ja     0x00007ff0012b525e
  0x00007ff0012b4f47: mov    %rsi,0x60(%r15)
  0x00007ff0012b4f4b: sub    %rax,%rsi
  0x00007ff0012b4f4e: movq   $0x1,(%rax)
  0x00007ff0012b4f55: mov    %rdx,%rcx
  0x00007ff0012b4f58: shr    $0x3,%rcx
  0x00007ff0012b4f5c: mov    %ecx,0x8(%rax)
  0x00007ff0012b4f5f: mov    %ebx,0xc(%rax)
  0x00007ff0012b4f62: sub    $0x10,%rsi
  0x00007ff0012b4f66: je     0x00007ff0012b4f7d
  0x00007ff0012b4f6c: xor    %rbx,%rbx
  0x00007ff0012b4f6f: shr    $0x3,%rsi
  0x00007ff0012b4f73: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007ff0012b4f78: dec    %rsi
  0x00007ff0012b4f7b: jne    0x00007ff0012b4f73  ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007ff0012b4f7d: movabs $0x7feffd626310,%rsi  ;   {metadata(method data for {method} {0x00007feffd53ec88} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007ff0012b4f87: addq   $0x1,0x108(%rsi)
  0x00007ff0012b4f8f: movabs $0x7feffd624558,%rsi  ;   {metadata(method data for {method} {0x00007feffd51a410} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007ff0012b4f99: mov    0xdc(%rsi),%edx
  0x00007ff0012b4f9f: add    $0x8,%edx
  0x00007ff0012b4fa2: mov    %edx,0xdc(%rsi)
  0x00007ff0012b4fa8: movabs $0x7feffd51a410,%rsi  ;   {metadata({method} {0x00007feffd51a410} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007ff0012b4fb2: and    $0x7ffff8,%edx
  0x00007ff0012b4fb8: cmp    $0x0,%edx
  0x00007ff0012b4fbb: je     0x00007ff0012b5268
  0x00007ff0012b4fc1: mov    0xa8(%rsp),%ecx
  0x00007ff0012b4fc8: cmp    %r8d,%ecx
  0x00007ff0012b4fcb: movabs $0x7feffd624558,%rsi  ;   {metadata(method data for {method} {0x00007feffd51a410} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007ff0012b4fd5: movabs $0x108,%rdx
  0x00007ff0012b4fdf: jg     0x00007ff0012b4fef
  0x00007ff0012b4fe5: movabs $0x118,%rdx
  0x00007ff0012b4fef: mov    (%rsi,%rdx,1),%r9
  0x00007ff0012b4ff3: lea    0x1(%r9),%r9
  0x00007ff0012b4ff7: mov    %r9,(%rsi,%rdx,1)
  0x00007ff0012b4ffb: jg     0x00007ff0012b5019  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007ff0012b5001: movabs $0x7feffd624558,%rsi  ;   {metadata(method data for {method} {0x00007feffd51a410} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007ff0012b500b: incl   0x128(%rsi)
  0x00007ff0012b5011: mov    %rcx,%r9
  0x00007ff0012b5014: jmpq   0x00007ff0012b501c  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007ff0012b5019: mov    %r8,%r9            ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007ff0012b501c: mov    0xb0(%rsp),%rsi
  0x00007ff0012b5024: movabs $0x7feffd626310,%rdx  ;   {metadata(method data for {method} {0x00007feffd53ec88} &apos;copyOf&apos; &apos;([CI)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007ff0012b502e: addq   $0x1,0x118(%rdx)
  0x00007ff0012b5036: mov    $0x0,%edx
  0x00007ff0012b503b: mov    %rax,%rcx
  0x00007ff0012b503e: mov    $0x0,%r8d
  0x00007ff0012b5044: mov    %rax,0xc8(%rsp)
  0x00007ff0012b504c: lea    (%rdx,%r9,1),%rdi
  0x00007ff0012b5050: cmp    0xc(%rsi),%edi
  0x00007ff0012b5053: ja     0x00007ff0012b527f
  0x00007ff0012b5059: lea    (%r8,%r9,1),%rdi
  0x00007ff0012b505d: cmp    0xc(%rcx),%edi
  0x00007ff0012b5060: ja     0x00007ff0012b527f
  0x00007ff0012b5066: test   %r9d,%r9d
  0x00007ff0012b5069: jl     0x00007ff0012b527f
  0x00007ff0012b506f: je     0x00007ff0012b50ab
  0x00007ff0012b5075: movslq %edx,%rdx
  0x00007ff0012b5078: movslq %r8d,%r8
  0x00007ff0012b507b: lea    0x10(%rsi,%rdx,2),%rdi
  0x00007ff0012b5080: lea    0x10(%rcx,%r8,2),%rsi
  0x00007ff0012b5085: mov    %r9,%rdx
  0x00007ff0012b5088: test   $0xf,%esp
  0x00007ff0012b508e: je     0x00007ff0012b50a6
  0x00007ff0012b5094: sub    $0x8,%rsp
  0x00007ff0012b5098: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007ff0012b509d: add    $0x8,%rsp
  0x00007ff0012b50a1: jmpq   0x00007ff0012b50ab
  0x00007ff0012b50a6: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007ff0012b50ab: mov    0xc8(%rsp),%rax
  0x00007ff0012b50b3: mov    0xb8(%rsp),%rsi
  0x00007ff0012b50bb: mov    %rax,%r10
  0x00007ff0012b50be: shr    $0x3,%r10
  0x00007ff0012b50c2: mov    %r10d,0x10(%rsi)
  0x00007ff0012b50c6: mov    %rsi,%rdx
  0x00007ff0012b50c9: shr    $0x9,%rdx
  0x00007ff0012b50cd: movabs $0x7ff013110000,%rcx
  0x00007ff0012b50d7: movb   $0x0,(%rdx,%rcx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@23 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)

  0x00007ff0012b50db: mov    0xac(%rsp),%ebx
  0x00007ff0012b50e2: mov    0xc0(%rsp),%rdi
  0x00007ff0012b50ea: mov    0x10(%rsi),%r8d
  0x00007ff0012b50ee: shl    $0x3,%r8           ;*getfield value
                                                ; - java.lang.AbstractStringBuilder::append@28 (line 449)

  0x00007ff0012b50f2: mov    0xc(%rsi),%r9d     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@32 (line 449)

  0x00007ff0012b50f6: mov    %rdi,%rdx
  0x00007ff0012b50f9: movabs $0x7feffd6545a0,%rcx  ;   {metadata(method data for {method} {0x00007feffd498718} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007ff0012b5103: mov    0x8(%rdx),%edx
  0x00007ff0012b5106: shl    $0x3,%rdx
  0x00007ff0012b510a: cmp    0x180(%rcx),%rdx
  0x00007ff0012b5111: jne    0x00007ff0012b5120
  0x00007ff0012b5113: addq   $0x1,0x188(%rcx)
  0x00007ff0012b511b: jmpq   0x00007ff0012b5186
  0x00007ff0012b5120: cmp    0x190(%rcx),%rdx
  0x00007ff0012b5127: jne    0x00007ff0012b5136
  0x00007ff0012b5129: addq   $0x1,0x198(%rcx)
  0x00007ff0012b5131: jmpq   0x00007ff0012b5186
  0x00007ff0012b5136: cmpq   $0x0,0x180(%rcx)
  0x00007ff0012b5141: jne    0x00007ff0012b515a
  0x00007ff0012b5143: mov    %rdx,0x180(%rcx)
  0x00007ff0012b514a: movq   $0x1,0x188(%rcx)
  0x00007ff0012b5155: jmpq   0x00007ff0012b5186
  0x00007ff0012b515a: cmpq   $0x0,0x190(%rcx)
  0x00007ff0012b5165: jne    0x00007ff0012b517e
  0x00007ff0012b5167: mov    %rdx,0x190(%rcx)
  0x00007ff0012b516e: movq   $0x1,0x198(%rcx)
  0x00007ff0012b5179: jmpq   0x00007ff0012b5186
  0x00007ff0012b517e: addq   $0x1,0x178(%rcx)
  0x00007ff0012b5186: mov    $0x0,%edx
  0x00007ff0012b518b: mov    %rbx,%rcx
  0x00007ff0012b518e: mov    %rdi,%rsi          ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)

  0x00007ff0012b5191: nop
  0x00007ff0012b5192: nop
  0x00007ff0012b5193: nop
  0x00007ff0012b5194: nop
  0x00007ff0012b5195: nop
  0x00007ff0012b5196: nop
  0x00007ff0012b5197: callq  0x00007ff001045de0  ; OopMap{[184]=Oop off=1340}
                                                ;*invokevirtual getChars
                                                ; - java.lang.AbstractStringBuilder::append@35 (line 449)
                                                ;   {optimized virtual_call}
  0x00007ff0012b519c: mov    0xb8(%rsp),%rsi
  0x00007ff0012b51a4: mov    0xc(%rsi),%eax     ;*getfield count
                                                ; - java.lang.AbstractStringBuilder::append@40 (line 450)

  0x00007ff0012b51a7: add    0xac(%rsp),%eax
  0x00007ff0012b51ae: mov    %eax,0xc(%rsi)     ;*putfield count
                                                ; - java.lang.AbstractStringBuilder::append@45 (line 450)

  0x00007ff0012b51b1: mov    %rsi,%rax
  0x00007ff0012b51b4: add    $0xe0,%rsp
  0x00007ff0012b51bb: pop    %rbp
  0x00007ff0012b51bc: test   %eax,0x17265f3e(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012b51c2: retq                      ;*areturn
                                                ; - java.lang.AbstractStringBuilder::append@49 (line 451)

  0x00007ff0012b51c3: mov    %rsi,%rdi
  0x00007ff0012b51c6: movabs $0x7feffd6545a0,%rbx  ;   {metadata(method data for {method} {0x00007feffd498718} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007ff0012b51d0: addq   $0x1,0x128(%rbx)
  0x00007ff0012b51d8: nop
  0x00007ff0012b51d9: nop
  0x00007ff0012b51da: nop
  0x00007ff0012b51db: nop
  0x00007ff0012b51dc: nop
  0x00007ff0012b51dd: nop
  0x00007ff0012b51de: nop
  0x00007ff0012b51df: callq  0x00007ff001045de0  ; OopMap{off=1412}
                                                ;*invokespecial appendNull
                                                ; - java.lang.AbstractStringBuilder::append@5 (line 446)
                                                ;   {optimized virtual_call}
  0x00007ff0012b51e4: add    $0xe0,%rsp
  0x00007ff0012b51eb: pop    %rbp
  0x00007ff0012b51ec: test   %eax,0x17265f0e(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012b51f2: retq   
  0x00007ff0012b51f3: mov    %rdi,0x8(%rsp)
  0x00007ff0012b51f8: movq   $0xffffffffffffffff,(%rsp)
  0x00007ff0012b5200: callq  0x00007ff0012175e0  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1445}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::append@-1 (line 445)
                                                ;   {runtime_call}
  0x00007ff0012b5205: jmpq   0x00007ff0012b4cc9
  0x00007ff0012b520a: callq  0x00007ff001186e80  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1455}
                                                ;*invokevirtual length
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x00007ff0012b520f: mov    %rdi,0x8(%rsp)
  0x00007ff0012b5214: movq   $0xffffffffffffffff,(%rsp)
  0x00007ff0012b521c: callq  0x00007ff0012175e0  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1473}
                                                ;*synchronization entry
                                                ; - java.lang.String::length@-1 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x00007ff0012b5221: jmpq   0x00007ff0012b4dc8
  0x00007ff0012b5226: callq  0x00007ff001186e80  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1483}
                                                ;*arraylength
                                                ; - java.lang.String::length@4 (line 623)
                                                ; - java.lang.AbstractStringBuilder::append@10 (line 447)
                                                ;   {runtime_call}
  0x00007ff0012b522b: mov    %rax,0x8(%rsp)
  0x00007ff0012b5230: movq   $0xffffffffffffffff,(%rsp)
  0x00007ff0012b5238: callq  0x00007ff0012175e0  ; OopMap{rsi=Oop [184]=Oop rdx=Oop off=1501}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@-1 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007ff0012b523d: jmpq   0x00007ff0012b4e25
  0x00007ff0012b5242: callq  0x00007ff001186e80  ; OopMap{rsi=Oop [184]=Oop rdx=Oop rax=Oop off=1511}
                                                ;*arraylength
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@5 (line 123)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007ff0012b5247: mov    %rbx,0x8(%rsp)
  0x00007ff0012b524c: movq   $0xffffffffffffffff,(%rsp)
  0x00007ff0012b5254: callq  0x00007ff0012175e0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1529}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOf@-1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007ff0012b5259: jmpq   0x00007ff0012b4f03
  0x00007ff0012b525e: callq  0x00007ff001216120  ; OopMap{[184]=Oop [192]=Oop [176]=Oop off=1539}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOf@1 (line 3332)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007ff0012b5263: jmpq   0x00007ff0012b4f7d
  0x00007ff0012b5268: mov    %rsi,0x8(%rsp)
  0x00007ff0012b526d: movq   $0xffffffffffffffff,(%rsp)
  0x00007ff0012b5275: callq  0x00007ff0012175e0  ; OopMap{[184]=Oop [192]=Oop [176]=Oop rax=Oop off=1562}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOf@11 (line 3334)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {runtime_call}
  0x00007ff0012b527a: jmpq   0x00007ff0012b4fc1
  0x00007ff0012b527f: callq  0x00007ff001046260  ; OopMap{[184]=Oop [192]=Oop [200]=Oop off=1572}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOf@14 (line 3333)
                                                ; - java.lang.AbstractStringBuilder::ensureCapacityInternal@20 (line 124)
                                                ; - java.lang.AbstractStringBuilder::append@21 (line 448)
                                                ;   {static_call}
  0x00007ff0012b5284: jmpq   0x00007ff0012b50ab
  0x00007ff0012b5289: nop
  0x00007ff0012b528a: nop
  0x00007ff0012b528b: mov    0x310(%r15),%rax
  0x00007ff0012b5292: movabs $0x0,%r10
  0x00007ff0012b529c: mov    %r10,0x310(%r15)
  0x00007ff0012b52a3: movabs $0x0,%r10
  0x00007ff0012b52ad: mov    %r10,0x318(%r15)
  0x00007ff0012b52b4: add    $0xe0,%rsp
  0x00007ff0012b52bb: pop    %rbp
  0x00007ff0012b52bc: jmpq   0x00007ff00106cba0  ;   {runtime_call}
  0x00007ff0012b52c1: hlt    
  0x00007ff0012b52c2: hlt    
  0x00007ff0012b52c3: hlt    
  0x00007ff0012b52c4: hlt    
  0x00007ff0012b52c5: hlt    
  0x00007ff0012b52c6: hlt    
  0x00007ff0012b52c7: hlt    
  0x00007ff0012b52c8: hlt    
  0x00007ff0012b52c9: hlt    
  0x00007ff0012b52ca: hlt    
  0x00007ff0012b52cb: hlt    
  0x00007ff0012b52cc: hlt    
  0x00007ff0012b52cd: hlt    
  0x00007ff0012b52ce: hlt    
  0x00007ff0012b52cf: hlt    
  0x00007ff0012b52d0: hlt    
  0x00007ff0012b52d1: hlt    
  0x00007ff0012b52d2: hlt    
  0x00007ff0012b52d3: hlt    
  0x00007ff0012b52d4: hlt    
  0x00007ff0012b52d5: hlt    
  0x00007ff0012b52d6: hlt    
  0x00007ff0012b52d7: hlt    
  0x00007ff0012b52d8: hlt    
  0x00007ff0012b52d9: hlt    
  0x00007ff0012b52da: hlt    
  0x00007ff0012b52db: hlt    
  0x00007ff0012b52dc: hlt    
  0x00007ff0012b52dd: hlt    
  0x00007ff0012b52de: hlt    
  0x00007ff0012b52df: hlt    
[Stub Code]
  0x00007ff0012b52e0: nop                       ;   {no_reloc}
  0x00007ff0012b52e1: nop
  0x00007ff0012b52e2: nop
  0x00007ff0012b52e3: nop
  0x00007ff0012b52e4: nop
  0x00007ff0012b52e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007ff0012b52ef: jmpq   0x00007ff0012b52ef  ;   {runtime_call}
  0x00007ff0012b52f4: nop
  0x00007ff0012b52f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007ff0012b52ff: jmpq   0x00007ff0012b52ff  ;   {runtime_call}
  0x00007ff0012b5304: nop
  0x00007ff0012b5305: movabs $0x0,%rbx          ;   {static_stub}
  0x00007ff0012b530f: jmpq   0x00007ff0012b530f  ;   {runtime_call}
  0x00007ff0012b5314: nop
  0x00007ff0012b5315: movabs $0x0,%rbx          ;   {static_stub}
  0x00007ff0012b531f: jmpq   0x00007ff0012b531f  ;   {runtime_call}
[Exception Handler]
  0x00007ff0012b5324: callq  0x00007ff0012186e0  ;   {runtime_call}
  0x00007ff0012b5329: mov    %rsp,-0x28(%rsp)
  0x00007ff0012b532e: sub    $0x80,%rsp
  0x00007ff0012b5335: mov    %rax,0x78(%rsp)
  0x00007ff0012b533a: mov    %rcx,0x70(%rsp)
  0x00007ff0012b533f: mov    %rdx,0x68(%rsp)
  0x00007ff0012b5344: mov    %rbx,0x60(%rsp)
  0x00007ff0012b5349: mov    %rbp,0x50(%rsp)
  0x00007ff0012b534e: mov    %rsi,0x48(%rsp)
  0x00007ff0012b5353: mov    %rdi,0x40(%rsp)
  0x00007ff0012b5358: mov    %r8,0x38(%rsp)
  0x00007ff0012b535d: mov    %r9,0x30(%rsp)
  0x00007ff0012b5362: mov    %r10,0x28(%rsp)
  0x00007ff0012b5367: mov    %r11,0x20(%rsp)
  0x00007ff0012b536c: mov    %r12,0x18(%rsp)
  0x00007ff0012b5371: mov    %r13,0x10(%rsp)
  0x00007ff0012b5376: mov    %r14,0x8(%rsp)
  0x00007ff0012b537b: mov    %r15,(%rsp)
  0x00007ff0012b537f: movabs $0x7ff017f80bfe,%rdi  ;   {external_word}
  0x00007ff0012b5389: movabs $0x7ff0012b5329,%rsi  ;   {internal_word}
  0x00007ff0012b5393: mov    %rsp,%rdx
  0x00007ff0012b5396: and    $0xfffffffffffffff0,%rsp
  0x00007ff0012b539a: callq  0x00007ff017c8f7f0  ;   {runtime_call}
  0x00007ff0012b539f: hlt    
[Deopt Handler Code]
  0x00007ff0012b53a0: movabs $0x7ff0012b53a0,%r10  ;   {section_word}
  0x00007ff0012b53aa: push   %r10
  0x00007ff0012b53ac: jmpq   0x00007ff001046e40  ;   {runtime_call}
  0x00007ff0012b53b1: hlt    
  0x00007ff0012b53b2: hlt    
  0x00007ff0012b53b3: hlt    
  0x00007ff0012b53b4: hlt    
  0x00007ff0012b53b5: hlt    
  0x00007ff0012b53b6: hlt    
  0x00007ff0012b53b7: hlt    
<nmethod compile_id='12' compiler='C1' level='3' entry='0x00007ff0012b4c60' size='3456' address='0x00007ff0012b4a90' relocation_offset='296' insts_offset='464' stub_offset='2128' scopes_data_offset='2384' scopes_pcs_offset='2792' dependencies_offset='3416' nul_chk_table_offset='3424' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='260' iicount='260' stamp='0.368'/>
<writer thread='140669158946496'/>
<task_queued compile_id='14' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='256' iicount='256' level='3' stamp='0.368' comment='tiered' hot_count='256'/>
<task_queued compile_id='15' method='java/lang/ThreadLocal access$400 (Ljava/lang/ThreadLocal;)I' bytes='5' count='128' iicount='128' level='1' stamp='0.368' comment='tiered' hot_count='128'/>
<task_queued compile_id='16' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='256' iicount='256' level='3' stamp='0.368' comment='tiered' hot_count='256'/>
<task_queued compile_id='17' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='256' iicount='256' level='3' stamp='0.369' comment='tiered' hot_count='256'/>
<writer thread='140668587435712'/>
Decoding compiled method 0x00007ff0012b5850:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007feffd529488} &apos;access$400&apos; &apos;(Ljava/lang/ThreadLocal;)I&apos; in &apos;java/lang/ThreadLocal&apos;
  # parm0:    rsi:rsi   = &apos;java/lang/ThreadLocal&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007ff0012b59a0: mov    %eax,-0x14000(%rsp)
  0x00007ff0012b59a7: push   %rbp
  0x00007ff0012b59a8: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.lang.ThreadLocal::access$400@0 (line 76)

  0x00007ff0012b59ac: mov    0xc(%rsi),%eax     ;*getfield threadLocalHashCode
                                                ; - java.lang.ThreadLocal::access$400@1 (line 76)
                                                ; implicit exception: dispatches to 0x00007ff0012b59bb
  0x00007ff0012b59af: add    $0x30,%rsp
  0x00007ff0012b59b3: pop    %rbp
  0x00007ff0012b59b4: test   %eax,0x17265746(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012b59ba: retq   
  0x00007ff0012b59bb: callq  0x00007ff001186e80  ; OopMap{off=32}
                                                ;*getfield threadLocalHashCode
                                                ; - java.lang.ThreadLocal::access$400@1 (line 76)
                                                ;   {runtime_call}
  0x00007ff0012b59c0: nop
  0x00007ff0012b59c1: nop
  0x00007ff0012b59c2: mov    0x310(%r15),%rax
  0x00007ff0012b59c9: movabs $0x0,%r10
  0x00007ff0012b59d3: mov    %r10,0x310(%r15)
  0x00007ff0012b59da: movabs $0x0,%r10
  0x00007ff0012b59e4: mov    %r10,0x318(%r15)
  0x00007ff0012b59eb: add    $0x30,%rsp
  0x00007ff0012b59ef: pop    %rbp
  0x00007ff0012b59f0: jmpq   0x00007ff00106cba0  ;   {runtime_call}
  0x00007ff0012b59f5: hlt    
  0x00007ff0012b59f6: hlt    
  0x00007ff0012b59f7: hlt    
  0x00007ff0012b59f8: hlt    
  0x00007ff0012b59f9: hlt    
  0x00007ff0012b59fa: hlt    
  0x00007ff0012b59fb: hlt    
  0x00007ff0012b59fc: hlt    
  0x00007ff0012b59fd: hlt    
  0x00007ff0012b59fe: hlt    
  0x00007ff0012b59ff: hlt    
[Exception Handler]
[Stub Code]
  0x00007ff0012b5a00: callq  0x00007ff0012186e0  ;   {no_reloc}
  0x00007ff0012b5a05: mov    %rsp,-0x28(%rsp)
  0x00007ff0012b5a0a: sub    $0x80,%rsp
  0x00007ff0012b5a11: mov    %rax,0x78(%rsp)
  0x00007ff0012b5a16: mov    %rcx,0x70(%rsp)
  0x00007ff0012b5a1b: mov    %rdx,0x68(%rsp)
  0x00007ff0012b5a20: mov    %rbx,0x60(%rsp)
  0x00007ff0012b5a25: mov    %rbp,0x50(%rsp)
  0x00007ff0012b5a2a: mov    %rsi,0x48(%rsp)
  0x00007ff0012b5a2f: mov    %rdi,0x40(%rsp)
  0x00007ff0012b5a34: mov    %r8,0x38(%rsp)
  0x00007ff0012b5a39: mov    %r9,0x30(%rsp)
  0x00007ff0012b5a3e: mov    %r10,0x28(%rsp)
  0x00007ff0012b5a43: mov    %r11,0x20(%rsp)
  0x00007ff0012b5a48: mov    %r12,0x18(%rsp)
  0x00007ff0012b5a4d: mov    %r13,0x10(%rsp)
  0x00007ff0012b5a52: mov    %r14,0x8(%rsp)
  0x00007ff0012b5a57: mov    %r15,(%rsp)
  0x00007ff0012b5a5b: movabs $0x7ff017f80bfe,%rdi  ;   {external_word}
  0x00007ff0012b5a65: movabs $0x7ff0012b5a05,%rsi  ;   {internal_word}
  0x00007ff0012b5a6f: mov    %rsp,%rdx
  0x00007ff0012b5a72: and    $0xfffffffffffffff0,%rsp
  0x00007ff0012b5a76: callq  0x00007ff017c8f7f0  ;   {runtime_call}
  0x00007ff0012b5a7b: hlt    
[Deopt Handler Code]
  0x00007ff0012b5a7c: movabs $0x7ff0012b5a7c,%r10  ;   {section_word}
  0x00007ff0012b5a86: push   %r10
  0x00007ff0012b5a88: jmpq   0x00007ff001046e40  ;   {runtime_call}
  0x00007ff0012b5a8d: hlt    
  0x00007ff0012b5a8e: hlt    
  0x00007ff0012b5a8f: hlt    
<nmethod compile_id='15' compiler='C1' level='1' entry='0x00007ff0012b59a0' size='712' address='0x00007ff0012b5850' relocation_offset='296' insts_offset='336' stub_offset='432' scopes_data_offset='584' scopes_pcs_offset='608' dependencies_offset='688' nul_chk_table_offset='696' method='java/lang/ThreadLocal access$400 (Ljava/lang/ThreadLocal;)I' bytes='5' count='135' iicount='135' stamp='0.376'/>
<writer thread='140669158946496'/>
<task_queued compile_id='18' method='java/io/File getPath ()Ljava/lang/String;' bytes='5' count='128' iicount='128' level='1' stamp='0.376' comment='tiered' hot_count='128'/>
<writer thread='140668585330368'/>
Decoding compiled method 0x00007ff0012b5b50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007feffd43c6e0} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007ff0012b5ca0: mov    %eax,-0x14000(%rsp)
  0x00007ff0012b5ca7: push   %rbp
  0x00007ff0012b5ca8: sub    $0x30,%rsp
  0x00007ff0012b5cac: movabs $0x7feffd660040,%rax  ;   {metadata(method data for {method} {0x00007feffd43c6e0} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x00007ff0012b5cb6: mov    0xdc(%rax),%esi
  0x00007ff0012b5cbc: add    $0x8,%esi
  0x00007ff0012b5cbf: mov    %esi,0xdc(%rax)
  0x00007ff0012b5cc5: movabs $0x7feffd43c6e0,%rax  ;   {metadata({method} {0x00007feffd43c6e0} &apos;getSecurityManager&apos; &apos;()Ljava/lang/SecurityManager;&apos; in &apos;java/lang/System&apos;)}
  0x00007ff0012b5ccf: and    $0x1ff8,%esi
  0x00007ff0012b5cd5: cmp    $0x0,%esi
  0x00007ff0012b5cd8: je     0x00007ff0012b5cfb
  0x00007ff0012b5cde: movabs $0x674180c78,%rax  ;   {oop(a &apos;java/lang/Class&apos; = &apos;java/lang/System&apos;)}
  0x00007ff0012b5ce8: mov    0x74(%rax),%eax
  0x00007ff0012b5ceb: shl    $0x3,%rax          ;*getstatic security
                                                ; - java.lang.System::getSecurityManager@0 (line 336)

  0x00007ff0012b5cef: add    $0x30,%rsp
  0x00007ff0012b5cf3: pop    %rbp
  0x00007ff0012b5cf4: test   %eax,0x17265406(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012b5cfa: retq   
  0x00007ff0012b5cfb: mov    %rax,0x8(%rsp)
  0x00007ff0012b5d00: movq   $0xffffffffffffffff,(%rsp)
  0x00007ff0012b5d08: callq  0x00007ff0012175e0  ; OopMap{off=109}
                                                ;*synchronization entry
                                                ; - java.lang.System::getSecurityManager@-1 (line 336)
                                                ;   {runtime_call}
  0x00007ff0012b5d0d: jmp    0x00007ff0012b5cde
  0x00007ff0012b5d0f: nop
  0x00007ff0012b5d10: nop
  0x00007ff0012b5d11: mov    0x310(%r15),%rax
  0x00007ff0012b5d18: movabs $0x0,%r10
  0x00007ff0012b5d22: mov    %r10,0x310(%r15)
  0x00007ff0012b5d29: movabs $0x0,%r10
  0x00007ff0012b5d33: mov    %r10,0x318(%r15)
  0x00007ff0012b5d3a: add    $0x30,%rsp
  0x00007ff0012b5d3e: pop    %rbp
  0x00007ff0012b5d3f: jmpq   0x00007ff00106cba0  ;   {runtime_call}
  0x00007ff0012b5d44: hlt    
  0x00007ff0012b5d45: hlt    
  0x00007ff0012b5d46: hlt    
  0x00007ff0012b5d47: hlt    
  0x00007ff0012b5d48: hlt    
  0x00007ff0012b5d49: hlt    
  0x00007ff0012b5d4a: hlt    
  0x00007ff0012b5d4b: hlt    
  0x00007ff0012b5d4c: hlt    
  0x00007ff0012b5d4d: hlt    
  0x00007ff0012b5d4e: hlt    
  0x00007ff0012b5d4f: hlt    
  0x00007ff0012b5d50: hlt    
  0x00007ff0012b5d51: hlt    
  0x00007ff0012b5d52: hlt    
  0x00007ff0012b5d53: hlt    
  0x00007ff0012b5d54: hlt    
  0x00007ff0012b5d55: hlt    
  0x00007ff0012b5d56: hlt    
  0x00007ff0012b5d57: hlt    
  0x00007ff0012b5d58: hlt    
  0x00007ff0012b5d59: hlt    
  0x00007ff0012b5d5a: hlt    
  0x00007ff0012b5d5b: hlt    
  0x00007ff0012b5d5c: hlt    
  0x00007ff0012b5d5d: hlt    
  0x00007ff0012b5d5e: hlt    
  0x00007ff0012b5d5f: hlt    
[Exception Handler]
[Stub Code]
  0x00007ff0012b5d60: callq  0x00007ff0012186e0  ;   {no_reloc}
  0x00007ff0012b5d65: mov    %rsp,-0x28(%rsp)
  0x00007ff0012b5d6a: sub    $0x80,%rsp
  0x00007ff0012b5d71: mov    %rax,0x78(%rsp)
  0x00007ff0012b5d76: mov    %rcx,0x70(%rsp)
  0x00007ff0012b5d7b: mov    %rdx,0x68(%rsp)
  0x00007ff0012b5d80: mov    %rbx,0x60(%rsp)
  0x00007ff0012b5d85: mov    %rbp,0x50(%rsp)
  0x00007ff0012b5d8a: mov    %rsi,0x48(%rsp)
  0x00007ff0012b5d8f: mov    %rdi,0x40(%rsp)
  0x00007ff0012b5d94: mov    %r8,0x38(%rsp)
  0x00007ff0012b5d99: mov    %r9,0x30(%rsp)
  0x00007ff0012b5d9e: mov    %r10,0x28(%rsp)
  0x00007ff0012b5da3: mov    %r11,0x20(%rsp)
  0x00007ff0012b5da8: mov    %r12,0x18(%rsp)
  0x00007ff0012b5dad: mov    %r13,0x10(%rsp)
  0x00007ff0012b5db2: mov    %r14,0x8(%rsp)
  0x00007ff0012b5db7: mov    %r15,(%rsp)
  0x00007ff0012b5dbb: movabs $0x7ff017f80bfe,%rdi  ;   {external_word}
  0x00007ff0012b5dc5: movabs $0x7ff0012b5d65,%rsi  ;   {internal_word}
  0x00007ff0012b5dcf: mov    %rsp,%rdx
  0x00007ff0012b5dd2: and    $0xfffffffffffffff0,%rsp
  0x00007ff0012b5dd6: callq  0x00007ff017c8f7f0  ;   {runtime_call}
  0x00007ff0012b5ddb: hlt    
[Deopt Handler Code]
  0x00007ff0012b5ddc: movabs $0x7ff0012b5ddc,%r10  ;   {section_word}
  0x00007ff0012b5de6: push   %r10
  0x00007ff0012b5de8: jmpq   0x00007ff001046e40  ;   {runtime_call}
  0x00007ff0012b5ded: hlt    
  0x00007ff0012b5dee: hlt    
  0x00007ff0012b5def: hlt    
<nmethod compile_id='16' compiler='C1' level='3' entry='0x00007ff0012b5ca0' size='768' address='0x00007ff0012b5b50' relocation_offset='296' insts_offset='336' stub_offset='528' scopes_data_offset='680' scopes_pcs_offset='696' dependencies_offset='760' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='276' iicount='276' stamp='0.385'/>
<writer thread='140668587435712'/>
Decoding compiled method 0x00007ff0012b5e90:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007feffd4a8420} &apos;getPath&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/io/File&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007ff0012b5fe0: mov    0x8(%rsi),%r10d
  0x00007ff0012b5fe4: shl    $0x3,%r10
  0x00007ff0012b5fe8: cmp    %rax,%r10
  0x00007ff0012b5feb: jne    0x00007ff001045ba0  ;   {runtime_call}
  0x00007ff0012b5ff1: nopl   0x0(%rax,%rax,1)
  0x00007ff0012b5ff9: nopl   0x0(%rax)
[Verified Entry Point]
  0x00007ff0012b6000: mov    %eax,-0x14000(%rsp)
  0x00007ff0012b6007: push   %rbp
  0x00007ff0012b6008: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.io.File::getPath@0 (line 517)

  0x00007ff0012b600c: mov    0x10(%rsi),%eax
  0x00007ff0012b600f: shl    $0x3,%rax          ;*getfield path
                                                ; - java.io.File::getPath@1 (line 517)

  0x00007ff0012b6013: add    $0x30,%rsp
  0x00007ff0012b6017: pop    %rbp
  0x00007ff0012b6018: test   %eax,0x172650e2(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012b601e: retq   
  0x00007ff0012b601f: nop
  0x00007ff0012b6020: nop
  0x00007ff0012b6021: mov    0x310(%r15),%rax
  0x00007ff0012b6028: movabs $0x0,%r10
  0x00007ff0012b6032: mov    %r10,0x310(%r15)
  0x00007ff0012b6039: movabs $0x0,%r10
  0x00007ff0012b6043: mov    %r10,0x318(%r15)
  0x00007ff0012b604a: add    $0x30,%rsp
  0x00007ff0012b604e: pop    %rbp
  0x00007ff0012b604f: jmpq   0x00007ff00106cba0  ;   {runtime_call}
  0x00007ff0012b6054: hlt    
  0x00007ff0012b6055: hlt    
  0x00007ff0012b6056: hlt    
  0x00007ff0012b6057: hlt    
  0x00007ff0012b6058: hlt    
  0x00007ff0012b6059: hlt    
  0x00007ff0012b605a: hlt    
  0x00007ff0012b605b: hlt    
  0x00007ff0012b605c: hlt    
  0x00007ff0012b605d: hlt    
  0x00007ff0012b605e: hlt    
  0x00007ff0012b605f: hlt    
[Exception Handler]
[Stub Code]
  0x00007ff0012b6060: callq  0x00007ff0012186e0  ;   {no_reloc}
  0x00007ff0012b6065: mov    %rsp,-0x28(%rsp)
  0x00007ff0012b606a: sub    $0x80,%rsp
  0x00007ff0012b6071: mov    %rax,0x78(%rsp)
  0x00007ff0012b6076: mov    %rcx,0x70(%rsp)
  0x00007ff0012b607b: mov    %rdx,0x68(%rsp)
  0x00007ff0012b6080: mov    %rbx,0x60(%rsp)
  0x00007ff0012b6085: mov    %rbp,0x50(%rsp)
  0x00007ff0012b608a: mov    %rsi,0x48(%rsp)
  0x00007ff0012b608f: mov    %rdi,0x40(%rsp)
  0x00007ff0012b6094: mov    %r8,0x38(%rsp)
  0x00007ff0012b6099: mov    %r9,0x30(%rsp)
  0x00007ff0012b609e: mov    %r10,0x28(%rsp)
  0x00007ff0012b60a3: mov    %r11,0x20(%rsp)
  0x00007ff0012b60a8: mov    %r12,0x18(%rsp)
  0x00007ff0012b60ad: mov    %r13,0x10(%rsp)
  0x00007ff0012b60b2: mov    %r14,0x8(%rsp)
  0x00007ff0012b60b7: mov    %r15,(%rsp)
  0x00007ff0012b60bb: movabs $0x7ff017f80bfe,%rdi  ;   {external_word}
  0x00007ff0012b60c5: movabs $0x7ff0012b6065,%rsi  ;   {internal_word}
  0x00007ff0012b60cf: mov    %rsp,%rdx
  0x00007ff0012b60d2: and    $0xfffffffffffffff0,%rsp
  0x00007ff0012b60d6: callq  0x00007ff017c8f7f0  ;   {runtime_call}
  0x00007ff0012b60db: hlt    
[Deopt Handler Code]
  0x00007ff0012b60dc: movabs $0x7ff0012b60dc,%r10  ;   {section_word}
  0x00007ff0012b60e6: push   %r10
  0x00007ff0012b60e8: jmpq   0x00007ff001046e40  ;   {runtime_call}
  0x00007ff0012b60ed: hlt    
  0x00007ff0012b60ee: hlt    
  0x00007ff0012b60ef: hlt    
<nmethod compile_id='18' compiler='C1' level='1' entry='0x00007ff0012b5fe0' size='704' address='0x00007ff0012b5e90' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/io/File getPath ()Ljava/lang/String;' bytes='5' count='173' iicount='173' stamp='0.396'/>
<writer thread='140668588488384'/>
Decoding compiled method 0x00007ff0012b6190:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007feffd4261a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;[C&apos;
  # parm1:    rcx       = int
  # parm2:    r8        = int
  #           [sp+0x70]  (sp of caller)
  0x00007ff0012b6360: mov    0x8(%rsi),%r10d
  0x00007ff0012b6364: shl    $0x3,%r10
  0x00007ff0012b6368: cmp    %rax,%r10
  0x00007ff0012b636b: jne    0x00007ff001045ba0  ;   {runtime_call}
  0x00007ff0012b6371: nopl   0x0(%rax,%rax,1)
  0x00007ff0012b6379: nopl   0x0(%rax)
[Verified Entry Point]
  0x00007ff0012b6380: mov    %eax,-0x14000(%rsp)
  0x00007ff0012b6387: push   %rbp
  0x00007ff0012b6388: sub    $0x60,%rsp
  0x00007ff0012b638c: movabs $0x7feffd6604f8,%rdi  ;   {metadata(method data for {method} {0x00007feffd4261a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012b6396: mov    0xdc(%rdi),%ebx
  0x00007ff0012b639c: add    $0x8,%ebx
  0x00007ff0012b639f: mov    %ebx,0xdc(%rdi)
  0x00007ff0012b63a5: movabs $0x7feffd4261a0,%rdi  ;   {metadata({method} {0x00007feffd4261a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012b63af: and    $0x1ff8,%ebx
  0x00007ff0012b63b5: cmp    $0x0,%ebx
  0x00007ff0012b63b8: je     0x00007ff0012b6686  ;*aload_0
                                                ; - java.lang.String::&lt;init&gt;@0 (line 190)

  0x00007ff0012b63be: mov    %rsi,%rdi
  0x00007ff0012b63c1: movabs $0x7feffd6604f8,%rbx  ;   {metadata(method data for {method} {0x00007feffd4261a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012b63cb: addq   $0x1,0x108(%rbx)
  0x00007ff0012b63d3: movabs $0x7feffd59c9f0,%rdi  ;   {metadata(method data for {method} {0x00007feffd423480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007ff0012b63dd: mov    0xdc(%rdi),%ebx
  0x00007ff0012b63e3: add    $0x8,%ebx
  0x00007ff0012b63e6: mov    %ebx,0xdc(%rdi)
  0x00007ff0012b63ec: movabs $0x7feffd423480,%rdi  ;   {metadata({method} {0x00007feffd423480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007ff0012b63f6: and    $0x7ffff8,%ebx
  0x00007ff0012b63fc: cmp    $0x0,%ebx
  0x00007ff0012b63ff: je     0x00007ff0012b669d
  0x00007ff0012b6405: cmp    $0x0,%ecx
  0x00007ff0012b6408: movabs $0x7feffd6604f8,%rdi  ;   {metadata(method data for {method} {0x00007feffd4261a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012b6412: movabs $0x118,%rbx
  0x00007ff0012b641c: jge    0x00007ff0012b642c
  0x00007ff0012b6422: movabs $0x128,%rbx
  0x00007ff0012b642c: mov    (%rdi,%rbx,1),%rax
  0x00007ff0012b6430: lea    0x1(%rax),%rax
  0x00007ff0012b6434: mov    %rax,(%rdi,%rbx,1)
  0x00007ff0012b6438: jl     0x00007ff0012b6646  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@5 (line 191)

  0x00007ff0012b643e: cmp    $0x0,%r8d
  0x00007ff0012b6442: movabs $0x7feffd6604f8,%rdi  ;   {metadata(method data for {method} {0x00007feffd4261a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012b644c: movabs $0x148,%rbx
  0x00007ff0012b6456: jg     0x00007ff0012b6466
  0x00007ff0012b645c: movabs $0x158,%rbx
  0x00007ff0012b6466: mov    (%rdi,%rbx,1),%rax
  0x00007ff0012b646a: lea    0x1(%rax),%rax
  0x00007ff0012b646e: mov    %rax,(%rdi,%rbx,1)
  0x00007ff0012b6472: jg     0x00007ff0012b64ed  ;*ifgt
                                                ; - java.lang.String::&lt;init&gt;@18 (line 194)

  0x00007ff0012b6478: cmp    $0x0,%r8d
  0x00007ff0012b647c: movabs $0x7feffd6604f8,%rdi  ;   {metadata(method data for {method} {0x00007feffd4261a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012b6486: movabs $0x168,%rbx
  0x00007ff0012b6490: jge    0x00007ff0012b64a0
  0x00007ff0012b6496: movabs $0x178,%rbx
  0x00007ff0012b64a0: mov    (%rdi,%rbx,1),%rax
  0x00007ff0012b64a4: lea    0x1(%rax),%rax
  0x00007ff0012b64a8: mov    %rax,(%rdi,%rbx,1)
  0x00007ff0012b64ac: jl     0x00007ff0012b6606  ;*ifge
                                                ; - java.lang.String::&lt;init&gt;@22 (line 195)

  0x00007ff0012b64b2: mov    0xc(%rdx),%edi     ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ; implicit exception: dispatches to 0x00007ff0012b66b4
  0x00007ff0012b64b5: cmp    %edi,%ecx
  0x00007ff0012b64b7: movabs $0x7feffd6604f8,%rdi  ;   {metadata(method data for {method} {0x00007feffd4261a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012b64c1: movabs $0x198,%rbx
  0x00007ff0012b64cb: jg     0x00007ff0012b64db
  0x00007ff0012b64d1: movabs $0x1a8,%rbx
  0x00007ff0012b64db: mov    (%rdi,%rbx,1),%rax
  0x00007ff0012b64df: lea    0x1(%rax),%rax
  0x00007ff0012b64e3: mov    %rax,(%rdi,%rbx,1)
  0x00007ff0012b64e7: jle    0x00007ff0012b6582  ;*if_icmpgt
                                                ; - java.lang.String::&lt;init&gt;@37 (line 198)

  0x00007ff0012b64ed: mov    0xc(%rdx),%edi     ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ; implicit exception: dispatches to 0x00007ff0012b66b9
  0x00007ff0012b64f0: sub    %r8d,%edi
  0x00007ff0012b64f3: cmp    %edi,%ecx
  0x00007ff0012b64f5: movabs $0x7feffd6604f8,%rdi  ;   {metadata(method data for {method} {0x00007feffd4261a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012b64ff: movabs $0x1b8,%rbx
  0x00007ff0012b6509: jle    0x00007ff0012b6519
  0x00007ff0012b650f: movabs $0x1c8,%rbx
  0x00007ff0012b6519: mov    (%rdi,%rbx,1),%rax
  0x00007ff0012b651d: lea    0x1(%rax),%rax
  0x00007ff0012b6521: mov    %rax,(%rdi,%rbx,1)
  0x00007ff0012b6525: jg     0x00007ff0012b65bc  ;*if_icmple
                                                ; - java.lang.String::&lt;init&gt;@55 (line 204)

  0x00007ff0012b652b: mov    %rsi,0x38(%rsp)
  0x00007ff0012b6530: movabs $0x7feffd6604f8,%rdi  ;   {metadata(method data for {method} {0x00007feffd4261a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012b653a: addq   $0x1,0x1e8(%rdi)
  0x00007ff0012b6542: add    %ecx,%r8d
  0x00007ff0012b6545: mov    %rdx,%rsi
  0x00007ff0012b6548: mov    %rcx,%rdx
  0x00007ff0012b654b: mov    %r8,%rcx           ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)

  0x00007ff0012b654e: nop
  0x00007ff0012b654f: callq  0x00007ff001046260  ; OopMap{[56]=Oop off=500}
                                                ;*invokestatic copyOfRange
                                                ; - java.lang.String::&lt;init&gt;@75 (line 207)
                                                ;   {static_call}
  0x00007ff0012b6554: mov    0x38(%rsp),%rsi
  0x00007ff0012b6559: mov    %rax,%r10
  0x00007ff0012b655c: shr    $0x3,%r10
  0x00007ff0012b6560: mov    %r10d,0xc(%rsi)
  0x00007ff0012b6564: shr    $0x9,%rsi
  0x00007ff0012b6568: movabs $0x7ff013110000,%rdx
  0x00007ff0012b6572: movb   $0x0,(%rsi,%rdx,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@78 (line 207)

  0x00007ff0012b6576: add    $0x60,%rsp
  0x00007ff0012b657a: pop    %rbp
  0x00007ff0012b657b: test   %eax,0x17264b7f(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012b6581: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@81 (line 208)

  0x00007ff0012b6582: movabs $0x67418a6e0,%rdx  ;   {oop(&quot;&quot;)}
  0x00007ff0012b658c: mov    0xc(%rdx),%edx     ; implicit exception: dispatches to 0x00007ff0012b66be
  0x00007ff0012b658f: shl    $0x3,%rdx          ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)

  0x00007ff0012b6593: mov    %rdx,%r10
  0x00007ff0012b6596: shr    $0x3,%r10
  0x00007ff0012b659a: mov    %r10d,0xc(%rsi)
  0x00007ff0012b659e: shr    $0x9,%rsi
  0x00007ff0012b65a2: movabs $0x7ff013110000,%rdx
  0x00007ff0012b65ac: movb   $0x0,(%rsi,%rdx,1)  ;*putfield value
                                                ; - java.lang.String::&lt;init&gt;@46 (line 199)

  0x00007ff0012b65b0: add    $0x60,%rsp
  0x00007ff0012b65b4: pop    %rbp
  0x00007ff0012b65b5: test   %eax,0x17264b45(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012b65bb: retq                      ;*return
                                                ; - java.lang.String::&lt;init&gt;@49 (line 200)

  0x00007ff0012b65bc: nopl   0x0(%rax)
  0x00007ff0012b65c0: jmpq   0x00007ff0012b66d2  ;   {no_reloc}
  0x00007ff0012b65c5: add    %al,(%rax)
  0x00007ff0012b65c7: add    %al,(%rax)
  0x00007ff0012b65c9: add    %ch,%cl
  0x00007ff0012b65cb: or     $0x48000001,%eax   ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)

  0x00007ff0012b65d0: mov    %eax,%edx
  0x00007ff0012b65d2: movabs $0x7feffd6604f8,%rsi  ;   {metadata(method data for {method} {0x00007feffd4261a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012b65dc: addq   $0x1,0x1d8(%rsi)
  0x00007ff0012b65e4: add    %ecx,%r8d
  0x00007ff0012b65e7: mov    %r8,%rdx
  0x00007ff0012b65ea: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)

  0x00007ff0012b65ed: mov    %rax,0x40(%rsp)
  0x00007ff0012b65f2: nop
  0x00007ff0012b65f3: nop
  0x00007ff0012b65f4: nop
  0x00007ff0012b65f5: nop
  0x00007ff0012b65f6: nop
  0x00007ff0012b65f7: callq  0x00007ff001045de0  ; OopMap{[64]=Oop off=668}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@65 (line 205)
                                                ;   {optimized virtual_call}
  0x00007ff0012b65fc: mov    0x40(%rsp),%rax
  0x00007ff0012b6601: jmpq   0x00007ff0012b6760  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@68 (line 205)

  0x00007ff0012b6606: xchg   %ax,%ax
  0x00007ff0012b6608: jmpq   0x00007ff0012b66f8  ;   {no_reloc}
  0x00007ff0012b660d: add    %al,(%rax)
  0x00007ff0012b660f: add    %al,(%rax)
  0x00007ff0012b6611: add    %ch,%cl
  0x00007ff0012b6613: jmp    0x00007ff0012b6615
  0x00007ff0012b6615: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)

  0x00007ff0012b6617: mov    %rax,%rdx
  0x00007ff0012b661a: movabs $0x7feffd6604f8,%rsi  ;   {metadata(method data for {method} {0x00007feffd4261a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012b6624: addq   $0x1,0x188(%rsi)
  0x00007ff0012b662c: mov    %r8,%rdx
  0x00007ff0012b662f: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)

  0x00007ff0012b6632: mov    %rax,0x48(%rsp)
  0x00007ff0012b6637: callq  0x00007ff001045de0  ; OopMap{[72]=Oop off=732}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@30 (line 196)
                                                ;   {optimized virtual_call}
  0x00007ff0012b663c: mov    0x48(%rsp),%rax
  0x00007ff0012b6641: jmpq   0x00007ff0012b6760  ;*athrow
                                                ; - java.lang.String::&lt;init&gt;@33 (line 196)

  0x00007ff0012b6646: xchg   %ax,%ax
  0x00007ff0012b6648: jmpq   0x00007ff0012b671e  ;   {no_reloc}
  0x00007ff0012b664d: add    %al,(%rax)
  0x00007ff0012b664f: add    %al,(%rax)
  0x00007ff0012b6651: add    %ch,%cl
  0x00007ff0012b6653: roll   (%rax)
  0x00007ff0012b6655: add    %al,(%rax)         ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)

  0x00007ff0012b6657: mov    %rax,%rdx
  0x00007ff0012b665a: movabs $0x7feffd6604f8,%rsi  ;   {metadata(method data for {method} {0x00007feffd4261a0} &apos;&lt;init&gt;&apos; &apos;([CII)V&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012b6664: addq   $0x1,0x138(%rsi)
  0x00007ff0012b666c: mov    %rcx,%rdx
  0x00007ff0012b666f: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)

  0x00007ff0012b6672: mov    %rax,0x50(%rsp)
  0x00007ff0012b6677: callq  0x00007ff001045de0  ; OopMap{[80]=Oop off=796}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.String::&lt;init&gt;@13 (line 192)
                                                ;   {optimized virtual_call}
  0x00007ff0012b667c: mov    0x50(%rsp),%rax
  0x00007ff0012b6681: jmpq   0x00007ff0012b6760
  0x00007ff0012b6686: mov    %rdi,0x8(%rsp)
  0x00007ff0012b668b: movq   $0xffffffffffffffff,(%rsp)
  0x00007ff0012b6693: callq  0x00007ff0012175e0  ; OopMap{rsi=Oop rdx=Oop off=824}
                                                ;*synchronization entry
                                                ; - java.lang.String::&lt;init&gt;@-1 (line 190)
                                                ;   {runtime_call}
  0x00007ff0012b6698: jmpq   0x00007ff0012b63be
  0x00007ff0012b669d: mov    %rdi,0x8(%rsp)
  0x00007ff0012b66a2: movq   $0xffffffffffffffff,(%rsp)
  0x00007ff0012b66aa: callq  0x00007ff0012175e0  ; OopMap{rsi=Oop rdx=Oop off=847}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.String::&lt;init&gt;@1 (line 190)
                                                ;   {runtime_call}
  0x00007ff0012b66af: jmpq   0x00007ff0012b6405
  0x00007ff0012b66b4: callq  0x00007ff001186e80  ; OopMap{rsi=Oop rdx=Oop off=857}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@36 (line 198)
                                                ;   {runtime_call}
  0x00007ff0012b66b9: callq  0x00007ff001186e80  ; OopMap{rsi=Oop rdx=Oop off=862}
                                                ;*arraylength
                                                ; - java.lang.String::&lt;init&gt;@52 (line 204)
                                                ;   {runtime_call}
  0x00007ff0012b66be: callq  0x00007ff001186e80  ; OopMap{rsi=Oop off=867}
                                                ;*getfield value
                                                ; - java.lang.String::&lt;init&gt;@43 (line 199)
                                                ;   {runtime_call}
  0x00007ff0012b66c3: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007ff0012b66cd: mov    $0xa050f00,%eax
  0x00007ff0012b66d2: callq  0x00007ff001214d20  ; OopMap{off=887}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x00007ff0012b66d7: jmpq   0x00007ff0012b65c0
  0x00007ff0012b66dc: mov    %rdx,%rdx
  0x00007ff0012b66df: callq  0x00007ff001187320  ; OopMap{off=900}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@58 (line 205)
                                                ;   {runtime_call}
  0x00007ff0012b66e4: jmpq   0x00007ff0012b65cf
  0x00007ff0012b66e9: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007ff0012b66f3: mov    $0xa050f00,%eax
  0x00007ff0012b66f8: callq  0x00007ff001214d20  ; OopMap{off=925}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x00007ff0012b66fd: jmpq   0x00007ff0012b6608
  0x00007ff0012b6702: mov    %rdx,%rdx
  0x00007ff0012b6705: callq  0x00007ff001187320  ; OopMap{off=938}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@25 (line 196)
                                                ;   {runtime_call}
  0x00007ff0012b670a: jmpq   0x00007ff0012b6617
  0x00007ff0012b670f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007ff0012b6719: mov    $0xa050f00,%eax
  0x00007ff0012b671e: callq  0x00007ff001214d20  ; OopMap{off=963}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x00007ff0012b6723: jmpq   0x00007ff0012b6648
  0x00007ff0012b6728: mov    %rdx,%rdx
  0x00007ff0012b672b: callq  0x00007ff001187320  ; OopMap{off=976}
                                                ;*new  ; - java.lang.String::&lt;init&gt;@8 (line 192)
                                                ;   {runtime_call}
  0x00007ff0012b6730: jmpq   0x00007ff0012b6657
  0x00007ff0012b6735: nop
  0x00007ff0012b6736: nop
  0x00007ff0012b6737: mov    0x310(%r15),%rax
  0x00007ff0012b673e: movabs $0x0,%r10
  0x00007ff0012b6748: mov    %r10,0x310(%r15)
  0x00007ff0012b674f: movabs $0x0,%r10
  0x00007ff0012b6759: mov    %r10,0x318(%r15)
  0x00007ff0012b6760: add    $0x60,%rsp
  0x00007ff0012b6764: pop    %rbp
  0x00007ff0012b6765: jmpq   0x00007ff00106cba0  ;   {runtime_call}
  0x00007ff0012b676a: hlt    
  0x00007ff0012b676b: hlt    
  0x00007ff0012b676c: hlt    
  0x00007ff0012b676d: hlt    
  0x00007ff0012b676e: hlt    
  0x00007ff0012b676f: hlt    
  0x00007ff0012b6770: hlt    
  0x00007ff0012b6771: hlt    
  0x00007ff0012b6772: hlt    
  0x00007ff0012b6773: hlt    
  0x00007ff0012b6774: hlt    
  0x00007ff0012b6775: hlt    
  0x00007ff0012b6776: hlt    
  0x00007ff0012b6777: hlt    
  0x00007ff0012b6778: hlt    
  0x00007ff0012b6779: hlt    
  0x00007ff0012b677a: hlt    
  0x00007ff0012b677b: hlt    
  0x00007ff0012b677c: hlt    
  0x00007ff0012b677d: hlt    
  0x00007ff0012b677e: hlt    
  0x00007ff0012b677f: hlt    
[Stub Code]
  0x00007ff0012b6780: nop                       ;   {no_reloc}
  0x00007ff0012b6781: nop
  0x00007ff0012b6782: nop
  0x00007ff0012b6783: nop
  0x00007ff0012b6784: nop
  0x00007ff0012b6785: movabs $0x0,%rbx          ;   {static_stub}
  0x00007ff0012b678f: jmpq   0x00007ff0012b678f  ;   {runtime_call}
  0x00007ff0012b6794: nop
  0x00007ff0012b6795: movabs $0x0,%rbx          ;   {static_stub}
  0x00007ff0012b679f: jmpq   0x00007ff0012b679f  ;   {runtime_call}
  0x00007ff0012b67a4: nop
  0x00007ff0012b67a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007ff0012b67af: jmpq   0x00007ff0012b67af  ;   {runtime_call}
  0x00007ff0012b67b4: nop
  0x00007ff0012b67b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007ff0012b67bf: jmpq   0x00007ff0012b67bf  ;   {runtime_call}
[Exception Handler]
  0x00007ff0012b67c4: callq  0x00007ff0012186e0  ;   {runtime_call}
  0x00007ff0012b67c9: mov    %rsp,-0x28(%rsp)
  0x00007ff0012b67ce: sub    $0x80,%rsp
  0x00007ff0012b67d5: mov    %rax,0x78(%rsp)
  0x00007ff0012b67da: mov    %rcx,0x70(%rsp)
  0x00007ff0012b67df: mov    %rdx,0x68(%rsp)
  0x00007ff0012b67e4: mov    %rbx,0x60(%rsp)
  0x00007ff0012b67e9: mov    %rbp,0x50(%rsp)
  0x00007ff0012b67ee: mov    %rsi,0x48(%rsp)
  0x00007ff0012b67f3: mov    %rdi,0x40(%rsp)
  0x00007ff0012b67f8: mov    %r8,0x38(%rsp)
  0x00007ff0012b67fd: mov    %r9,0x30(%rsp)
  0x00007ff0012b6802: mov    %r10,0x28(%rsp)
  0x00007ff0012b6807: mov    %r11,0x20(%rsp)
  0x00007ff0012b680c: mov    %r12,0x18(%rsp)
  0x00007ff0012b6811: mov    %r13,0x10(%rsp)
  0x00007ff0012b6816: mov    %r14,0x8(%rsp)
  0x00007ff0012b681b: mov    %r15,(%rsp)
  0x00007ff0012b681f: movabs $0x7ff017f80bfe,%rdi  ;   {external_word}
  0x00007ff0012b6829: movabs $0x7ff0012b67c9,%rsi  ;   {internal_word}
  0x00007ff0012b6833: mov    %rsp,%rdx
  0x00007ff0012b6836: and    $0xfffffffffffffff0,%rsp
  0x00007ff0012b683a: callq  0x00007ff017c8f7f0  ;   {runtime_call}
  0x00007ff0012b683f: hlt    
[Deopt Handler Code]
  0x00007ff0012b6840: movabs $0x7ff0012b6840,%r10  ;   {section_word}
  0x00007ff0012b684a: push   %r10
  0x00007ff0012b684c: jmpq   0x00007ff001046e40  ;   {runtime_call}
  0x00007ff0012b6851: hlt    
  0x00007ff0012b6852: hlt    
  0x00007ff0012b6853: hlt    
  0x00007ff0012b6854: hlt    
  0x00007ff0012b6855: hlt    
  0x00007ff0012b6856: hlt    
  0x00007ff0012b6857: hlt    
<nmethod compile_id='17' compiler='C1' level='3' entry='0x00007ff0012b6360' size='2704' address='0x00007ff0012b6190' relocation_offset='296' insts_offset='464' stub_offset='1520' scopes_data_offset='1752' scopes_pcs_offset='2040' dependencies_offset='2664' nul_chk_table_offset='2672' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='417' iicount='417' stamp='0.442'/>
<writer thread='140668586383040'/>
Decoding compiled method 0x00007ff0012b6c50:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007feffd53f450} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;
  # parm0:    rsi:rsi   = &apos;[C&apos;
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0xb0]  (sp of caller)
  0x00007ff0012b6e60: mov    %eax,-0x14000(%rsp)
  0x00007ff0012b6e67: push   %rbp
  0x00007ff0012b6e68: sub    $0xa0,%rsp
  0x00007ff0012b6e6f: mov    %rsi,%r8
  0x00007ff0012b6e72: mov    %rdx,%r9
  0x00007ff0012b6e75: movabs $0x7feffd65fdc8,%rbx  ;   {metadata(method data for {method} {0x00007feffd53f450} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007ff0012b6e7f: mov    0xdc(%rbx),%edx
  0x00007ff0012b6e85: add    $0x8,%edx
  0x00007ff0012b6e88: mov    %edx,0xdc(%rbx)
  0x00007ff0012b6e8e: movabs $0x7feffd53f450,%rbx  ;   {metadata({method} {0x00007feffd53f450} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007ff0012b6e98: and    $0x1ff8,%edx
  0x00007ff0012b6e9e: cmp    $0x0,%edx
  0x00007ff0012b6ea1: je     0x00007ff0012b7701  ;*iload_2
                                                ; - java.util.Arrays::copyOfRange@0 (line 3661)

  0x00007ff0012b6ea7: mov    %rcx,%r11
  0x00007ff0012b6eaa: sub    %r9d,%r11d
  0x00007ff0012b6ead: cmp    $0x0,%r11d
  0x00007ff0012b6eb1: movabs $0x7feffd65fdc8,%rbx  ;   {metadata(method data for {method} {0x00007feffd53f450} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007ff0012b6ebb: movabs $0x108,%rdx
  0x00007ff0012b6ec5: jge    0x00007ff0012b6ed5
  0x00007ff0012b6ecb: movabs $0x118,%rdx
  0x00007ff0012b6ed5: mov    (%rbx,%rdx,1),%rsi
  0x00007ff0012b6ed9: lea    0x1(%rsi),%rsi
  0x00007ff0012b6edd: mov    %rsi,(%rbx,%rdx,1)
  0x00007ff0012b6ee1: jl     0x00007ff0012b70a4  ;*ifge
                                                ; - java.util.Arrays::copyOfRange@5 (line 3662)

  0x00007ff0012b6ee7: mov    %r11,%rbx
  0x00007ff0012b6eea: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00007ff0012b6ef4: movslq %ebx,%rbx
  0x00007ff0012b6ef7: mov    %rbx,%rdi
  0x00007ff0012b6efa: cmp    $0xffffff,%rbx
  0x00007ff0012b6f01: ja     0x00007ff0012b7718
  0x00007ff0012b6f07: movabs $0x17,%rsi
  0x00007ff0012b6f11: lea    (%rsi,%rbx,2),%rsi
  0x00007ff0012b6f15: and    $0xfffffffffffffff8,%rsi
  0x00007ff0012b6f19: mov    0x60(%r15),%rax
  0x00007ff0012b6f1d: lea    (%rax,%rsi,1),%rsi
  0x00007ff0012b6f21: cmp    0x70(%r15),%rsi
  0x00007ff0012b6f25: ja     0x00007ff0012b7718
  0x00007ff0012b6f2b: mov    %rsi,0x60(%r15)
  0x00007ff0012b6f2f: sub    %rax,%rsi
  0x00007ff0012b6f32: movq   $0x1,(%rax)
  0x00007ff0012b6f39: mov    %rdx,%rcx
  0x00007ff0012b6f3c: shr    $0x3,%rcx
  0x00007ff0012b6f40: mov    %ecx,0x8(%rax)
  0x00007ff0012b6f43: mov    %ebx,0xc(%rax)
  0x00007ff0012b6f46: sub    $0x10,%rsi
  0x00007ff0012b6f4a: je     0x00007ff0012b6f61
  0x00007ff0012b6f50: xor    %rbx,%rbx
  0x00007ff0012b6f53: shr    $0x3,%rsi
  0x00007ff0012b6f57: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007ff0012b6f5c: dec    %rsi
  0x00007ff0012b6f5f: jne    0x00007ff0012b6f57  ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)

  0x00007ff0012b6f61: mov    0xc(%r8),%esi      ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ; implicit exception: dispatches to 0x00007ff0012b7722
  0x00007ff0012b6f65: sub    %r9d,%esi
  0x00007ff0012b6f68: movabs $0x7feffd65fdc8,%rdx  ;   {metadata(method data for {method} {0x00007feffd53f450} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007ff0012b6f72: addq   $0x1,0x208(%rdx)
  0x00007ff0012b6f7a: movabs $0x7feffd624558,%rdx  ;   {metadata(method data for {method} {0x00007feffd51a410} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007ff0012b6f84: mov    0xdc(%rdx),%ecx
  0x00007ff0012b6f8a: add    $0x8,%ecx
  0x00007ff0012b6f8d: mov    %ecx,0xdc(%rdx)
  0x00007ff0012b6f93: movabs $0x7feffd51a410,%rdx  ;   {metadata({method} {0x00007feffd51a410} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007ff0012b6f9d: and    $0x7ffff8,%ecx
  0x00007ff0012b6fa3: cmp    $0x0,%ecx
  0x00007ff0012b6fa6: je     0x00007ff0012b7727
  0x00007ff0012b6fac: cmp    %r11d,%esi
  0x00007ff0012b6faf: movabs $0x7feffd624558,%rdx  ;   {metadata(method data for {method} {0x00007feffd51a410} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007ff0012b6fb9: movabs $0x108,%rcx
  0x00007ff0012b6fc3: jg     0x00007ff0012b6fd3
  0x00007ff0012b6fc9: movabs $0x118,%rcx
  0x00007ff0012b6fd3: mov    (%rdx,%rcx,1),%rdi
  0x00007ff0012b6fd7: lea    0x1(%rdi),%rdi
  0x00007ff0012b6fdb: mov    %rdi,(%rdx,%rcx,1)
  0x00007ff0012b6fdf: jg     0x00007ff0012b6ffd  ;*if_icmpgt
                                                ; - java.lang.Math::min@2 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x00007ff0012b6fe5: movabs $0x7feffd624558,%rdx  ;   {metadata(method data for {method} {0x00007feffd51a410} &apos;min&apos; &apos;(II)I&apos; in &apos;java/lang/Math&apos;)}
  0x00007ff0012b6fef: incl   0x128(%rdx)
  0x00007ff0012b6ff5: mov    %rsi,%rdi
  0x00007ff0012b6ff8: jmpq   0x00007ff0012b7000  ;*goto
                                                ; - java.lang.Math::min@6 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x00007ff0012b6ffd: mov    %r11,%rdi          ;*ireturn
                                                ; - java.lang.Math::min@10 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)

  0x00007ff0012b7000: movabs $0x7feffd65fdc8,%rsi  ;   {metadata(method data for {method} {0x00007feffd53f450} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007ff0012b700a: addq   $0x1,0x218(%rsi)
  0x00007ff0012b7012: mov    %r8,%rsi
  0x00007ff0012b7015: mov    %r9,%rdx
  0x00007ff0012b7018: mov    %rax,%rcx
  0x00007ff0012b701b: mov    $0x0,%r8d
  0x00007ff0012b7021: mov    %rdi,%r9
  0x00007ff0012b7024: mov    %rax,0x70(%rsp)
  0x00007ff0012b7029: test   %edx,%edx
  0x00007ff0012b702b: jl     0x00007ff0012b773e
  0x00007ff0012b7031: lea    (%rdx,%r9,1),%rdi
  0x00007ff0012b7035: cmp    0xc(%rsi),%edi
  0x00007ff0012b7038: ja     0x00007ff0012b773e
  0x00007ff0012b703e: lea    (%r8,%r9,1),%rdi
  0x00007ff0012b7042: cmp    0xc(%rcx),%edi
  0x00007ff0012b7045: ja     0x00007ff0012b773e
  0x00007ff0012b704b: test   %r9d,%r9d
  0x00007ff0012b704e: jl     0x00007ff0012b773e
  0x00007ff0012b7054: je     0x00007ff0012b7090
  0x00007ff0012b705a: movslq %edx,%rdx
  0x00007ff0012b705d: movslq %r8d,%r8
  0x00007ff0012b7060: lea    0x10(%rsi,%rdx,2),%rdi
  0x00007ff0012b7065: lea    0x10(%rcx,%r8,2),%rsi
  0x00007ff0012b706a: mov    %r9,%rdx
  0x00007ff0012b706d: test   $0xf,%esp
  0x00007ff0012b7073: je     0x00007ff0012b708b
  0x00007ff0012b7079: sub    $0x8,%rsp
  0x00007ff0012b707d: callq  Stub::jshort_disjoint_arraycopy
                                                ;   {runtime_call}
  0x00007ff0012b7082: add    $0x8,%rsp
  0x00007ff0012b7086: jmpq   0x00007ff0012b7090
  0x00007ff0012b708b: callq  Stub::jshort_disjoint_arraycopy
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {runtime_call}
  0x00007ff0012b7090: mov    0x70(%rsp),%rax
  0x00007ff0012b7095: add    $0xa0,%rsp
  0x00007ff0012b709c: pop    %rbp
  0x00007ff0012b709d: test   %eax,0x1726405d(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012b70a3: retq                      ;*areturn
                                                ; - java.util.Arrays::copyOfRange@62 (line 3667)

  0x00007ff0012b70a4: mov    %ecx,0x80(%rsp)
  0x00007ff0012b70ab: nopl   0x0(%rax,%rax,1)
  0x00007ff0012b70b0: jmpq   0x00007ff0012b7758  ;   {no_reloc}
  0x00007ff0012b70b5: add    %al,(%rax)
  0x00007ff0012b70b7: add    %al,(%rax)
  0x00007ff0012b70b9: add    %cl,-0x75(%rcx)
  0x00007ff0012b70bc: rex.RXB (bad) 
  0x00007ff0012b70be: lea    0x20(%rax),%rdi
  0x00007ff0012b70c2: cmp    0x70(%r15),%rdi
  0x00007ff0012b70c6: ja     0x00007ff0012b7762
  0x00007ff0012b70cc: mov    %rdi,0x60(%r15)
  0x00007ff0012b70d0: mov    0xa8(%rdx),%rcx
  0x00007ff0012b70d7: mov    %rcx,(%rax)
  0x00007ff0012b70da: mov    %rdx,%rcx
  0x00007ff0012b70dd: shr    $0x3,%rcx
  0x00007ff0012b70e1: mov    %ecx,0x8(%rax)
  0x00007ff0012b70e4: xor    %rcx,%rcx
  0x00007ff0012b70e7: mov    %ecx,0xc(%rax)
  0x00007ff0012b70ea: xor    %rcx,%rcx
  0x00007ff0012b70ed: mov    %rcx,0x10(%rax)
  0x00007ff0012b70f1: mov    %rcx,0x18(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)

  0x00007ff0012b70f5: data16 xchg %ax,%ax
  0x00007ff0012b70f8: jmpq   0x00007ff0012b777e  ;   {no_reloc}
  0x00007ff0012b70fd: add    %al,(%rax)
  0x00007ff0012b70ff: add    %al,(%rax)
  0x00007ff0012b7101: add    %cl,-0x77(%rax)
  0x00007ff0012b7104: test   %ah,(%rax,%rcx,4)
  0x00007ff0012b7107: add    %al,(%rax)
  0x00007ff0012b7109: add    %cl,-0x75(%rcx)
  0x00007ff0012b710c: rex.RXB (bad) 
  0x00007ff0012b710e: lea    0x18(%rax),%rdi
  0x00007ff0012b7112: cmp    0x70(%r15),%rdi
  0x00007ff0012b7116: ja     0x00007ff0012b7788
  0x00007ff0012b711c: mov    %rdi,0x60(%r15)
  0x00007ff0012b7120: mov    0xa8(%rdx),%rcx
  0x00007ff0012b7127: mov    %rcx,(%rax)
  0x00007ff0012b712a: mov    %rdx,%rcx
  0x00007ff0012b712d: shr    $0x3,%rcx
  0x00007ff0012b7131: mov    %ecx,0x8(%rax)
  0x00007ff0012b7134: xor    %rcx,%rcx
  0x00007ff0012b7137: mov    %ecx,0xc(%rax)
  0x00007ff0012b713a: xor    %rcx,%rcx
  0x00007ff0012b713d: mov    %rcx,0x10(%rax)    ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)

  0x00007ff0012b7141: mov    %rax,%rbx
  0x00007ff0012b7144: movabs $0x7feffd65fdc8,%rdx  ;   {metadata(method data for {method} {0x00007feffd53f450} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007ff0012b714e: addq   $0x1,0x128(%rdx)
  0x00007ff0012b7156: movabs $0x7feffd660158,%rbx  ;   {metadata(method data for {method} {0x00007feffd49b850} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007ff0012b7160: mov    0xdc(%rbx),%edx
  0x00007ff0012b7166: add    $0x8,%edx
  0x00007ff0012b7169: mov    %edx,0xdc(%rbx)
  0x00007ff0012b716f: movabs $0x7feffd49b850,%rbx  ;   {metadata({method} {0x00007feffd49b850} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007ff0012b7179: and    $0x7ffff8,%edx
  0x00007ff0012b717f: cmp    $0x0,%edx
  0x00007ff0012b7182: je     0x00007ff0012b7795
  0x00007ff0012b7188: mov    %rax,%rbx
  0x00007ff0012b718b: movabs $0x7feffd660158,%rdx  ;   {metadata(method data for {method} {0x00007feffd49b850} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007ff0012b7195: addq   $0x1,0x108(%rdx)
  0x00007ff0012b719d: movabs $0x7feffd660288,%rbx  ;   {metadata(method data for {method} {0x00007feffd497b40} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007ff0012b71a7: mov    0xdc(%rbx),%edx
  0x00007ff0012b71ad: add    $0x8,%edx
  0x00007ff0012b71b0: mov    %edx,0xdc(%rbx)
  0x00007ff0012b71b6: movabs $0x7feffd497b40,%rbx  ;   {metadata({method} {0x00007feffd497b40} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007ff0012b71c0: and    $0x7ffff8,%edx
  0x00007ff0012b71c6: cmp    $0x0,%edx
  0x00007ff0012b71c9: je     0x00007ff0012b77ac
  0x00007ff0012b71cf: mov    %rax,%rbx
  0x00007ff0012b71d2: movabs $0x7feffd660288,%rdx  ;   {metadata(method data for {method} {0x00007feffd497b40} &apos;&lt;init&gt;&apos; &apos;(I)V&apos; in &apos;java/lang/AbstractStringBuilder&apos;)}
  0x00007ff0012b71dc: addq   $0x1,0x108(%rdx)
  0x00007ff0012b71e4: movabs $0x7feffd59c9f0,%rbx  ;   {metadata(method data for {method} {0x00007feffd423480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007ff0012b71ee: mov    0xdc(%rbx),%edx
  0x00007ff0012b71f4: add    $0x8,%edx
  0x00007ff0012b71f7: mov    %edx,0xdc(%rbx)
  0x00007ff0012b71fd: movabs $0x7feffd423480,%rbx  ;   {metadata({method} {0x00007feffd423480} &apos;&lt;init&gt;&apos; &apos;()V&apos; in &apos;java/lang/Object&apos;)}
  0x00007ff0012b7207: and    $0x7ffff8,%edx
  0x00007ff0012b720d: cmp    $0x0,%edx
  0x00007ff0012b7210: je     0x00007ff0012b77c3
  0x00007ff0012b7216: mov    $0x10,%ebx
  0x00007ff0012b721b: movabs $0x7c0000208,%rdx  ;   {metadata({type array char})}
  0x00007ff0012b7225: mov    %rax,%r13
  0x00007ff0012b7228: movslq %ebx,%rbx
  0x00007ff0012b722b: mov    %rbx,%rdi
  0x00007ff0012b722e: cmp    $0xffffff,%rbx
  0x00007ff0012b7235: ja     0x00007ff0012b77da
  0x00007ff0012b723b: movabs $0x17,%rsi
  0x00007ff0012b7245: lea    (%rsi,%rbx,2),%rsi
  0x00007ff0012b7249: and    $0xfffffffffffffff8,%rsi
  0x00007ff0012b724d: mov    0x60(%r15),%rax
  0x00007ff0012b7251: lea    (%rax,%rsi,1),%rsi
  0x00007ff0012b7255: cmp    0x70(%r15),%rsi
  0x00007ff0012b7259: ja     0x00007ff0012b77da
  0x00007ff0012b725f: mov    %rsi,0x60(%r15)
  0x00007ff0012b7263: sub    %rax,%rsi
  0x00007ff0012b7266: movq   $0x1,(%rax)
  0x00007ff0012b726d: mov    %rdx,%rcx
  0x00007ff0012b7270: shr    $0x3,%rcx
  0x00007ff0012b7274: mov    %ecx,0x8(%rax)
  0x00007ff0012b7277: mov    %ebx,0xc(%rax)
  0x00007ff0012b727a: sub    $0x10,%rsi
  0x00007ff0012b727e: je     0x00007ff0012b7295
  0x00007ff0012b7284: xor    %rbx,%rbx
  0x00007ff0012b7287: shr    $0x3,%rsi
  0x00007ff0012b728b: mov    %rbx,0x8(%rax,%rsi,8)
  0x00007ff0012b7290: dec    %rsi
  0x00007ff0012b7293: jne    0x00007ff0012b728b  ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x00007ff0012b7295: mov    %rax,%r10
  0x00007ff0012b7298: shr    $0x3,%r10
  0x00007ff0012b729c: mov    %r10d,0x10(%r13)
  0x00007ff0012b72a0: mov    %r13,%rax
  0x00007ff0012b72a3: shr    $0x9,%rax
  0x00007ff0012b72a7: movabs $0x7ff013110000,%rdx
  0x00007ff0012b72b1: movb   $0x0,(%rax,%rdx,1)  ;*putfield value
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@8 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)

  0x00007ff0012b72b5: mov    %r13,%rax
  0x00007ff0012b72b8: movabs $0x7feffd65fdc8,%rdx  ;   {metadata(method data for {method} {0x00007feffd53f450} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007ff0012b72c2: mov    0x8(%rax),%eax
  0x00007ff0012b72c5: shl    $0x3,%rax
  0x00007ff0012b72c9: cmp    0x140(%rdx),%rax
  0x00007ff0012b72d0: jne    0x00007ff0012b72df
  0x00007ff0012b72d2: addq   $0x1,0x148(%rdx)
  0x00007ff0012b72da: jmpq   0x00007ff0012b7345
  0x00007ff0012b72df: cmp    0x150(%rdx),%rax
  0x00007ff0012b72e6: jne    0x00007ff0012b72f5
  0x00007ff0012b72e8: addq   $0x1,0x158(%rdx)
  0x00007ff0012b72f0: jmpq   0x00007ff0012b7345
  0x00007ff0012b72f5: cmpq   $0x0,0x140(%rdx)
  0x00007ff0012b7300: jne    0x00007ff0012b7319
  0x00007ff0012b7302: mov    %rax,0x140(%rdx)
  0x00007ff0012b7309: movq   $0x1,0x148(%rdx)
  0x00007ff0012b7314: jmpq   0x00007ff0012b7345
  0x00007ff0012b7319: cmpq   $0x0,0x150(%rdx)
  0x00007ff0012b7324: jne    0x00007ff0012b733d
  0x00007ff0012b7326: mov    %rax,0x150(%rdx)
  0x00007ff0012b732d: movq   $0x1,0x158(%rdx)
  0x00007ff0012b7338: jmpq   0x00007ff0012b7345
  0x00007ff0012b733d: addq   $0x1,0x138(%rdx)
  0x00007ff0012b7345: movabs $0x7feffd6603c0,%rdx  ;   {metadata(method data for {method} {0x00007feffd49c028} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007ff0012b734f: mov    0xdc(%rdx),%esi
  0x00007ff0012b7355: add    $0x8,%esi
  0x00007ff0012b7358: mov    %esi,0xdc(%rdx)
  0x00007ff0012b735e: movabs $0x7feffd49c028,%rdx  ;   {metadata({method} {0x00007feffd49c028} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007ff0012b7368: and    $0x7ffff8,%esi
  0x00007ff0012b736e: cmp    $0x0,%esi
  0x00007ff0012b7371: je     0x00007ff0012b77e4
  0x00007ff0012b7377: mov    %r13,%rax
  0x00007ff0012b737a: movabs $0x7feffd6603c0,%rdx  ;   {metadata(method data for {method} {0x00007feffd49c028} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007ff0012b7384: addq   $0x1,0x108(%rdx)
  0x00007ff0012b738c: mov    %r9,%rdx
  0x00007ff0012b738f: mov    %r13,%rsi          ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 213)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)

  0x00007ff0012b7392: mov    %r13,0x78(%rsp)
  0x00007ff0012b7397: callq  0x00007ff001045de0  ; OopMap{[120]=Oop [136]=Oop off=1340}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 213)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {optimized virtual_call}
  0x00007ff0012b739c: mov    0x78(%rsp),%rax
  0x00007ff0012b73a1: movabs $0x7feffd65fdc8,%rdx  ;   {metadata(method data for {method} {0x00007feffd53f450} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007ff0012b73ab: mov    0x8(%rax),%eax
  0x00007ff0012b73ae: shl    $0x3,%rax
  0x00007ff0012b73b2: cmp    0x170(%rdx),%rax
  0x00007ff0012b73b9: jne    0x00007ff0012b73c8
  0x00007ff0012b73bb: addq   $0x1,0x178(%rdx)
  0x00007ff0012b73c3: jmpq   0x00007ff0012b742e
  0x00007ff0012b73c8: cmp    0x180(%rdx),%rax
  0x00007ff0012b73cf: jne    0x00007ff0012b73de
  0x00007ff0012b73d1: addq   $0x1,0x188(%rdx)
  0x00007ff0012b73d9: jmpq   0x00007ff0012b742e
  0x00007ff0012b73de: cmpq   $0x0,0x170(%rdx)
  0x00007ff0012b73e9: jne    0x00007ff0012b7402
  0x00007ff0012b73eb: mov    %rax,0x170(%rdx)
  0x00007ff0012b73f2: movq   $0x1,0x178(%rdx)
  0x00007ff0012b73fd: jmpq   0x00007ff0012b742e
  0x00007ff0012b7402: cmpq   $0x0,0x180(%rdx)
  0x00007ff0012b740d: jne    0x00007ff0012b7426
  0x00007ff0012b740f: mov    %rax,0x180(%rdx)
  0x00007ff0012b7416: movq   $0x1,0x188(%rdx)
  0x00007ff0012b7421: jmpq   0x00007ff0012b742e
  0x00007ff0012b7426: addq   $0x1,0x168(%rdx)
  0x00007ff0012b742e: movabs $0x7feffd660980,%rdx  ;   {metadata(method data for {method} {0x00007feffd49bb68} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007ff0012b7438: mov    0xdc(%rdx),%esi
  0x00007ff0012b743e: add    $0x8,%esi
  0x00007ff0012b7441: mov    %esi,0xdc(%rdx)
  0x00007ff0012b7447: movabs $0x7feffd49bb68,%rdx  ;   {metadata({method} {0x00007feffd49bb68} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007ff0012b7451: and    $0x7ffff8,%esi
  0x00007ff0012b7457: cmp    $0x0,%esi
  0x00007ff0012b745a: je     0x00007ff0012b77fb
  0x00007ff0012b7460: mov    0x78(%rsp),%rax
  0x00007ff0012b7465: movabs $0x7feffd660980,%rdx  ;   {metadata(method data for {method} {0x00007feffd49bb68} &apos;append&apos; &apos;(Ljava/lang/String;)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007ff0012b746f: addq   $0x1,0x108(%rdx)
  0x00007ff0012b7477: movabs $0x67467ae20,%rdx  ;   {oop(&quot; &gt; &quot;)}
  0x00007ff0012b7481: mov    0x78(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 141)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)

  0x00007ff0012b7486: nop
  0x00007ff0012b7487: callq  0x00007ff001045de0  ; OopMap{[120]=Oop [136]=Oop off=1580}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 141)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {optimized virtual_call}
  0x00007ff0012b748c: mov    0x78(%rsp),%rax
  0x00007ff0012b7491: movabs $0x7feffd65fdc8,%rdx  ;   {metadata(method data for {method} {0x00007feffd53f450} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007ff0012b749b: mov    0x8(%rax),%eax
  0x00007ff0012b749e: shl    $0x3,%rax
  0x00007ff0012b74a2: cmp    0x1a0(%rdx),%rax
  0x00007ff0012b74a9: jne    0x00007ff0012b74b8
  0x00007ff0012b74ab: addq   $0x1,0x1a8(%rdx)
  0x00007ff0012b74b3: jmpq   0x00007ff0012b751e
  0x00007ff0012b74b8: cmp    0x1b0(%rdx),%rax
  0x00007ff0012b74bf: jne    0x00007ff0012b74ce
  0x00007ff0012b74c1: addq   $0x1,0x1b8(%rdx)
  0x00007ff0012b74c9: jmpq   0x00007ff0012b751e
  0x00007ff0012b74ce: cmpq   $0x0,0x1a0(%rdx)
  0x00007ff0012b74d9: jne    0x00007ff0012b74f2
  0x00007ff0012b74db: mov    %rax,0x1a0(%rdx)
  0x00007ff0012b74e2: movq   $0x1,0x1a8(%rdx)
  0x00007ff0012b74ed: jmpq   0x00007ff0012b751e
  0x00007ff0012b74f2: cmpq   $0x0,0x1b0(%rdx)
  0x00007ff0012b74fd: jne    0x00007ff0012b7516
  0x00007ff0012b74ff: mov    %rax,0x1b0(%rdx)
  0x00007ff0012b7506: movq   $0x1,0x1b8(%rdx)
  0x00007ff0012b7511: jmpq   0x00007ff0012b751e
  0x00007ff0012b7516: addq   $0x1,0x198(%rdx)
  0x00007ff0012b751e: movabs $0x7feffd6603c0,%rdx  ;   {metadata(method data for {method} {0x00007feffd49c028} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007ff0012b7528: mov    0xdc(%rdx),%esi
  0x00007ff0012b752e: add    $0x8,%esi
  0x00007ff0012b7531: mov    %esi,0xdc(%rdx)
  0x00007ff0012b7537: movabs $0x7feffd49c028,%rdx  ;   {metadata({method} {0x00007feffd49c028} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007ff0012b7541: and    $0x7ffff8,%esi
  0x00007ff0012b7547: cmp    $0x0,%esi
  0x00007ff0012b754a: je     0x00007ff0012b7812
  0x00007ff0012b7550: mov    0x78(%rsp),%rax
  0x00007ff0012b7555: movabs $0x7feffd6603c0,%rdx  ;   {metadata(method data for {method} {0x00007feffd49c028} &apos;append&apos; &apos;(I)Ljava/lang/StringBuilder;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007ff0012b755f: addq   $0x1,0x108(%rdx)
  0x00007ff0012b7567: mov    0x80(%rsp),%edx
  0x00007ff0012b756e: mov    0x78(%rsp),%rsi    ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 213)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)

  0x00007ff0012b7573: nop
  0x00007ff0012b7574: nop
  0x00007ff0012b7575: nop
  0x00007ff0012b7576: nop
  0x00007ff0012b7577: callq  0x00007ff001045de0  ; OopMap{[120]=Oop [136]=Oop off=1820}
                                                ;*invokespecial append
                                                ; - java.lang.StringBuilder::append@2 (line 213)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {optimized virtual_call}
  0x00007ff0012b757c: mov    0x78(%rsp),%rax
  0x00007ff0012b7581: movabs $0x7feffd65fdc8,%rdx  ;   {metadata(method data for {method} {0x00007feffd53f450} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007ff0012b758b: mov    0x8(%rax),%eax
  0x00007ff0012b758e: shl    $0x3,%rax
  0x00007ff0012b7592: cmp    0x1d0(%rdx),%rax
  0x00007ff0012b7599: jne    0x00007ff0012b75a8
  0x00007ff0012b759b: addq   $0x1,0x1d8(%rdx)
  0x00007ff0012b75a3: jmpq   0x00007ff0012b760e
  0x00007ff0012b75a8: cmp    0x1e0(%rdx),%rax
  0x00007ff0012b75af: jne    0x00007ff0012b75be
  0x00007ff0012b75b1: addq   $0x1,0x1e8(%rdx)
  0x00007ff0012b75b9: jmpq   0x00007ff0012b760e
  0x00007ff0012b75be: cmpq   $0x0,0x1d0(%rdx)
  0x00007ff0012b75c9: jne    0x00007ff0012b75e2
  0x00007ff0012b75cb: mov    %rax,0x1d0(%rdx)
  0x00007ff0012b75d2: movq   $0x1,0x1d8(%rdx)
  0x00007ff0012b75dd: jmpq   0x00007ff0012b760e
  0x00007ff0012b75e2: cmpq   $0x0,0x1e0(%rdx)
  0x00007ff0012b75ed: jne    0x00007ff0012b7606
  0x00007ff0012b75ef: mov    %rax,0x1e0(%rdx)
  0x00007ff0012b75f6: movq   $0x1,0x1e8(%rdx)
  0x00007ff0012b7601: jmpq   0x00007ff0012b760e
  0x00007ff0012b7606: addq   $0x1,0x1c8(%rdx)
  0x00007ff0012b760e: movabs $0x7feffd661718,%rdx  ;   {metadata(method data for {method} {0x00007feffd49cf18} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007ff0012b7618: mov    0xdc(%rdx),%esi
  0x00007ff0012b761e: add    $0x8,%esi
  0x00007ff0012b7621: mov    %esi,0xdc(%rdx)
  0x00007ff0012b7627: movabs $0x7feffd49cf18,%rdx  ;   {metadata({method} {0x00007feffd49cf18} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007ff0012b7631: and    $0x7ffff8,%esi
  0x00007ff0012b7637: cmp    $0x0,%esi
  0x00007ff0012b763a: je     0x00007ff0012b7829
  0x00007ff0012b7640: movabs $0x7c00016d0,%rdx  ;   {metadata(&apos;java/lang/String&apos;)}
  0x00007ff0012b764a: mov    0x60(%r15),%rax
  0x00007ff0012b764e: lea    0x18(%rax),%rdi
  0x00007ff0012b7652: cmp    0x70(%r15),%rdi
  0x00007ff0012b7656: ja     0x00007ff0012b7840
  0x00007ff0012b765c: mov    %rdi,0x60(%r15)
  0x00007ff0012b7660: mov    0xa8(%rdx),%rcx
  0x00007ff0012b7667: mov    %rcx,(%rax)
  0x00007ff0012b766a: mov    %rdx,%rcx
  0x00007ff0012b766d: shr    $0x3,%rcx
  0x00007ff0012b7671: mov    %ecx,0x8(%rax)
  0x00007ff0012b7674: xor    %rcx,%rcx
  0x00007ff0012b7677: mov    %ecx,0xc(%rax)
  0x00007ff0012b767a: xor    %rcx,%rcx
  0x00007ff0012b767d: mov    %rcx,0x10(%rax)    ;*new  ; - java.lang.StringBuilder::toString@0 (line 412)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x00007ff0012b7681: mov    0x78(%rsp),%rdx
  0x00007ff0012b7686: mov    0x10(%rdx),%ecx
  0x00007ff0012b7689: shl    $0x3,%rcx          ;*getfield value
                                                ; - java.lang.StringBuilder::toString@5 (line 412)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x00007ff0012b768d: mov    0xc(%rdx),%r8d     ;*getfield count
                                                ; - java.lang.StringBuilder::toString@10 (line 412)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x00007ff0012b7691: mov    %rax,%rdx
  0x00007ff0012b7694: movabs $0x7feffd661718,%rsi  ;   {metadata(method data for {method} {0x00007feffd49cf18} &apos;toString&apos; &apos;()Ljava/lang/String;&apos; in &apos;java/lang/StringBuilder&apos;)}
  0x00007ff0012b769e: addq   $0x1,0x108(%rsi)
  0x00007ff0012b76a6: mov    %rcx,%rdx
  0x00007ff0012b76a9: mov    $0x0,%ecx
  0x00007ff0012b76ae: mov    %rax,%rsi          ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 412)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)

  0x00007ff0012b76b1: mov    %rax,0x90(%rsp)
  0x00007ff0012b76b9: nop
  0x00007ff0012b76ba: nop
  0x00007ff0012b76bb: nop
  0x00007ff0012b76bc: nop
  0x00007ff0012b76bd: nop
  0x00007ff0012b76be: nop
  0x00007ff0012b76bf: callq  0x00007ff001045de0  ; OopMap{[136]=Oop [144]=Oop off=2148}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.lang.StringBuilder::toString@13 (line 412)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {optimized virtual_call}
  0x00007ff0012b76c4: mov    0x88(%rsp),%rax
  0x00007ff0012b76cc: movabs $0x7feffd65fdc8,%rdx  ;   {metadata(method data for {method} {0x00007feffd53f450} &apos;copyOfRange&apos; &apos;([CII)[C&apos; in &apos;java/util/Arrays&apos;)}
  0x00007ff0012b76d6: addq   $0x1,0x1f8(%rdx)
  0x00007ff0012b76de: mov    0x90(%rsp),%rdx
  0x00007ff0012b76e6: mov    0x88(%rsp),%rsi    ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)

  0x00007ff0012b76ee: nop
  0x00007ff0012b76ef: callq  0x00007ff001045de0  ; OopMap{[136]=Oop off=2196}
                                                ;*invokespecial &lt;init&gt;
                                                ; - java.util.Arrays::copyOfRange@35 (line 3663)
                                                ;   {optimized virtual_call}
  0x00007ff0012b76f4: mov    0x88(%rsp),%rax
  0x00007ff0012b76fc: jmpq   0x00007ff0012b7878
  0x00007ff0012b7701: mov    %rbx,0x8(%rsp)
  0x00007ff0012b7706: movq   $0xffffffffffffffff,(%rsp)
  0x00007ff0012b770e: callq  0x00007ff0012175e0  ; OopMap{r8=Oop off=2227}
                                                ;*synchronization entry
                                                ; - java.util.Arrays::copyOfRange@-1 (line 3661)
                                                ;   {runtime_call}
  0x00007ff0012b7713: jmpq   0x00007ff0012b6ea7
  0x00007ff0012b7718: callq  0x00007ff001216120  ; OopMap{r8=Oop off=2237}
                                                ;*newarray
                                                ; - java.util.Arrays::copyOfRange@40 (line 3664)
                                                ;   {runtime_call}
  0x00007ff0012b771d: jmpq   0x00007ff0012b6f61
  0x00007ff0012b7722: callq  0x00007ff001186e80  ; OopMap{r8=Oop rax=Oop off=2247}
                                                ;*arraylength
                                                ; - java.util.Arrays::copyOfRange@50 (line 3665)
                                                ;   {runtime_call}
  0x00007ff0012b7727: mov    %rdx,0x8(%rsp)
  0x00007ff0012b772c: movq   $0xffffffffffffffff,(%rsp)
  0x00007ff0012b7734: callq  0x00007ff0012175e0  ; OopMap{r8=Oop rax=Oop off=2265}
                                                ;*synchronization entry
                                                ; - java.lang.Math::min@-1 (line 1336)
                                                ; - java.util.Arrays::copyOfRange@54 (line 3666)
                                                ;   {runtime_call}
  0x00007ff0012b7739: jmpq   0x00007ff0012b6fac
  0x00007ff0012b773e: nop
  0x00007ff0012b773f: callq  0x00007ff001046260  ; OopMap{[112]=Oop off=2276}
                                                ;*invokestatic arraycopy
                                                ; - java.util.Arrays::copyOfRange@57 (line 3665)
                                                ;   {static_call}
  0x00007ff0012b7744: jmpq   0x00007ff0012b7090
  0x00007ff0012b7749: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007ff0012b7753: mov    $0xa050f00,%eax
  0x00007ff0012b7758: callq  0x00007ff001214d20  ; OopMap{off=2301}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x00007ff0012b775d: jmpq   0x00007ff0012b70b0
  0x00007ff0012b7762: mov    %rdx,%rdx
  0x00007ff0012b7765: callq  0x00007ff0011875e0  ; OopMap{off=2314}
                                                ;*new  ; - java.util.Arrays::copyOfRange@8 (line 3663)
                                                ;   {runtime_call}
  0x00007ff0012b776a: jmpq   0x00007ff0012b70f5
  0x00007ff0012b776f: movabs $0x0,%rdx          ;   {metadata(NULL)}
  0x00007ff0012b7779: mov    $0xa050f00,%eax
  0x00007ff0012b777e: callq  0x00007ff001214d20  ; OopMap{rax=Oop off=2339}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x00007ff0012b7783: jmpq   0x00007ff0012b70f8
  0x00007ff0012b7788: mov    %rdx,%rdx
  0x00007ff0012b778b: callq  0x00007ff0011875e0  ; OopMap{[136]=Oop off=2352}
                                                ;*new  ; - java.util.Arrays::copyOfRange@12 (line 3663)
                                                ;   {runtime_call}
  0x00007ff0012b7790: jmpq   0x00007ff0012b7141
  0x00007ff0012b7795: mov    %rbx,0x8(%rsp)
  0x00007ff0012b779a: movq   $0xffffffffffffffff,(%rsp)
  0x00007ff0012b77a2: callq  0x00007ff0012175e0  ; OopMap{[136]=Oop rax=Oop off=2375}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::&lt;init&gt;@-1 (line 94)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x00007ff0012b77a7: jmpq   0x00007ff0012b7188
  0x00007ff0012b77ac: mov    %rbx,0x8(%rsp)
  0x00007ff0012b77b1: movq   $0xffffffffffffffff,(%rsp)
  0x00007ff0012b77b9: callq  0x00007ff0012175e0  ; OopMap{[136]=Oop rax=Oop off=2398}
                                                ;*synchronization entry
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@-1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x00007ff0012b77be: jmpq   0x00007ff0012b71cf
  0x00007ff0012b77c3: mov    %rbx,0x8(%rsp)
  0x00007ff0012b77c8: movq   $0xffffffffffffffff,(%rsp)
  0x00007ff0012b77d0: callq  0x00007ff0012175e0  ; OopMap{[136]=Oop rax=Oop off=2421}
                                                ;*synchronization entry
                                                ; - java.lang.Object::&lt;init&gt;@-1 (line 37)
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@1 (line 67)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x00007ff0012b77d5: jmpq   0x00007ff0012b7216
  0x00007ff0012b77da: callq  0x00007ff001216120  ; OopMap{[136]=Oop r13=Oop off=2431}
                                                ;*newarray
                                                ; - java.lang.AbstractStringBuilder::&lt;init&gt;@6 (line 68)
                                                ; - java.lang.StringBuilder::&lt;init&gt;@3 (line 94)
                                                ; - java.util.Arrays::copyOfRange@16 (line 3663)
                                                ;   {runtime_call}
  0x00007ff0012b77df: jmpq   0x00007ff0012b7295
  0x00007ff0012b77e4: mov    %rdx,0x8(%rsp)
  0x00007ff0012b77e9: movq   $0xffffffffffffffff,(%rsp)
  0x00007ff0012b77f1: callq  0x00007ff0012175e0  ; OopMap{[136]=Oop r13=Oop off=2454}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 213)
                                                ; - java.util.Arrays::copyOfRange@20 (line 3663)
                                                ;   {runtime_call}
  0x00007ff0012b77f6: jmpq   0x00007ff0012b7377
  0x00007ff0012b77fb: mov    %rdx,0x8(%rsp)
  0x00007ff0012b7800: movq   $0xffffffffffffffff,(%rsp)
  0x00007ff0012b7808: callq  0x00007ff0012175e0  ; OopMap{[120]=Oop [136]=Oop off=2477}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 141)
                                                ; - java.util.Arrays::copyOfRange@25 (line 3663)
                                                ;   {runtime_call}
  0x00007ff0012b780d: jmpq   0x00007ff0012b7460
  0x00007ff0012b7812: mov    %rdx,0x8(%rsp)
  0x00007ff0012b7817: movq   $0xffffffffffffffff,(%rsp)
  0x00007ff0012b781f: callq  0x00007ff0012175e0  ; OopMap{[120]=Oop [136]=Oop off=2500}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::append@-1 (line 213)
                                                ; - java.util.Arrays::copyOfRange@29 (line 3663)
                                                ;   {runtime_call}
  0x00007ff0012b7824: jmpq   0x00007ff0012b7550
  0x00007ff0012b7829: mov    %rdx,0x8(%rsp)
  0x00007ff0012b782e: movq   $0xffffffffffffffff,(%rsp)
  0x00007ff0012b7836: callq  0x00007ff0012175e0  ; OopMap{[120]=Oop [136]=Oop off=2523}
                                                ;*synchronization entry
                                                ; - java.lang.StringBuilder::toString@-1 (line 412)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x00007ff0012b783b: jmpq   0x00007ff0012b7640
  0x00007ff0012b7840: mov    %rdx,%rdx
  0x00007ff0012b7843: callq  0x00007ff0011875e0  ; OopMap{[120]=Oop [136]=Oop off=2536}
                                                ;*new  ; - java.lang.StringBuilder::toString@0 (line 412)
                                                ; - java.util.Arrays::copyOfRange@32 (line 3663)
                                                ;   {runtime_call}
  0x00007ff0012b7848: jmpq   0x00007ff0012b7681
  0x00007ff0012b784d: nop
  0x00007ff0012b784e: nop
  0x00007ff0012b784f: mov    0x310(%r15),%rax
  0x00007ff0012b7856: movabs $0x0,%r10
  0x00007ff0012b7860: mov    %r10,0x310(%r15)
  0x00007ff0012b7867: movabs $0x0,%r10
  0x00007ff0012b7871: mov    %r10,0x318(%r15)
  0x00007ff0012b7878: add    $0xa0,%rsp
  0x00007ff0012b787f: pop    %rbp
  0x00007ff0012b7880: jmpq   0x00007ff00106cba0  ;   {runtime_call}
  0x00007ff0012b7885: hlt    
  0x00007ff0012b7886: hlt    
  0x00007ff0012b7887: hlt    
  0x00007ff0012b7888: hlt    
  0x00007ff0012b7889: hlt    
  0x00007ff0012b788a: hlt    
  0x00007ff0012b788b: hlt    
  0x00007ff0012b788c: hlt    
  0x00007ff0012b788d: hlt    
  0x00007ff0012b788e: hlt    
  0x00007ff0012b788f: hlt    
  0x00007ff0012b7890: hlt    
  0x00007ff0012b7891: hlt    
  0x00007ff0012b7892: hlt    
  0x00007ff0012b7893: hlt    
  0x00007ff0012b7894: hlt    
  0x00007ff0012b7895: hlt    
  0x00007ff0012b7896: hlt    
  0x00007ff0012b7897: hlt    
  0x00007ff0012b7898: hlt    
  0x00007ff0012b7899: hlt    
  0x00007ff0012b789a: hlt    
  0x00007ff0012b789b: hlt    
  0x00007ff0012b789c: hlt    
  0x00007ff0012b789d: hlt    
  0x00007ff0012b789e: hlt    
  0x00007ff0012b789f: hlt    
[Stub Code]
  0x00007ff0012b78a0: nop                       ;   {no_reloc}
  0x00007ff0012b78a1: nop
  0x00007ff0012b78a2: nop
  0x00007ff0012b78a3: nop
  0x00007ff0012b78a4: nop
  0x00007ff0012b78a5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007ff0012b78af: jmpq   0x00007ff0012b78af  ;   {runtime_call}
  0x00007ff0012b78b4: nop
  0x00007ff0012b78b5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007ff0012b78bf: jmpq   0x00007ff0012b78bf  ;   {runtime_call}
  0x00007ff0012b78c4: nop
  0x00007ff0012b78c5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007ff0012b78cf: jmpq   0x00007ff0012b78cf  ;   {runtime_call}
  0x00007ff0012b78d4: nop
  0x00007ff0012b78d5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007ff0012b78df: jmpq   0x00007ff0012b78df  ;   {runtime_call}
  0x00007ff0012b78e4: nop
  0x00007ff0012b78e5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007ff0012b78ef: jmpq   0x00007ff0012b78ef  ;   {runtime_call}
  0x00007ff0012b78f4: nop
  0x00007ff0012b78f5: movabs $0x0,%rbx          ;   {static_stub}
  0x00007ff0012b78ff: jmpq   0x00007ff0012b78ff  ;   {runtime_call}
[Exception Handler]
  0x00007ff0012b7904: callq  0x00007ff0012186e0  ;   {runtime_call}
  0x00007ff0012b7909: mov    %rsp,-0x28(%rsp)
  0x00007ff0012b790e: sub    $0x80,%rsp
  0x00007ff0012b7915: mov    %rax,0x78(%rsp)
  0x00007ff0012b791a: mov    %rcx,0x70(%rsp)
  0x00007ff0012b791f: mov    %rdx,0x68(%rsp)
  0x00007ff0012b7924: mov    %rbx,0x60(%rsp)
  0x00007ff0012b7929: mov    %rbp,0x50(%rsp)
  0x00007ff0012b792e: mov    %rsi,0x48(%rsp)
  0x00007ff0012b7933: mov    %rdi,0x40(%rsp)
  0x00007ff0012b7938: mov    %r8,0x38(%rsp)
  0x00007ff0012b793d: mov    %r9,0x30(%rsp)
  0x00007ff0012b7942: mov    %r10,0x28(%rsp)
  0x00007ff0012b7947: mov    %r11,0x20(%rsp)
  0x00007ff0012b794c: mov    %r12,0x18(%rsp)
  0x00007ff0012b7951: mov    %r13,0x10(%rsp)
  0x00007ff0012b7956: mov    %r14,0x8(%rsp)
  0x00007ff0012b795b: mov    %r15,(%rsp)
  0x00007ff0012b795f: movabs $0x7ff017f80bfe,%rdi  ;   {external_word}
  0x00007ff0012b7969: movabs $0x7ff0012b7909,%rsi  ;   {internal_word}
  0x00007ff0012b7973: mov    %rsp,%rdx
  0x00007ff0012b7976: and    $0xfffffffffffffff0,%rsp
  0x00007ff0012b797a: callq  0x00007ff017c8f7f0  ;   {runtime_call}
  0x00007ff0012b797f: hlt    
[Deopt Handler Code]
  0x00007ff0012b7980: movabs $0x7ff0012b7980,%r10  ;   {section_word}
  0x00007ff0012b798a: push   %r10
  0x00007ff0012b798c: jmpq   0x00007ff001046e40  ;   {runtime_call}
  0x00007ff0012b7991: hlt    
  0x00007ff0012b7992: hlt    
  0x00007ff0012b7993: hlt    
  0x00007ff0012b7994: hlt    
  0x00007ff0012b7995: hlt    
  0x00007ff0012b7996: hlt    
  0x00007ff0012b7997: hlt    
<nmethod compile_id='14' compiler='C1' level='3' entry='0x00007ff0012b6e60' size='4856' address='0x00007ff0012b6c50' relocation_offset='296' insts_offset='528' stub_offset='3152' scopes_data_offset='3472' scopes_pcs_offset='4096' dependencies_offset='4832' nul_chk_table_offset='4840' oops_offset='3400' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='440' iicount='440' stamp='0.535'/>
<writer thread='140669158946496'/>
<task_queued compile_id='19' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='256' iicount='256' level='3' stamp='0.536' comment='tiered' hot_count='256'/>
<task_queued compile_id='20' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='256' iicount='256' level='3' stamp='0.536' comment='tiered' hot_count='256'/>
<writer thread='140668587435712'/>
Decoding compiled method 0x00007ff0012b7f90:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007feffd5eb178} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;
  # this:     rsi:rsi   = &apos;java/lang/CharacterDataLatin1&apos;
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007ff0012b8100: mov    0x8(%rsi),%r10d
  0x00007ff0012b8104: shl    $0x3,%r10
  0x00007ff0012b8108: cmp    %rax,%r10
  0x00007ff0012b810b: jne    0x00007ff001045ba0  ;   {runtime_call}
  0x00007ff0012b8111: nopl   0x0(%rax,%rax,1)
  0x00007ff0012b8119: nopl   0x0(%rax)
[Verified Entry Point]
  0x00007ff0012b8120: mov    %eax,-0x14000(%rsp)
  0x00007ff0012b8127: push   %rbp
  0x00007ff0012b8128: sub    $0x30,%rsp
  0x00007ff0012b812c: movabs $0x7feffd6648c0,%rax  ;   {metadata(method data for {method} {0x00007feffd5eb178} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007ff0012b8136: mov    0xdc(%rax),%edi
  0x00007ff0012b813c: add    $0x8,%edi
  0x00007ff0012b813f: mov    %edi,0xdc(%rax)
  0x00007ff0012b8145: movabs $0x7feffd5eb178,%rax  ;   {metadata({method} {0x00007feffd5eb178} &apos;getProperties&apos; &apos;(I)I&apos; in &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007ff0012b814f: and    $0x1ff8,%edi
  0x00007ff0012b8155: cmp    $0x0,%edi
  0x00007ff0012b8158: je     0x00007ff0012b818a  ;*iload_1
                                                ; - java.lang.CharacterDataLatin1::getProperties@0 (line 71)

  0x00007ff0012b815e: and    $0xffff,%edx
  0x00007ff0012b8164: movabs $0x6741c3588,%rax  ;   {oop([I)}
  0x00007ff0012b816e: movslq %edx,%rsi
  0x00007ff0012b8171: cmp    0xc(%rax),%edx     ; implicit exception: dispatches to 0x00007ff0012b819e
  0x00007ff0012b8174: jae    0x00007ff0012b81a8
  0x00007ff0012b817a: mov    0x10(%rax,%rsi,4),%eax  ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)

  0x00007ff0012b817e: add    $0x30,%rsp
  0x00007ff0012b8182: pop    %rbp
  0x00007ff0012b8183: test   %eax,0x17262f77(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012b8189: retq   
  0x00007ff0012b818a: mov    %rax,0x8(%rsp)
  0x00007ff0012b818f: movq   $0xffffffffffffffff,(%rsp)
  0x00007ff0012b8197: callq  0x00007ff0012175e0  ; OopMap{rsi=Oop off=156}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterDataLatin1::getProperties@-1 (line 71)
                                                ;   {runtime_call}
  0x00007ff0012b819c: jmp    0x00007ff0012b815e
  0x00007ff0012b819e: callq  0x00007ff001186e80  ; OopMap{rax=Oop off=163}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x00007ff0012b81a3: callq  0x00007ff001186e80  ; OopMap{rax=Oop off=168}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x00007ff0012b81a8: mov    %rdx,(%rsp)
  0x00007ff0012b81ac: callq  0x00007ff00106c700  ; OopMap{rax=Oop off=177}
                                                ;*iaload
                                                ; - java.lang.CharacterDataLatin1::getProperties@7 (line 72)
                                                ;   {runtime_call}
  0x00007ff0012b81b1: nop
  0x00007ff0012b81b2: nop
  0x00007ff0012b81b3: mov    0x310(%r15),%rax
  0x00007ff0012b81ba: movabs $0x0,%r10
  0x00007ff0012b81c4: mov    %r10,0x310(%r15)
  0x00007ff0012b81cb: movabs $0x0,%r10
  0x00007ff0012b81d5: mov    %r10,0x318(%r15)
  0x00007ff0012b81dc: add    $0x30,%rsp
  0x00007ff0012b81e0: pop    %rbp
  0x00007ff0012b81e1: jmpq   0x00007ff00106cba0  ;   {runtime_call}
  0x00007ff0012b81e6: hlt    
  0x00007ff0012b81e7: hlt    
  0x00007ff0012b81e8: hlt    
  0x00007ff0012b81e9: hlt    
  0x00007ff0012b81ea: hlt    
  0x00007ff0012b81eb: hlt    
  0x00007ff0012b81ec: hlt    
  0x00007ff0012b81ed: hlt    
  0x00007ff0012b81ee: hlt    
  0x00007ff0012b81ef: hlt    
  0x00007ff0012b81f0: hlt    
  0x00007ff0012b81f1: hlt    
  0x00007ff0012b81f2: hlt    
  0x00007ff0012b81f3: hlt    
  0x00007ff0012b81f4: hlt    
  0x00007ff0012b81f5: hlt    
  0x00007ff0012b81f6: hlt    
  0x00007ff0012b81f7: hlt    
  0x00007ff0012b81f8: hlt    
  0x00007ff0012b81f9: hlt    
  0x00007ff0012b81fa: hlt    
  0x00007ff0012b81fb: hlt    
  0x00007ff0012b81fc: hlt    
  0x00007ff0012b81fd: hlt    
  0x00007ff0012b81fe: hlt    
  0x00007ff0012b81ff: hlt    
[Exception Handler]
[Stub Code]
  0x00007ff0012b8200: callq  0x00007ff0012186e0  ;   {no_reloc}
  0x00007ff0012b8205: mov    %rsp,-0x28(%rsp)
  0x00007ff0012b820a: sub    $0x80,%rsp
  0x00007ff0012b8211: mov    %rax,0x78(%rsp)
  0x00007ff0012b8216: mov    %rcx,0x70(%rsp)
  0x00007ff0012b821b: mov    %rdx,0x68(%rsp)
  0x00007ff0012b8220: mov    %rbx,0x60(%rsp)
  0x00007ff0012b8225: mov    %rbp,0x50(%rsp)
  0x00007ff0012b822a: mov    %rsi,0x48(%rsp)
  0x00007ff0012b822f: mov    %rdi,0x40(%rsp)
  0x00007ff0012b8234: mov    %r8,0x38(%rsp)
  0x00007ff0012b8239: mov    %r9,0x30(%rsp)
  0x00007ff0012b823e: mov    %r10,0x28(%rsp)
  0x00007ff0012b8243: mov    %r11,0x20(%rsp)
  0x00007ff0012b8248: mov    %r12,0x18(%rsp)
  0x00007ff0012b824d: mov    %r13,0x10(%rsp)
  0x00007ff0012b8252: mov    %r14,0x8(%rsp)
  0x00007ff0012b8257: mov    %r15,(%rsp)
  0x00007ff0012b825b: movabs $0x7ff017f80bfe,%rdi  ;   {external_word}
  0x00007ff0012b8265: movabs $0x7ff0012b8205,%rsi  ;   {internal_word}
  0x00007ff0012b826f: mov    %rsp,%rdx
  0x00007ff0012b8272: and    $0xfffffffffffffff0,%rsp
  0x00007ff0012b8276: callq  0x00007ff017c8f7f0  ;   {runtime_call}
  0x00007ff0012b827b: hlt    
[Deopt Handler Code]
  0x00007ff0012b827c: movabs $0x7ff0012b827c,%r10  ;   {section_word}
  0x00007ff0012b8286: push   %r10
  0x00007ff0012b8288: jmpq   0x00007ff001046e40  ;   {runtime_call}
  0x00007ff0012b828d: hlt    
  0x00007ff0012b828e: hlt    
  0x00007ff0012b828f: hlt    
<nmethod compile_id='20' compiler='C1' level='3' entry='0x00007ff0012b8100' size='984' address='0x00007ff0012b7f90' relocation_offset='296' insts_offset='368' stub_offset='624' scopes_data_offset='776' scopes_pcs_offset='824' dependencies_offset='952' nul_chk_table_offset='960' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='282' iicount='282' stamp='0.551'/>
<writer thread='140668585330368'/>
Decoding compiled method 0x00007ff0012b8390:
Code:
[Entry Point]
[Verified Entry Point]
[Constants]
  # {method} {0x00007feffd5eaaa0} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;
  # parm0:    rsi       = int
  #           [sp+0x40]  (sp of caller)
  0x00007ff0012b8540: mov    %eax,-0x14000(%rsp)
  0x00007ff0012b8547: push   %rbp
  0x00007ff0012b8548: sub    $0x30,%rsp
  0x00007ff0012b854c: movabs $0x7feffd664610,%rax  ;   {metadata(method data for {method} {0x00007feffd5eaaa0} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x00007ff0012b8556: mov    0xdc(%rax),%edi
  0x00007ff0012b855c: add    $0x8,%edi
  0x00007ff0012b855f: mov    %edi,0xdc(%rax)
  0x00007ff0012b8565: movabs $0x7feffd5eaaa0,%rax  ;   {metadata({method} {0x00007feffd5eaaa0} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x00007ff0012b856f: and    $0x1ff8,%edi
  0x00007ff0012b8575: cmp    $0x0,%edi
  0x00007ff0012b8578: je     0x00007ff0012b86fc  ;*iload_0
                                                ; - java.lang.CharacterData::of@0 (line 77)

  0x00007ff0012b857e: mov    %rsi,%rax
  0x00007ff0012b8581: shr    $0x8,%eax
  0x00007ff0012b8584: cmp    $0x0,%eax
  0x00007ff0012b8587: movabs $0x7feffd664610,%rax  ;   {metadata(method data for {method} {0x00007feffd5eaaa0} &apos;of&apos; &apos;(I)Ljava/lang/CharacterData;&apos; in &apos;java/lang/CharacterData&apos;)}
  0x00007ff0012b8591: movabs $0x108,%rdi
  0x00007ff0012b859b: jne    0x00007ff0012b85ab
  0x00007ff0012b85a1: movabs $0x118,%rdi
  0x00007ff0012b85ab: mov    (%rax,%rdi,1),%rbx
  0x00007ff0012b85af: lea    0x1(%rbx),%rbx
  0x00007ff0012b85b3: mov    %rbx,(%rax,%rdi,1)
  0x00007ff0012b85b7: je     0x00007ff0012b86e6  ;*ifne
                                                ; - java.lang.CharacterData::of@4 (line 77)

  0x00007ff0012b85bd: shr    $0x10,%esi
  0x00007ff0012b85c0: cmp    $0x0,%esi
  0x00007ff0012b85c3: je     0x00007ff0012b86be
  0x00007ff0012b85c9: cmp    $0x1,%esi
  0x00007ff0012b85cc: je     0x00007ff0012b8696
  0x00007ff0012b85d2: cmp    $0x2,%esi
  0x00007ff0012b85d5: je     0x00007ff0012b866e
  0x00007ff0012b85db: cmp    $0xe,%esi
  0x00007ff0012b85de: je     0x00007ff0012b8646
  0x00007ff0012b85e4: cmp    $0xf,%esi
  0x00007ff0012b85e7: je     0x00007ff0012b85f6
  0x00007ff0012b85ed: cmp    $0x10,%esi
  0x00007ff0012b85f0: jne    0x00007ff0012b861e  ;*tableswitch
                                                ; - java.lang.CharacterData::of@15 (line 80)

  0x00007ff0012b85f6: xchg   %ax,%ax
  0x00007ff0012b85f8: jmpq   0x00007ff0012b8768  ;   {no_reloc}
  0x00007ff0012b85fd: add    %al,(%rax)
  0x00007ff0012b85ff: add    %al,(%rax)
  0x00007ff0012b8601: add    %ah,0xf(%rsi)
  0x00007ff0012b8604: (bad)  
  0x00007ff0012b8605: add    %r8b,(%rax)
  0x00007ff0012b8608: jmpq   0x00007ff0012b8782  ; implicit exception: dispatches to 0x00007ff0012b8772
  0x00007ff0012b860d: nop
  0x00007ff0012b860e: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)

  0x00007ff0012b8612: add    $0x30,%rsp
  0x00007ff0012b8616: pop    %rbp
  0x00007ff0012b8617: test   %eax,0x17262ae3(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012b861d: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@115 (line 91)

  0x00007ff0012b861e: xchg   %ax,%ax
  0x00007ff0012b8620: jmpq   0x00007ff0012b87e1  ;   {no_reloc}
  0x00007ff0012b8625: add    %al,(%rax)
  0x00007ff0012b8627: add    %al,(%rax)
  0x00007ff0012b8629: add    %ah,0xf(%rsi)
  0x00007ff0012b862c: (bad)  
  0x00007ff0012b862d: add    %r8b,(%rax)
  0x00007ff0012b8630: jmpq   0x00007ff0012b87fb  ; implicit exception: dispatches to 0x00007ff0012b87eb
  0x00007ff0012b8635: nop
  0x00007ff0012b8636: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)

  0x00007ff0012b863a: add    $0x30,%rsp
  0x00007ff0012b863e: pop    %rbp
  0x00007ff0012b863f: test   %eax,0x17262abb(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012b8645: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@119 (line 93)

  0x00007ff0012b8646: xchg   %ax,%ax
  0x00007ff0012b8648: jmpq   0x00007ff0012b885a  ;   {no_reloc}
  0x00007ff0012b864d: add    %al,(%rax)
  0x00007ff0012b864f: add    %al,(%rax)
  0x00007ff0012b8651: add    %ah,0xf(%rsi)
  0x00007ff0012b8654: (bad)  
  0x00007ff0012b8655: add    %r8b,(%rax)
  0x00007ff0012b8658: jmpq   0x00007ff0012b8874  ; implicit exception: dispatches to 0x00007ff0012b8864
  0x00007ff0012b865d: nop
  0x00007ff0012b865e: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)

  0x00007ff0012b8662: add    $0x30,%rsp
  0x00007ff0012b8666: pop    %rbp
  0x00007ff0012b8667: test   %eax,0x17262a93(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012b866d: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@111 (line 88)

  0x00007ff0012b866e: xchg   %ax,%ax
  0x00007ff0012b8670: jmpq   0x00007ff0012b88d3  ;   {no_reloc}
  0x00007ff0012b8675: add    %al,(%rax)
  0x00007ff0012b8677: add    %al,(%rax)
  0x00007ff0012b8679: add    %ah,0xf(%rsi)
  0x00007ff0012b867c: (bad)  
  0x00007ff0012b867d: add    %r8b,(%rax)
  0x00007ff0012b8680: jmpq   0x00007ff0012b88ed  ; implicit exception: dispatches to 0x00007ff0012b88dd
  0x00007ff0012b8685: nop
  0x00007ff0012b8686: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)

  0x00007ff0012b868a: add    $0x30,%rsp
  0x00007ff0012b868e: pop    %rbp
  0x00007ff0012b868f: test   %eax,0x17262a6b(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012b8695: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@107 (line 86)

  0x00007ff0012b8696: xchg   %ax,%ax
  0x00007ff0012b8698: jmpq   0x00007ff0012b894c  ;   {no_reloc}
  0x00007ff0012b869d: add    %al,(%rax)
  0x00007ff0012b869f: add    %al,(%rax)
  0x00007ff0012b86a1: add    %ah,0xf(%rsi)
  0x00007ff0012b86a4: (bad)  
  0x00007ff0012b86a5: add    %r8b,(%rax)
  0x00007ff0012b86a8: jmpq   0x00007ff0012b8966  ; implicit exception: dispatches to 0x00007ff0012b8956
  0x00007ff0012b86ad: nop
  0x00007ff0012b86ae: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)

  0x00007ff0012b86b2: add    $0x30,%rsp
  0x00007ff0012b86b6: pop    %rbp
  0x00007ff0012b86b7: test   %eax,0x17262a43(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012b86bd: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@103 (line 84)

  0x00007ff0012b86be: xchg   %ax,%ax
  0x00007ff0012b86c0: jmpq   0x00007ff0012b89c5  ;   {no_reloc}
  0x00007ff0012b86c5: add    %al,(%rax)
  0x00007ff0012b86c7: add    %al,(%rax)
  0x00007ff0012b86c9: add    %ah,0xf(%rsi)
  0x00007ff0012b86cc: (bad)  
  0x00007ff0012b86cd: add    %r8b,(%rax)
  0x00007ff0012b86d0: jmpq   0x00007ff0012b89df  ; implicit exception: dispatches to 0x00007ff0012b89cf
  0x00007ff0012b86d5: nop
  0x00007ff0012b86d6: shl    $0x3,%rax          ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)

  0x00007ff0012b86da: add    $0x30,%rsp
  0x00007ff0012b86de: pop    %rbp
  0x00007ff0012b86df: test   %eax,0x17262a1b(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012b86e5: retq                      ;*areturn
                                                ; - java.lang.CharacterData::of@99 (line 82)

  0x00007ff0012b86e6: movabs $0x6741c3578,%rax  ;   {oop(a &apos;java/lang/CharacterDataLatin1&apos;)}
  0x00007ff0012b86f0: add    $0x30,%rsp
  0x00007ff0012b86f4: pop    %rbp
  0x00007ff0012b86f5: test   %eax,0x17262a05(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012b86fb: retq   
  0x00007ff0012b86fc: mov    %rax,0x8(%rsp)
  0x00007ff0012b8701: movq   $0xffffffffffffffff,(%rsp)
  0x00007ff0012b8709: callq  0x00007ff0012175e0  ; OopMap{off=462}
                                                ;*synchronization entry
                                                ; - java.lang.CharacterData::of@-1 (line 77)
                                                ;   {runtime_call}
  0x00007ff0012b870e: jmpq   0x00007ff0012b857e
  0x00007ff0012b8713: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007ff0012b871d: push   %rax
  0x00007ff0012b871e: push   %rbx
  0x00007ff0012b871f: mov    0x48(%rax),%rbx
  0x00007ff0012b8723: push   %rdi
  0x00007ff0012b8724: push   %rsi
  0x00007ff0012b8725: push   %rdx
  0x00007ff0012b8726: push   %rcx
  0x00007ff0012b8727: push   %r8
  0x00007ff0012b8729: push   %r9
  0x00007ff0012b872b: push   %r10
  0x00007ff0012b872d: mov    %rsp,%r10
  0x00007ff0012b8730: and    $0xfffffffffffffff0,%rsp
  0x00007ff0012b8734: push   %r10
  0x00007ff0012b8736: push   %r11
  0x00007ff0012b8738: mov    $0x0,%edi
  0x00007ff0012b873d: callq  0x00007ff0183a64e0  ;   {runtime_call}
  0x00007ff0012b8742: pop    %r11
  0x00007ff0012b8744: pop    %rsp
  0x00007ff0012b8745: pop    %r10
  0x00007ff0012b8747: pop    %r9
  0x00007ff0012b8749: pop    %r8
  0x00007ff0012b874b: pop    %rcx
  0x00007ff0012b874c: pop    %rdx
  0x00007ff0012b874d: pop    %rsi
  0x00007ff0012b874e: pop    %rdi
  0x00007ff0012b874f: cmp    0x118(%rbx),%rax
  0x00007ff0012b8756: pop    %rbx
  0x00007ff0012b8757: pop    %rax
  0x00007ff0012b8758: jne    0x00007ff0012b8768
  0x00007ff0012b875e: jmpq   0x00007ff0012b8602
  0x00007ff0012b8763: mov    $0xa4b5500,%eax
  0x00007ff0012b8768: callq  0x00007ff001218060  ; OopMap{off=557}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x00007ff0012b876d: jmpq   0x00007ff0012b85f8
  0x00007ff0012b8772: callq  0x00007ff001186e80  ; OopMap{rax=Oop off=567}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x00007ff0012b8777: mov    0x0(%rax),%eax
  0x00007ff0012b877d: mov    $0x6050b00,%eax
  0x00007ff0012b8782: callq  0x00007ff001215120  ; OopMap{rax=Oop off=583}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@112 (line 91)
                                                ;   {runtime_call}
  0x00007ff0012b8787: jmpq   0x00007ff0012b8608
  0x00007ff0012b878c: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007ff0012b8796: push   %rax
  0x00007ff0012b8797: push   %rbx
  0x00007ff0012b8798: mov    0x48(%rax),%rbx
  0x00007ff0012b879c: push   %rdi
  0x00007ff0012b879d: push   %rsi
  0x00007ff0012b879e: push   %rdx
  0x00007ff0012b879f: push   %rcx
  0x00007ff0012b87a0: push   %r8
  0x00007ff0012b87a2: push   %r9
  0x00007ff0012b87a4: push   %r10
  0x00007ff0012b87a6: mov    %rsp,%r10
  0x00007ff0012b87a9: and    $0xfffffffffffffff0,%rsp
  0x00007ff0012b87ad: push   %r10
  0x00007ff0012b87af: push   %r11
  0x00007ff0012b87b1: mov    $0x0,%edi
  0x00007ff0012b87b6: callq  0x00007ff0183a64e0  ;   {runtime_call}
  0x00007ff0012b87bb: pop    %r11
  0x00007ff0012b87bd: pop    %rsp
  0x00007ff0012b87be: pop    %r10
  0x00007ff0012b87c0: pop    %r9
  0x00007ff0012b87c2: pop    %r8
  0x00007ff0012b87c4: pop    %rcx
  0x00007ff0012b87c5: pop    %rdx
  0x00007ff0012b87c6: pop    %rsi
  0x00007ff0012b87c7: pop    %rdi
  0x00007ff0012b87c8: cmp    0x118(%rbx),%rax
  0x00007ff0012b87cf: pop    %rbx
  0x00007ff0012b87d0: pop    %rax
  0x00007ff0012b87d1: jne    0x00007ff0012b87e1
  0x00007ff0012b87d7: jmpq   0x00007ff0012b862a
  0x00007ff0012b87dc: mov    $0xa4b5500,%eax
  0x00007ff0012b87e1: callq  0x00007ff001218060  ; OopMap{off=678}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x00007ff0012b87e6: jmpq   0x00007ff0012b8620
  0x00007ff0012b87eb: callq  0x00007ff001186e80  ; OopMap{rax=Oop off=688}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x00007ff0012b87f0: mov    0x0(%rax),%eax
  0x00007ff0012b87f6: mov    $0x6050b00,%eax
  0x00007ff0012b87fb: callq  0x00007ff001215120  ; OopMap{rax=Oop off=704}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@116 (line 93)
                                                ;   {runtime_call}
  0x00007ff0012b8800: jmpq   0x00007ff0012b8630
  0x00007ff0012b8805: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007ff0012b880f: push   %rax
  0x00007ff0012b8810: push   %rbx
  0x00007ff0012b8811: mov    0x48(%rax),%rbx
  0x00007ff0012b8815: push   %rdi
  0x00007ff0012b8816: push   %rsi
  0x00007ff0012b8817: push   %rdx
  0x00007ff0012b8818: push   %rcx
  0x00007ff0012b8819: push   %r8
  0x00007ff0012b881b: push   %r9
  0x00007ff0012b881d: push   %r10
  0x00007ff0012b881f: mov    %rsp,%r10
  0x00007ff0012b8822: and    $0xfffffffffffffff0,%rsp
  0x00007ff0012b8826: push   %r10
  0x00007ff0012b8828: push   %r11
  0x00007ff0012b882a: mov    $0x0,%edi
  0x00007ff0012b882f: callq  0x00007ff0183a64e0  ;   {runtime_call}
  0x00007ff0012b8834: pop    %r11
  0x00007ff0012b8836: pop    %rsp
  0x00007ff0012b8837: pop    %r10
  0x00007ff0012b8839: pop    %r9
  0x00007ff0012b883b: pop    %r8
  0x00007ff0012b883d: pop    %rcx
  0x00007ff0012b883e: pop    %rdx
  0x00007ff0012b883f: pop    %rsi
  0x00007ff0012b8840: pop    %rdi
  0x00007ff0012b8841: cmp    0x118(%rbx),%rax
  0x00007ff0012b8848: pop    %rbx
  0x00007ff0012b8849: pop    %rax
  0x00007ff0012b884a: jne    0x00007ff0012b885a
  0x00007ff0012b8850: jmpq   0x00007ff0012b8652
  0x00007ff0012b8855: mov    $0xa4b5500,%eax
  0x00007ff0012b885a: callq  0x00007ff001218060  ; OopMap{off=799}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x00007ff0012b885f: jmpq   0x00007ff0012b8648
  0x00007ff0012b8864: callq  0x00007ff001186e80  ; OopMap{rax=Oop off=809}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x00007ff0012b8869: mov    0x0(%rax),%eax
  0x00007ff0012b886f: mov    $0x6050b00,%eax
  0x00007ff0012b8874: callq  0x00007ff001215120  ; OopMap{rax=Oop off=825}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@108 (line 88)
                                                ;   {runtime_call}
  0x00007ff0012b8879: jmpq   0x00007ff0012b8658
  0x00007ff0012b887e: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007ff0012b8888: push   %rax
  0x00007ff0012b8889: push   %rbx
  0x00007ff0012b888a: mov    0x48(%rax),%rbx
  0x00007ff0012b888e: push   %rdi
  0x00007ff0012b888f: push   %rsi
  0x00007ff0012b8890: push   %rdx
  0x00007ff0012b8891: push   %rcx
  0x00007ff0012b8892: push   %r8
  0x00007ff0012b8894: push   %r9
  0x00007ff0012b8896: push   %r10
  0x00007ff0012b8898: mov    %rsp,%r10
  0x00007ff0012b889b: and    $0xfffffffffffffff0,%rsp
  0x00007ff0012b889f: push   %r10
  0x00007ff0012b88a1: push   %r11
  0x00007ff0012b88a3: mov    $0x0,%edi
  0x00007ff0012b88a8: callq  0x00007ff0183a64e0  ;   {runtime_call}
  0x00007ff0012b88ad: pop    %r11
  0x00007ff0012b88af: pop    %rsp
  0x00007ff0012b88b0: pop    %r10
  0x00007ff0012b88b2: pop    %r9
  0x00007ff0012b88b4: pop    %r8
  0x00007ff0012b88b6: pop    %rcx
  0x00007ff0012b88b7: pop    %rdx
  0x00007ff0012b88b8: pop    %rsi
  0x00007ff0012b88b9: pop    %rdi
  0x00007ff0012b88ba: cmp    0x118(%rbx),%rax
  0x00007ff0012b88c1: pop    %rbx
  0x00007ff0012b88c2: pop    %rax
  0x00007ff0012b88c3: jne    0x00007ff0012b88d3
  0x00007ff0012b88c9: jmpq   0x00007ff0012b867a
  0x00007ff0012b88ce: mov    $0xa4b5500,%eax
  0x00007ff0012b88d3: callq  0x00007ff001218060  ; OopMap{off=920}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x00007ff0012b88d8: jmpq   0x00007ff0012b8670
  0x00007ff0012b88dd: callq  0x00007ff001186e80  ; OopMap{rax=Oop off=930}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x00007ff0012b88e2: mov    0x0(%rax),%eax
  0x00007ff0012b88e8: mov    $0x6050b00,%eax
  0x00007ff0012b88ed: callq  0x00007ff001215120  ; OopMap{rax=Oop off=946}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@104 (line 86)
                                                ;   {runtime_call}
  0x00007ff0012b88f2: jmpq   0x00007ff0012b8680
  0x00007ff0012b88f7: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007ff0012b8901: push   %rax
  0x00007ff0012b8902: push   %rbx
  0x00007ff0012b8903: mov    0x48(%rax),%rbx
  0x00007ff0012b8907: push   %rdi
  0x00007ff0012b8908: push   %rsi
  0x00007ff0012b8909: push   %rdx
  0x00007ff0012b890a: push   %rcx
  0x00007ff0012b890b: push   %r8
  0x00007ff0012b890d: push   %r9
  0x00007ff0012b890f: push   %r10
  0x00007ff0012b8911: mov    %rsp,%r10
  0x00007ff0012b8914: and    $0xfffffffffffffff0,%rsp
  0x00007ff0012b8918: push   %r10
  0x00007ff0012b891a: push   %r11
  0x00007ff0012b891c: mov    $0x0,%edi
  0x00007ff0012b8921: callq  0x00007ff0183a64e0  ;   {runtime_call}
  0x00007ff0012b8926: pop    %r11
  0x00007ff0012b8928: pop    %rsp
  0x00007ff0012b8929: pop    %r10
  0x00007ff0012b892b: pop    %r9
  0x00007ff0012b892d: pop    %r8
  0x00007ff0012b892f: pop    %rcx
  0x00007ff0012b8930: pop    %rdx
  0x00007ff0012b8931: pop    %rsi
  0x00007ff0012b8932: pop    %rdi
  0x00007ff0012b8933: cmp    0x118(%rbx),%rax
  0x00007ff0012b893a: pop    %rbx
  0x00007ff0012b893b: pop    %rax
  0x00007ff0012b893c: jne    0x00007ff0012b894c
  0x00007ff0012b8942: jmpq   0x00007ff0012b86a2
  0x00007ff0012b8947: mov    $0xa4b5500,%eax
  0x00007ff0012b894c: callq  0x00007ff001218060  ; OopMap{off=1041}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x00007ff0012b8951: jmpq   0x00007ff0012b8698
  0x00007ff0012b8956: callq  0x00007ff001186e80  ; OopMap{rax=Oop off=1051}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x00007ff0012b895b: mov    0x0(%rax),%eax
  0x00007ff0012b8961: mov    $0x6050b00,%eax
  0x00007ff0012b8966: callq  0x00007ff001215120  ; OopMap{rax=Oop off=1067}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@100 (line 84)
                                                ;   {runtime_call}
  0x00007ff0012b896b: jmpq   0x00007ff0012b86a8
  0x00007ff0012b8970: movabs $0x0,%rax          ;   {oop(NULL)}
  0x00007ff0012b897a: push   %rax
  0x00007ff0012b897b: push   %rbx
  0x00007ff0012b897c: mov    0x48(%rax),%rbx
  0x00007ff0012b8980: push   %rdi
  0x00007ff0012b8981: push   %rsi
  0x00007ff0012b8982: push   %rdx
  0x00007ff0012b8983: push   %rcx
  0x00007ff0012b8984: push   %r8
  0x00007ff0012b8986: push   %r9
  0x00007ff0012b8988: push   %r10
  0x00007ff0012b898a: mov    %rsp,%r10
  0x00007ff0012b898d: and    $0xfffffffffffffff0,%rsp
  0x00007ff0012b8991: push   %r10
  0x00007ff0012b8993: push   %r11
  0x00007ff0012b8995: mov    $0x0,%edi
  0x00007ff0012b899a: callq  0x00007ff0183a64e0  ;   {runtime_call}
  0x00007ff0012b899f: pop    %r11
  0x00007ff0012b89a1: pop    %rsp
  0x00007ff0012b89a2: pop    %r10
  0x00007ff0012b89a4: pop    %r9
  0x00007ff0012b89a6: pop    %r8
  0x00007ff0012b89a8: pop    %rcx
  0x00007ff0012b89a9: pop    %rdx
  0x00007ff0012b89aa: pop    %rsi
  0x00007ff0012b89ab: pop    %rdi
  0x00007ff0012b89ac: cmp    0x118(%rbx),%rax
  0x00007ff0012b89b3: pop    %rbx
  0x00007ff0012b89b4: pop    %rax
  0x00007ff0012b89b5: jne    0x00007ff0012b89c5
  0x00007ff0012b89bb: jmpq   0x00007ff0012b86ca
  0x00007ff0012b89c0: mov    $0xa4b5500,%eax
  0x00007ff0012b89c5: callq  0x00007ff001218060  ; OopMap{off=1162}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x00007ff0012b89ca: jmpq   0x00007ff0012b86c0
  0x00007ff0012b89cf: callq  0x00007ff001186e80  ; OopMap{rax=Oop off=1172}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x00007ff0012b89d4: mov    0x0(%rax),%eax
  0x00007ff0012b89da: mov    $0x6050b00,%eax
  0x00007ff0012b89df: callq  0x00007ff001215120  ; OopMap{rax=Oop off=1188}
                                                ;*getstatic instance
                                                ; - java.lang.CharacterData::of@96 (line 82)
                                                ;   {runtime_call}
  0x00007ff0012b89e4: jmpq   0x00007ff0012b86d0
  0x00007ff0012b89e9: nop
  0x00007ff0012b89ea: nop
  0x00007ff0012b89eb: mov    0x310(%r15),%rax
  0x00007ff0012b89f2: movabs $0x0,%r10
  0x00007ff0012b89fc: mov    %r10,0x310(%r15)
  0x00007ff0012b8a03: movabs $0x0,%r10
  0x00007ff0012b8a0d: mov    %r10,0x318(%r15)
  0x00007ff0012b8a14: add    $0x30,%rsp
  0x00007ff0012b8a18: pop    %rbp
  0x00007ff0012b8a19: jmpq   0x00007ff00106cba0  ;   {runtime_call}
  0x00007ff0012b8a1e: hlt    
  0x00007ff0012b8a1f: hlt    
[Exception Handler]
[Stub Code]
  0x00007ff0012b8a20: callq  0x00007ff0012186e0  ;   {no_reloc}
  0x00007ff0012b8a25: mov    %rsp,-0x28(%rsp)
  0x00007ff0012b8a2a: sub    $0x80,%rsp
  0x00007ff0012b8a31: mov    %rax,0x78(%rsp)
  0x00007ff0012b8a36: mov    %rcx,0x70(%rsp)
  0x00007ff0012b8a3b: mov    %rdx,0x68(%rsp)
  0x00007ff0012b8a40: mov    %rbx,0x60(%rsp)
  0x00007ff0012b8a45: mov    %rbp,0x50(%rsp)
  0x00007ff0012b8a4a: mov    %rsi,0x48(%rsp)
  0x00007ff0012b8a4f: mov    %rdi,0x40(%rsp)
  0x00007ff0012b8a54: mov    %r8,0x38(%rsp)
  0x00007ff0012b8a59: mov    %r9,0x30(%rsp)
  0x00007ff0012b8a5e: mov    %r10,0x28(%rsp)
  0x00007ff0012b8a63: mov    %r11,0x20(%rsp)
  0x00007ff0012b8a68: mov    %r12,0x18(%rsp)
  0x00007ff0012b8a6d: mov    %r13,0x10(%rsp)
  0x00007ff0012b8a72: mov    %r14,0x8(%rsp)
  0x00007ff0012b8a77: mov    %r15,(%rsp)
  0x00007ff0012b8a7b: movabs $0x7ff017f80bfe,%rdi  ;   {external_word}
  0x00007ff0012b8a85: movabs $0x7ff0012b8a25,%rsi  ;   {internal_word}
  0x00007ff0012b8a8f: mov    %rsp,%rdx
  0x00007ff0012b8a92: and    $0xfffffffffffffff0,%rsp
  0x00007ff0012b8a96: callq  0x00007ff017c8f7f0  ;   {runtime_call}
  0x00007ff0012b8a9b: hlt    
[Deopt Handler Code]
  0x00007ff0012b8a9c: movabs $0x7ff0012b8a9c,%r10  ;   {section_word}
  0x00007ff0012b8aa6: push   %r10
  0x00007ff0012b8aa8: jmpq   0x00007ff001046e40  ;   {runtime_call}
  0x00007ff0012b8aad: hlt    
  0x00007ff0012b8aae: hlt    
  0x00007ff0012b8aaf: hlt    
<nmethod compile_id='19' compiler='C1' level='3' entry='0x00007ff0012b8540' size='2616' address='0x00007ff0012b8390' relocation_offset='296' insts_offset='432' stub_offset='1680' scopes_data_offset='1832' scopes_pcs_offset='1976' dependencies_offset='2552' nul_chk_table_offset='2560' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='282' iicount='282' stamp='0.603'/>
<writer thread='140669158946496'/>
<task_queued compile_id='21' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='256' backedge_count='1573' iicount='256' level='3' stamp='0.605' comment='tiered' hot_count='256'/>
<task_queued compile_id='22' method='java/util/ArrayList size ()I' bytes='5' count='128' iicount='128' level='1' stamp='0.605' comment='tiered' hot_count='128'/>
<writer thread='140668586383040'/>
Decoding compiled method 0x00007ff0012b9210:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007feffd4f4278} &apos;size&apos; &apos;()I&apos; in &apos;java/util/ArrayList&apos;
  #           [sp+0x40]  (sp of caller)
  0x00007ff0012b9360: mov    0x8(%rsi),%r10d
  0x00007ff0012b9364: shl    $0x3,%r10
  0x00007ff0012b9368: cmp    %rax,%r10
  0x00007ff0012b936b: jne    0x00007ff001045ba0  ;   {runtime_call}
  0x00007ff0012b9371: nopl   0x0(%rax,%rax,1)
  0x00007ff0012b9379: nopl   0x0(%rax)
[Verified Entry Point]
  0x00007ff0012b9380: mov    %eax,-0x14000(%rsp)
  0x00007ff0012b9387: push   %rbp
  0x00007ff0012b9388: sub    $0x30,%rsp         ;*aload_0
                                                ; - java.util.ArrayList::size@0 (line 284)

  0x00007ff0012b938c: mov    0x10(%rsi),%eax    ;*getfield size
                                                ; - java.util.ArrayList::size@1 (line 284)

  0x00007ff0012b938f: add    $0x30,%rsp
  0x00007ff0012b9393: pop    %rbp
  0x00007ff0012b9394: test   %eax,0x17261d66(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012b939a: retq   
  0x00007ff0012b939b: nop
  0x00007ff0012b939c: nop
  0x00007ff0012b939d: mov    0x310(%r15),%rax
  0x00007ff0012b93a4: movabs $0x0,%r10
  0x00007ff0012b93ae: mov    %r10,0x310(%r15)
  0x00007ff0012b93b5: movabs $0x0,%r10
  0x00007ff0012b93bf: mov    %r10,0x318(%r15)
  0x00007ff0012b93c6: add    $0x30,%rsp
  0x00007ff0012b93ca: pop    %rbp
  0x00007ff0012b93cb: jmpq   0x00007ff00106cba0  ;   {runtime_call}
  0x00007ff0012b93d0: hlt    
  0x00007ff0012b93d1: hlt    
  0x00007ff0012b93d2: hlt    
  0x00007ff0012b93d3: hlt    
  0x00007ff0012b93d4: hlt    
  0x00007ff0012b93d5: hlt    
  0x00007ff0012b93d6: hlt    
  0x00007ff0012b93d7: hlt    
  0x00007ff0012b93d8: hlt    
  0x00007ff0012b93d9: hlt    
  0x00007ff0012b93da: hlt    
  0x00007ff0012b93db: hlt    
  0x00007ff0012b93dc: hlt    
  0x00007ff0012b93dd: hlt    
  0x00007ff0012b93de: hlt    
  0x00007ff0012b93df: hlt    
[Exception Handler]
[Stub Code]
  0x00007ff0012b93e0: callq  0x00007ff0012186e0  ;   {no_reloc}
  0x00007ff0012b93e5: mov    %rsp,-0x28(%rsp)
  0x00007ff0012b93ea: sub    $0x80,%rsp
  0x00007ff0012b93f1: mov    %rax,0x78(%rsp)
  0x00007ff0012b93f6: mov    %rcx,0x70(%rsp)
  0x00007ff0012b93fb: mov    %rdx,0x68(%rsp)
  0x00007ff0012b9400: mov    %rbx,0x60(%rsp)
  0x00007ff0012b9405: mov    %rbp,0x50(%rsp)
  0x00007ff0012b940a: mov    %rsi,0x48(%rsp)
  0x00007ff0012b940f: mov    %rdi,0x40(%rsp)
  0x00007ff0012b9414: mov    %r8,0x38(%rsp)
  0x00007ff0012b9419: mov    %r9,0x30(%rsp)
  0x00007ff0012b941e: mov    %r10,0x28(%rsp)
  0x00007ff0012b9423: mov    %r11,0x20(%rsp)
  0x00007ff0012b9428: mov    %r12,0x18(%rsp)
  0x00007ff0012b942d: mov    %r13,0x10(%rsp)
  0x00007ff0012b9432: mov    %r14,0x8(%rsp)
  0x00007ff0012b9437: mov    %r15,(%rsp)
  0x00007ff0012b943b: movabs $0x7ff017f80bfe,%rdi  ;   {external_word}
  0x00007ff0012b9445: movabs $0x7ff0012b93e5,%rsi  ;   {internal_word}
  0x00007ff0012b944f: mov    %rsp,%rdx
  0x00007ff0012b9452: and    $0xfffffffffffffff0,%rsp
  0x00007ff0012b9456: callq  0x00007ff017c8f7f0  ;   {runtime_call}
  0x00007ff0012b945b: hlt    
[Deopt Handler Code]
  0x00007ff0012b945c: movabs $0x7ff0012b945c,%r10  ;   {section_word}
  0x00007ff0012b9466: push   %r10
  0x00007ff0012b9468: jmpq   0x00007ff001046e40  ;   {runtime_call}
  0x00007ff0012b946d: hlt    
  0x00007ff0012b946e: hlt    
  0x00007ff0012b946f: hlt    
<nmethod compile_id='22' compiler='C1' level='1' entry='0x00007ff0012b9360' size='704' address='0x00007ff0012b9210' relocation_offset='296' insts_offset='336' stub_offset='464' scopes_data_offset='616' scopes_pcs_offset='632' dependencies_offset='696' method='java/util/ArrayList size ()I' bytes='5' count='145' iicount='145' stamp='0.622'/>
<writer thread='140668588488384'/>
Decoding compiled method 0x00007ff0012b9510:
Code:
[Entry Point]
[Constants]
  # {method} {0x00007feffd427df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;
  # this:     rsi:rsi   = &apos;java/lang/String&apos;
  # parm0:    rdx:rdx   = &apos;java/lang/String&apos;
  # parm1:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x00007ff0012b9680: mov    0x8(%rsi),%r10d
  0x00007ff0012b9684: shl    $0x3,%r10
  0x00007ff0012b9688: cmp    %rax,%r10
  0x00007ff0012b968b: jne    0x00007ff001045ba0  ;   {runtime_call}
  0x00007ff0012b9691: nopl   0x0(%rax,%rax,1)
  0x00007ff0012b9699: nopl   0x0(%rax)
[Verified Entry Point]
  0x00007ff0012b96a0: mov    %eax,-0x14000(%rsp)
  0x00007ff0012b96a7: push   %rbp
  0x00007ff0012b96a8: sub    $0x30,%rsp
  0x00007ff0012b96ac: movabs $0x7feffd6739f0,%rax  ;   {metadata(method data for {method} {0x00007feffd427df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012b96b6: mov    0xdc(%rax),%edi
  0x00007ff0012b96bc: add    $0x8,%edi
  0x00007ff0012b96bf: mov    %edi,0xdc(%rax)
  0x00007ff0012b96c5: movabs $0x7feffd427df8,%rax  ;   {metadata({method} {0x00007feffd427df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012b96cf: and    $0x1ff8,%edi
  0x00007ff0012b96d5: cmp    $0x0,%edi
  0x00007ff0012b96d8: je     0x00007ff0012b988d  ;*aload_0
                                                ; - java.lang.String::startsWith@0 (line 1403)

  0x00007ff0012b96de: mov    0xc(%rsi),%eax
  0x00007ff0012b96e1: shl    $0x3,%rax          ;*getfield value
                                                ; - java.lang.String::startsWith@1 (line 1403)

  0x00007ff0012b96e5: mov    0xc(%rdx),%esi     ; implicit exception: dispatches to 0x00007ff0012b98a4
  0x00007ff0012b96e8: shl    $0x3,%rsi          ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)

  0x00007ff0012b96ec: mov    0xc(%rsi),%edi     ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ; implicit exception: dispatches to 0x00007ff0012b98a9
  0x00007ff0012b96ef: cmp    $0x0,%ecx
  0x00007ff0012b96f2: movabs $0x7feffd6739f0,%rbx  ;   {metadata(method data for {method} {0x00007feffd427df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012b96fc: movabs $0x108,%rdx
  0x00007ff0012b9706: jl     0x00007ff0012b9716
  0x00007ff0012b970c: movabs $0x118,%rdx
  0x00007ff0012b9716: mov    (%rbx,%rdx,1),%r8
  0x00007ff0012b971a: lea    0x1(%r8),%r8
  0x00007ff0012b971e: mov    %r8,(%rbx,%rdx,1)
  0x00007ff0012b9722: jl     0x00007ff0012b985a  ;*iflt
                                                ; - java.lang.String::startsWith@25 (line 1409)

  0x00007ff0012b9728: mov    0xc(%rax),%ebx     ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ; implicit exception: dispatches to 0x00007ff0012b98ae
  0x00007ff0012b972b: sub    %edi,%ebx
  0x00007ff0012b972d: cmp    %ebx,%ecx
  0x00007ff0012b972f: movabs $0x7feffd6739f0,%rbx  ;   {metadata(method data for {method} {0x00007feffd427df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012b9739: movabs $0x128,%rdx
  0x00007ff0012b9743: jle    0x00007ff0012b9753
  0x00007ff0012b9749: movabs $0x138,%rdx
  0x00007ff0012b9753: mov    (%rbx,%rdx,1),%r8
  0x00007ff0012b9757: lea    0x1(%r8),%r8
  0x00007ff0012b975b: mov    %r8,(%rbx,%rdx,1)
  0x00007ff0012b975f: jg     0x00007ff0012b985a  ;*if_icmple
                                                ; - java.lang.String::startsWith@37 (line 1409)

  0x00007ff0012b9765: mov    $0x0,%ebx
  0x00007ff0012b976a: jmpq   0x00007ff0012b981a  ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x00007ff0012b976f: nop
  0x00007ff0012b9770: mov    %rcx,%rdx
  0x00007ff0012b9773: inc    %edx
  0x00007ff0012b9775: movslq %ecx,%r8
  0x00007ff0012b9778: cmp    0xc(%rax),%ecx
  0x00007ff0012b977b: jae    0x00007ff0012b98b3
  0x00007ff0012b9781: movzwl 0x10(%rax,%r8,2),%ecx  ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)

  0x00007ff0012b9787: mov    %rbx,%r8
  0x00007ff0012b978a: inc    %r8d
  0x00007ff0012b978d: movslq %ebx,%r9
  0x00007ff0012b9790: cmp    0xc(%rsi),%ebx
  0x00007ff0012b9793: jae    0x00007ff0012b98bc
  0x00007ff0012b9799: movzwl 0x10(%rsi,%r9,2),%ebx  ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)

  0x00007ff0012b979f: movabs $0x7feffd6739f0,%r9  ;   {metadata(method data for {method} {0x00007feffd427df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012b97a9: mov    0xe0(%r9),%r11d
  0x00007ff0012b97b0: add    $0x8,%r11d
  0x00007ff0012b97b4: mov    %r11d,0xe0(%r9)
  0x00007ff0012b97bb: movabs $0x7feffd427df8,%r9  ;   {metadata({method} {0x00007feffd427df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012b97c5: and    $0xfff8,%r11d
  0x00007ff0012b97cc: cmp    $0x0,%r11d
  0x00007ff0012b97d0: je     0x00007ff0012b98c5  ; OopMap{rsi=Oop rax=Oop off=342}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x00007ff0012b97d6: test   %eax,0x17261924(%rip)        # 0x00007ff01851b100
                                                ;   {poll}
  0x00007ff0012b97dc: cmp    %ebx,%ecx
  0x00007ff0012b97de: movabs $0x7feffd6739f0,%rbx  ;   {metadata(method data for {method} {0x00007feffd427df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012b97e8: movabs $0x168,%rcx
  0x00007ff0012b97f2: je     0x00007ff0012b9802
  0x00007ff0012b97f8: movabs $0x178,%rcx
  0x00007ff0012b9802: mov    (%rbx,%rcx,1),%r9
  0x00007ff0012b9806: lea    0x1(%r9),%r9
  0x00007ff0012b980a: mov    %r9,(%rbx,%rcx,1)
  0x00007ff0012b980e: jne    0x00007ff0012b986b  ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)

  0x00007ff0012b9814: mov    %r8,%rbx
  0x00007ff0012b9817: mov    %rdx,%rcx          ;*iinc
                                                ; - java.lang.String::startsWith@42 (line 1412)

  0x00007ff0012b981a: dec    %edi
  0x00007ff0012b981c: cmp    $0x0,%edi
  0x00007ff0012b981f: movabs $0x7feffd6739f0,%rdx  ;   {metadata(method data for {method} {0x00007feffd427df8} &apos;startsWith&apos; &apos;(Ljava/lang/String;I)Z&apos; in &apos;java/lang/String&apos;)}
  0x00007ff0012b9829: movabs $0x148,%r8
  0x00007ff0012b9833: jl     0x00007ff0012b9843
  0x00007ff0012b9839: movabs $0x158,%r8
  0x00007ff0012b9843: mov    (%rdx,%r8,1),%r9
  0x00007ff0012b9847: lea    0x1(%r9),%r9
  0x00007ff0012b984b: mov    %r9,(%rdx,%r8,1)
  0x00007ff0012b984f: jl     0x00007ff0012b987c
  0x00007ff0012b9855: jmpq   0x00007ff0012b9770  ;*iflt
                                                ; - java.lang.String::startsWith@47 (line 1412)

  0x00007ff0012b985a: mov    $0x0,%eax
  0x00007ff0012b985f: add    $0x30,%rsp
  0x00007ff0012b9863: pop    %rbp
  0x00007ff0012b9864: test   %eax,0x17261896(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012b986a: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@41 (line 1410)

  0x00007ff0012b986b: mov    $0x0,%eax
  0x00007ff0012b9870: add    $0x30,%rsp
  0x00007ff0012b9874: pop    %rbp
  0x00007ff0012b9875: test   %eax,0x17261885(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012b987b: retq                      ;*ireturn
                                                ; - java.lang.String::startsWith@69 (line 1414)

  0x00007ff0012b987c: mov    $0x1,%eax
  0x00007ff0012b9881: add    $0x30,%rsp
  0x00007ff0012b9885: pop    %rbp
  0x00007ff0012b9886: test   %eax,0x17261874(%rip)        # 0x00007ff01851b100
                                                ;   {poll_return}
  0x00007ff0012b988c: retq   
  0x00007ff0012b988d: mov    %rax,0x8(%rsp)
  0x00007ff0012b9892: movq   $0xffffffffffffffff,(%rsp)
  0x00007ff0012b989a: callq  0x00007ff0012175e0  ; OopMap{rsi=Oop rdx=Oop off=543}
                                                ;*synchronization entry
                                                ; - java.lang.String::startsWith@-1 (line 1403)
                                                ;   {runtime_call}
  0x00007ff0012b989f: jmpq   0x00007ff0012b96de
  0x00007ff0012b98a4: callq  0x00007ff001186e80  ; OopMap{rax=Oop off=553}
                                                ;*getfield value
                                                ; - java.lang.String::startsWith@9 (line 1405)
                                                ;   {runtime_call}
  0x00007ff0012b98a9: callq  0x00007ff001186e80  ; OopMap{rax=Oop rsi=Oop off=558}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@21 (line 1407)
                                                ;   {runtime_call}
  0x00007ff0012b98ae: callq  0x00007ff001186e80  ; OopMap{rsi=Oop rax=Oop off=563}
                                                ;*arraylength
                                                ; - java.lang.String::startsWith@33 (line 1409)
                                                ;   {runtime_call}
  0x00007ff0012b98b3: mov    %rcx,(%rsp)
  0x00007ff0012b98b7: callq  0x00007ff00106c700  ; OopMap{rsi=Oop rax=Oop off=572}
                                                ;*caload
                                                ; - java.lang.String::startsWith@56 (line 1413)
                                                ;   {runtime_call}
  0x00007ff0012b98bc: mov    %rbx,(%rsp)
  0x00007ff0012b98c0: callq  0x00007ff00106c700  ; OopMap{rsi=Oop rax=Oop off=581}
                                                ;*caload
                                                ; - java.lang.String::startsWith@64 (line 1413)
                                                ;   {runtime_call}
  0x00007ff0012b98c5: mov    %r9,0x8(%rsp)
  0x00007ff0012b98ca: movq   $0x41,(%rsp)
  0x00007ff0012b98d2: callq  0x00007ff0012175e0  ; OopMap{rsi=Oop rax=Oop off=599}
                                                ;*if_icmpeq
                                                ; - java.lang.String::startsWith@65 (line 1413)
                                                ;   {runtime_call}
  0x00007ff0012b98d7: jmpq   0x00007ff0012b97d6
  0x00007ff0012b98dc: nop
  0x00007ff0012b98dd: nop
  0x00007ff0012b98de: mov    0x310(%r15),%rax
  0x00007ff0012b98e5: movabs $0x0,%r10
  0x00007ff0012b98ef: mov    %r10,0x310(%r15)
  0x00007ff0012b98f6: movabs $0x0,%r10
  0x00007ff0012b9900: mov    %r10,0x318(%r15)
  0x00007ff0012b9907: add    $0x30,%rsp
  0x00007ff0012b990b: pop    %rbp
  0x00007ff0012b990c: jmpq   0x00007ff00106cba0  ;   {runtime_call}
  0x00007ff0012b9911: hlt    
  0x00007ff0012b9912: hlt    
  0x00007ff0012b9913: hlt    
  0x00007ff0012b9914: hlt    
  0x00007ff0012b9915: hlt    
  0x00007ff0012b9916: hlt    
  0x00007ff0012b9917: hlt    
  0x00007ff0012b9918: hlt    
  0x00007ff0012b9919: hlt    
  0x00007ff0012b991a: hlt    
  0x00007ff0012b991b: hlt    
  0x00007ff0012b991c: hlt    
  0x00007ff0012b991d: hlt    
  0x00007ff0012b991e: hlt    
  0x00007ff0012b991f: hlt    
[Exception Handler]
[Stub Code]
  0x00007ff0012b9920: callq  0x00007ff0012186e0  ;   {no_reloc}
  0x00007ff0012b9925: mov    %rsp,-0x28(%rsp)
  0x00007ff0012b992a: sub    $0x80,%rsp
  0x00007ff0012b9931: mov    %rax,0x78(%rsp)
  0x00007ff0012b9936: mov    %rcx,0x70(%rsp)
  0x00007ff0012b993b: mov    %rdx,0x68(%rsp)
  0x00007ff0012b9940: mov    %rbx,0x60(%rsp)
  0x00007ff0012b9945: mov    %rbp,0x50(%rsp)
  0x00007ff0012b994a: mov    %rsi,0x48(%rsp)
  0x00007ff0012b994f: mov    %rdi,0x40(%rsp)
  0x00007ff0012b9954: mov    %r8,0x38(%rsp)
  0x00007ff0012b9959: mov    %r9,0x30(%rsp)
  0x00007ff0012b995e: mov    %r10,0x28(%rsp)
  0x00007ff0012b9963: mov    %r11,0x20(%rsp)
  0x00007ff0012b9968: mov    %r12,0x18(%rsp)
  0x00007ff0012b996d: mov    %r13,0x10(%rsp)
  0x00007ff0012b9972: mov    %r14,0x8(%rsp)
  0x00007ff0012b9977: mov    %r15,(%rsp)
  0x00007ff0012b997b: movabs $0x7ff017f80bfe,%rdi  ;   {external_word}
  0x00007ff0012b9985: movabs $0x7ff0012b9925,%rsi  ;   {internal_word}
  0x00007ff0012b998f: mov    %rsp,%rdx
  0x00007ff0012b9992: and    $0xfffffffffffffff0,%rsp
  0x00007ff0012b9996: callq  0x00007ff017c8f7f0  ;   {runtime_call}
  0x00007ff0012b999b: hlt    
[Deopt Handler Code]
  0x00007ff0012b999c: movabs $0x7ff0012b999c,%r10  ;   {section_word}
  0x00007ff0012b99a6: push   %r10
  0x00007ff0012b99a8: jmpq   0x00007ff001046e40  ;   {runtime_call}
  0x00007ff0012b99ad: hlt    
  0x00007ff0012b99ae: hlt    
  0x00007ff0012b99af: hlt    
<nmethod compile_id='21' compiler='C1' level='3' entry='0x00007ff0012b9680' size='1824' address='0x00007ff0012b9510' relocation_offset='296' insts_offset='368' stub_offset='1040' scopes_data_offset='1192' scopes_pcs_offset='1384' dependencies_offset='1784' nul_chk_table_offset='1792' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='336' backedge_count='1671' iicount='336' stamp='0.641'/>
<tty_done stamp='0.642'/>
</tty>
<compilation_log thread='140668585330368'>
<start_compile_thread name='C1 CompilerThread11' thread='140668585330368' process='43523' stamp='0.039'/>
<task compile_id='6' method='java/lang/String charAt (I)C' bytes='29' count='1308' iicount='1308' level='3' stamp='0.114'>
<phase name='buildIR' stamp='0.114'>
<type id='728' name='char'/>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='843' holder='741' name='charAt' return='728' arguments='733' flags='1' bytes='29' iicount='1308'/>
<parse method='843'  stamp='0.114'>
<bc code='183' bci='18'/>
<type id='735' name='void'/>
<klass id='845' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='846' holder='845' name='&lt;init&gt;' return='735' arguments='733' unloaded='1'/>
<call method='846' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<parse_done stamp='0.115'/>
</parse>
<phase name='optimize_blocks' stamp='0.115'>
<phase_done name='optimize_blocks' stamp='0.115'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.115'>
<phase_done name='rangeCheckElimination' stamp='0.115'/>
</phase>
<phase name='optimize_null_checks' stamp='0.115'>
<phase_done name='optimize_null_checks' stamp='0.115'/>
</phase>
<phase_done name='buildIR' stamp='0.115'/>
</phase>
<phase name='emit_lir' stamp='0.115'>
<phase name='lirGeneration' stamp='0.115'>
<phase_done name='lirGeneration' stamp='0.115'/>
</phase>
<phase name='linearScan' stamp='0.115'>
<phase_done name='linearScan' stamp='0.115'/>
</phase>
<phase_done name='emit_lir' stamp='0.115'/>
</phase>
<phase name='codeemit' stamp='0.115'>
<phase_done name='codeemit' stamp='0.115'/>
</phase>
<phase name='codeinstall' stamp='0.115'>
<phase_done name='codeinstall' stamp='0.160'/>
</phase>
<code_cache total_blobs='235' nmethods='7' adapters='141' free_code_cache='248832320'/>
<task_done success='1' nmsize='616' count='1742' stamp='0.160'/>
</task>
<task compile_id='12' method='java/lang/AbstractStringBuilder append (Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;' bytes='50' count='260' iicount='260' level='3' stamp='0.264'>
<phase name='buildIR' stamp='0.264'>
<klass id='804' name='java/lang/AbstractStringBuilder' flags='1024'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='843' holder='804' name='append' return='804' arguments='741' flags='1' bytes='50' iicount='260'/>
<parse method='843'  stamp='0.264'>
<bc code='183' bci='5'/>
<method id='845' holder='804' name='appendNull' return='804' flags='2' bytes='56' iicount='1'/>
<call method='845' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='182' bci='10'/>
<type id='733' name='int'/>
<method id='847' holder='741' name='length' return='733' flags='1' bytes='6' compile_id='7' compiler='C1' level='3' iicount='642'/>
<call method='847' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='847'>
<parse_done stamp='0.264'/>
</parse>
<bc code='183' bci='21'/>
<type id='735' name='void'/>
<method id='849' holder='804' name='ensureCapacityInternal' return='735' arguments='733' flags='2' bytes='27' compile_id='9' compiler='C1' level='3' iicount='336'/>
<call method='849' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='849'>
<bc code='183' bci='17'/>
<method id='851' holder='804' name='newCapacity' return='733' arguments='733' flags='2' bytes='39' iicount='154'/>
<call method='851' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='832' name='[C' flags='1041'/>
<klass id='853' name='java/util/Arrays' flags='1'/>
<method id='854' holder='853' name='copyOf' return='832' arguments='832 733' flags='9' bytes='19' iicount='163'/>
<call method='854' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='854'>
<bc code='184' bci='11'/>
<klass id='856' name='java/lang/Math' flags='17'/>
<method id='857' holder='856' name='min' return='733' arguments='733 733' flags='9' bytes='11' compile_id='4' compiler='C1' level='3' iicount='697'/>
<call method='857' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='857'>
<parse_done stamp='0.264'/>
</parse>
<bc code='184' bci='14'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='859' holder='746' name='arraycopy' return='735' arguments='740 733 740 733 733' flags='265' bytes='0' compile_id='5' compile_kind='c2n' level='0' iicount='512'/>
<call method='859' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.264'/>
</parse>
<parse_done stamp='0.264'/>
</parse>
<bc code='182' bci='35'/>
<method id='861' holder='741' name='getChars' return='735' arguments='733 733 832 733' flags='1' bytes='62' iicount='260'/>
<call method='861' instr='invokevirtual'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.264'/>
</parse>
<phase name='optimize_blocks' stamp='0.264'>
<phase_done name='optimize_blocks' stamp='0.264'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.264'>
<phase_done name='rangeCheckElimination' stamp='0.264'/>
</phase>
<phase name='optimize_null_checks' stamp='0.264'>
<phase_done name='optimize_null_checks' stamp='0.264'/>
</phase>
<phase_done name='buildIR' stamp='0.264'/>
</phase>
<phase name='emit_lir' stamp='0.264'>
<phase name='lirGeneration' stamp='0.264'>
<phase_done name='lirGeneration' stamp='0.264'/>
</phase>
<phase name='linearScan' stamp='0.264'>
<phase_done name='linearScan' stamp='0.264'/>
</phase>
<phase_done name='emit_lir' stamp='0.264'/>
</phase>
<phase name='codeemit' stamp='0.264'>
<phase_done name='codeemit' stamp='0.265'/>
</phase>
<phase name='codeinstall' stamp='0.265'>
<phase_done name='codeinstall' stamp='0.368'/>
</phase>
<code_cache total_blobs='247' nmethods='13' adapters='147' free_code_cache='248817600'/>
<task_done success='1' nmsize='1880' count='260' inlined_bytes='63' stamp='0.368'/>
</task>
<task compile_id='16' method='java/lang/System getSecurityManager ()Ljava/lang/SecurityManager;' bytes='4' count='256' iicount='256' level='3' stamp='0.368'>
<phase name='buildIR' stamp='0.369'>
<klass id='752' name='java/lang/SecurityManager' flags='1'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='843' holder='746' name='getSecurityManager' return='752' flags='9' bytes='4' iicount='256'/>
<parse method='843'  stamp='0.369'>
<parse_done stamp='0.369'/>
</parse>
<phase name='optimize_blocks' stamp='0.369'>
<phase_done name='optimize_blocks' stamp='0.369'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.369'>
<phase_done name='rangeCheckElimination' stamp='0.369'/>
</phase>
<phase name='optimize_null_checks' stamp='0.369'>
<phase_done name='optimize_null_checks' stamp='0.369'/>
</phase>
<phase_done name='buildIR' stamp='0.369'/>
</phase>
<phase name='emit_lir' stamp='0.369'>
<phase name='lirGeneration' stamp='0.369'>
<phase_done name='lirGeneration' stamp='0.369'/>
</phase>
<phase name='linearScan' stamp='0.369'>
<phase_done name='linearScan' stamp='0.369'/>
</phase>
<phase_done name='emit_lir' stamp='0.369'/>
</phase>
<phase name='codeemit' stamp='0.369'>
<phase_done name='codeemit' stamp='0.369'/>
</phase>
<phase name='codeinstall' stamp='0.369'>
<phase_done name='codeinstall' stamp='0.385'/>
</phase>
<code_cache total_blobs='249' nmethods='15' adapters='147' free_code_cache='248816000'/>
<task_done success='1' nmsize='336' count='276' stamp='0.385'/>
</task>
<task compile_id='19' method='java/lang/CharacterData of (I)Ljava/lang/CharacterData;' bytes='120' count='264' iicount='264' level='3' stamp='0.536'>
<phase name='buildIR' stamp='0.536'>
<klass id='843' name='java/lang/CharacterData' flags='1024'/>
<type id='733' name='int'/>
<method id='844' holder='843' name='of' return='843' arguments='733' flags='24' bytes='120' iicount='271'/>
<parse method='844'  stamp='0.536'>
<parse_done stamp='0.536'/>
</parse>
<phase name='optimize_blocks' stamp='0.536'>
<phase_done name='optimize_blocks' stamp='0.536'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.536'>
<phase_done name='rangeCheckElimination' stamp='0.536'/>
</phase>
<phase name='optimize_null_checks' stamp='0.536'>
<phase_done name='optimize_null_checks' stamp='0.536'/>
</phase>
<phase_done name='buildIR' stamp='0.536'/>
</phase>
<phase name='emit_lir' stamp='0.536'>
<phase name='lirGeneration' stamp='0.536'>
<phase_done name='lirGeneration' stamp='0.536'/>
</phase>
<phase name='linearScan' stamp='0.536'>
<phase_done name='linearScan' stamp='0.536'/>
</phase>
<phase_done name='emit_lir' stamp='0.536'/>
</phase>
<phase name='codeemit' stamp='0.536'>
<phase_done name='codeemit' stamp='0.536'/>
</phase>
<phase name='codeinstall' stamp='0.536'>
<phase_done name='codeinstall' stamp='0.603'/>
</phase>
<code_cache total_blobs='254' nmethods='20' adapters='147' free_code_cache='248803840'/>
<task_done success='1' nmsize='1392' count='282' stamp='0.603'/>
</task>
</compilation_log>
<compilation_log thread='140668586383040'>
<start_compile_thread name='C1 CompilerThread10' thread='140668586383040' process='43523' stamp='0.038'/>
<task compile_id='4' method='java/lang/Math min (II)I' bytes='11' count='514' iicount='514' level='3' stamp='0.078'>
<phase name='buildIR' stamp='0.078'>
<type id='733' name='int'/>
<klass id='843' name='java/lang/Math' flags='17'/>
<method id='844' holder='843' name='min' return='733' arguments='733 733' flags='9' bytes='11' iicount='514'/>
<parse method='844'  stamp='0.078'>
<parse_done stamp='0.078'/>
</parse>
<phase name='optimize_blocks' stamp='0.078'>
<phase_done name='optimize_blocks' stamp='0.078'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.078'>
<phase_done name='rangeCheckElimination' stamp='0.078'/>
</phase>
<phase name='optimize_null_checks' stamp='0.078'>
<phase_done name='optimize_null_checks' stamp='0.078'/>
</phase>
<phase_done name='buildIR' stamp='0.078'/>
</phase>
<phase name='emit_lir' stamp='0.078'>
<phase name='lirGeneration' stamp='0.078'>
<phase_done name='lirGeneration' stamp='0.078'/>
</phase>
<phase name='linearScan' stamp='0.078'>
<phase_done name='linearScan' stamp='0.078'/>
</phase>
<phase_done name='emit_lir' stamp='0.078'/>
</phase>
<phase name='codeemit' stamp='0.078'>
<phase_done name='codeemit' stamp='0.078'/>
</phase>
<phase name='codeinstall' stamp='0.078'>
<phase_done name='codeinstall' stamp='0.114'/>
</phase>
<code_cache total_blobs='233' nmethods='5' adapters='141' free_code_cache='248834688'/>
<task_done success='1' nmsize='400' count='516' stamp='0.114'/>
</task>
<task compile_id='7' method='java/lang/String length ()I' bytes='6' count='396' iicount='396' level='3' stamp='0.115'>
<phase name='buildIR' stamp='0.115'>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='843' holder='741' name='length' return='733' flags='1' bytes='6' iicount='405'/>
<parse method='843'  stamp='0.115'>
<parse_done stamp='0.115'/>
</parse>
<phase name='optimize_blocks' stamp='0.115'>
<phase_done name='optimize_blocks' stamp='0.115'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.115'>
<phase_done name='rangeCheckElimination' stamp='0.115'/>
</phase>
<phase name='optimize_null_checks' stamp='0.115'>
<phase_done name='optimize_null_checks' stamp='0.115'/>
</phase>
<phase_done name='buildIR' stamp='0.115'/>
</phase>
<phase name='emit_lir' stamp='0.115'>
<phase name='lirGeneration' stamp='0.115'>
<phase_done name='lirGeneration' stamp='0.115'/>
</phase>
<phase name='linearScan' stamp='0.115'>
<phase_done name='linearScan' stamp='0.115'/>
</phase>
<phase_done name='emit_lir' stamp='0.115'/>
</phase>
<phase name='codeemit' stamp='0.115'>
<phase_done name='codeemit' stamp='0.115'/>
</phase>
<phase name='codeinstall' stamp='0.115'>
<phase_done name='codeinstall' stamp='0.144'/>
</phase>
<code_cache total_blobs='234' nmethods='6' adapters='141' free_code_cache='248833728'/>
<task_done success='1' nmsize='368' count='475' stamp='0.144'/>
</task>
<task compile_id='9' method='java/lang/AbstractStringBuilder ensureCapacityInternal (I)V' bytes='27' count='270' iicount='270' level='3' stamp='0.144'>
<phase name='buildIR' stamp='0.145'>
<type id='735' name='void'/>
<type id='733' name='int'/>
<klass id='804' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='843' holder='804' name='ensureCapacityInternal' return='735' arguments='733' flags='2' bytes='27' iicount='270'/>
<parse method='843'  stamp='0.145'>
<bc code='183' bci='17'/>
<method id='845' holder='804' name='newCapacity' return='733' arguments='733' flags='2' bytes='39' iicount='140'/>
<call method='845' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<bc code='184' bci='20'/>
<klass id='832' name='[C' flags='1041'/>
<klass id='847' name='java/util/Arrays' flags='1'/>
<method id='848' holder='847' name='copyOf' return='832' arguments='832 733' flags='9' bytes='19' iicount='142'/>
<call method='848' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='848'>
<bc code='184' bci='11'/>
<klass id='850' name='java/lang/Math' flags='17'/>
<method id='851' holder='850' name='min' return='733' arguments='733 733' flags='9' bytes='11' compile_id='4' compiler='C1' level='3' iicount='613'/>
<call method='851' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='851'>
<parse_done stamp='0.205'/>
</parse>
<bc code='184' bci='14'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='853' holder='746' name='arraycopy' return='735' arguments='740 733 740 733 733' flags='265' bytes='0' compile_id='5' compile_kind='c2n' level='0' iicount='512'/>
<call method='853' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.205'/>
</parse>
<parse_done stamp='0.205'/>
</parse>
<phase name='optimize_blocks' stamp='0.205'>
<phase_done name='optimize_blocks' stamp='0.205'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.205'>
<phase_done name='rangeCheckElimination' stamp='0.205'/>
</phase>
<phase name='optimize_null_checks' stamp='0.205'>
<phase_done name='optimize_null_checks' stamp='0.205'/>
</phase>
<phase_done name='buildIR' stamp='0.205'/>
</phase>
<phase name='emit_lir' stamp='0.205'>
<phase name='lirGeneration' stamp='0.205'>
<phase_done name='lirGeneration' stamp='0.205'/>
</phase>
<phase name='linearScan' stamp='0.205'>
<phase_done name='linearScan' stamp='0.205'/>
</phase>
<phase_done name='emit_lir' stamp='0.205'/>
</phase>
<phase name='codeemit' stamp='0.205'>
<phase_done name='codeemit' stamp='0.205'/>
</phase>
<phase name='codeinstall' stamp='0.205'>
<phase_done name='codeinstall' stamp='0.250'/>
</phase>
<code_cache total_blobs='238' nmethods='10' adapters='141' free_code_cache='248827264'/>
<task_done success='1' nmsize='1144' count='290' inlined_bytes='30' stamp='0.250'/>
</task>
<task compile_id='14' method='java/util/Arrays copyOfRange ([CII)[C' bytes='63' count='260' iicount='260' level='3' stamp='0.368'>
<phase name='buildIR' stamp='0.369'>
<klass id='832' name='[C' flags='1041'/>
<type id='733' name='int'/>
<klass id='843' name='java/util/Arrays' flags='1'/>
<method id='844' holder='843' name='copyOfRange' return='832' arguments='832 733 733' flags='9' bytes='63' iicount='262'/>
<parse method='844'  stamp='0.369'>
<bc code='183' bci='16'/>
<type id='735' name='void'/>
<klass id='806' name='java/lang/StringBuilder' flags='17'/>
<method id='847' holder='806' name='&lt;init&gt;' return='735' flags='1' bytes='7' iicount='121'/>
<call method='847' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='847'>
<bc code='183' bci='3'/>
<klass id='804' name='java/lang/AbstractStringBuilder' flags='1024'/>
<method id='849' holder='804' name='&lt;init&gt;' return='735' arguments='733' flags='0' bytes='12' iicount='135'/>
<call method='849' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='849'>
<bc code='183' bci='1'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<method id='851' holder='740' name='&lt;init&gt;' return='735' flags='1' bytes='1' compile_id='10' compiler='C1' level='1' iicount='1571'/>
<call method='851' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='851'>
<parse_done stamp='0.369'/>
</parse>
<parse_done stamp='0.369'/>
</parse>
<parse_done stamp='0.369'/>
</parse>
<bc code='182' bci='20'/>
<method id='853' holder='806' name='append' return='806' arguments='733' flags='1' bytes='8' iicount='1'/>
<call method='853' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='853'>
<bc code='183' bci='2'/>
<method id='855' holder='804' name='append' return='804' arguments='733' flags='1' bytes='62' iicount='1'/>
<call method='855' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.369'/>
</parse>
<bc code='182' bci='25'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='858' holder='806' name='append' return='806' arguments='741' flags='1' bytes='8' iicount='245'/>
<call method='858' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='858'>
<bc code='183' bci='2'/>
<method id='860' holder='804' name='append' return='804' arguments='741' flags='1' bytes='50' compile_id='12' compiler='C1' level='3' iicount='306'/>
<call method='860' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.385'/>
</parse>
<bc code='182' bci='29'/>
<call method='853' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='853'>
<bc code='183' bci='2'/>
<call method='855' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.385'/>
</parse>
<bc code='182' bci='32'/>
<method id='862' holder='806' name='toString' return='741' flags='1' bytes='17' iicount='140'/>
<call method='862' instr='invokevirtual'/>
<inline_success reason='receiver is statically known'/>
<parse method='862'>
<bc code='183' bci='13'/>
<method id='864' holder='741' name='&lt;init&gt;' return='735' arguments='832 733 733' flags='1' bytes='82' iicount='417'/>
<call method='864' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.385'/>
</parse>
<bc code='183' bci='35'/>
<klass id='846' name='java/lang/IllegalArgumentException' flags='1'/>
<method id='866' holder='846' name='&lt;init&gt;' return='735' arguments='741' flags='1' bytes='6' iicount='1'/>
<call method='866' instr='invokespecial'/>
<inline_fail reason='don&apos;t inline Throwable constructors'/>
<bc code='184' bci='54'/>
<klass id='868' name='java/lang/Math' flags='17'/>
<method id='869' holder='868' name='min' return='733' arguments='733 733' flags='9' bytes='11' compile_id='4' compiler='C1' level='3' iicount='1040'/>
<call method='869' instr='invokestatic'/>
<inline_success reason='receiver is statically known'/>
<parse method='869'>
<parse_done stamp='0.385'/>
</parse>
<bc code='184' bci='57'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='871' holder='746' name='arraycopy' return='735' arguments='740 733 740 733 733' flags='265' bytes='0' compile_id='5' compile_kind='c2n' level='0' iicount='512'/>
<call method='871' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.442'/>
</parse>
<phase name='optimize_blocks' stamp='0.442'>
<phase_done name='optimize_blocks' stamp='0.442'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.443'>
<phase_done name='rangeCheckElimination' stamp='0.443'/>
</phase>
<phase name='optimize_null_checks' stamp='0.443'>
<phase_done name='optimize_null_checks' stamp='0.443'/>
</phase>
<phase_done name='buildIR' stamp='0.443'/>
</phase>
<phase name='emit_lir' stamp='0.443'>
<phase name='lirGeneration' stamp='0.443'>
<phase_done name='lirGeneration' stamp='0.443'/>
</phase>
<phase name='linearScan' stamp='0.443'>
<phase_done name='linearScan' stamp='0.443'/>
</phase>
<phase_done name='emit_lir' stamp='0.443'/>
</phase>
<phase name='codeemit' stamp='0.443'>
<phase_done name='codeemit' stamp='0.443'/>
</phase>
<phase name='codeinstall' stamp='0.443'>
<phase_done name='codeinstall' stamp='0.535'/>
</phase>
<code_cache total_blobs='252' nmethods='18' adapters='147' free_code_cache='248807552'/>
<task_done success='1' nmsize='2872' count='440' inlined_bytes='72' stamp='0.535'/>
</task>
<task compile_id='22' method='java/util/ArrayList size ()I' bytes='5' count='145' iicount='145' level='1' stamp='0.605'>
<phase name='buildIR' stamp='0.606'>
<type id='733' name='int'/>
<klass id='843' name='java/util/ArrayList' flags='1'/>
<method id='844' holder='843' name='size' return='733' flags='1' bytes='5' iicount='145'/>
<parse method='844'  stamp='0.606'>
<parse_done stamp='0.606'/>
</parse>
<phase name='optimize_blocks' stamp='0.606'>
<phase_done name='optimize_blocks' stamp='0.606'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.606'>
<phase_done name='rangeCheckElimination' stamp='0.606'/>
</phase>
<phase name='optimize_null_checks' stamp='0.606'>
<phase_done name='optimize_null_checks' stamp='0.606'/>
</phase>
<phase_done name='buildIR' stamp='0.606'/>
</phase>
<phase name='emit_lir' stamp='0.606'>
<phase name='lirGeneration' stamp='0.606'>
<phase_done name='lirGeneration' stamp='0.606'/>
</phase>
<phase name='linearScan' stamp='0.606'>
<phase_done name='linearScan' stamp='0.606'/>
</phase>
<phase_done name='emit_lir' stamp='0.606'/>
</phase>
<phase name='codeemit' stamp='0.606'>
<phase_done name='codeemit' stamp='0.606'/>
</phase>
<phase name='codeinstall' stamp='0.606'>
<phase_done name='codeinstall' stamp='0.622'/>
</phase>
<code_cache total_blobs='257' nmethods='21' adapters='149' free_code_cache='248802048'/>
<task_done success='1' nmsize='272' count='145' stamp='0.622'/>
</task>
</compilation_log>
<compilation_log thread='140668587435712'>
<start_compile_thread name='C1 CompilerThread9' thread='140668587435712' process='43523' stamp='0.038'/>
<task compile_id='2' method='java/lang/String equals (Ljava/lang/Object;)Z' bytes='81' count='340' backedge_count='1100' iicount='340' level='3' stamp='0.043'>
<phase name='buildIR' stamp='0.043'>
<type id='727' name='boolean'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='843' holder='741' name='equals' return='727' arguments='740' flags='1' bytes='81' iicount='352'/>
<parse method='843'  stamp='0.043'>
<parse_done stamp='0.043'/>
</parse>
<phase name='optimize_blocks' stamp='0.043'>
<phase_done name='optimize_blocks' stamp='0.043'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.043'>
<phase_done name='rangeCheckElimination' stamp='0.043'/>
</phase>
<phase name='optimize_null_checks' stamp='0.043'>
<phase_done name='optimize_null_checks' stamp='0.043'/>
</phase>
<phase_done name='buildIR' stamp='0.043'/>
</phase>
<phase name='emit_lir' stamp='0.043'>
<phase name='lirGeneration' stamp='0.043'>
<phase_done name='lirGeneration' stamp='0.043'/>
</phase>
<phase name='linearScan' stamp='0.043'>
<phase_done name='linearScan' stamp='0.043'/>
</phase>
<phase_done name='emit_lir' stamp='0.043'/>
</phase>
<phase name='codeemit' stamp='0.043'>
<phase_done name='codeemit' stamp='0.043'/>
</phase>
<phase name='codeinstall' stamp='0.043'>
<phase_done name='codeinstall' stamp='0.053'/>
</phase>
<code_cache total_blobs='224' nmethods='2' adapters='139' free_code_cache='248829056'/>
<task_done success='1' nmsize='1360' count='353' backedge_count='1192' stamp='0.053'/>
</task>
<task compile_id='3' method='java/lang/String hashCode ()I' bytes='55' count='395' backedge_count='5128' iicount='395' level='3' stamp='0.053'>
<phase name='buildIR' stamp='0.053'>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='843' holder='741' name='hashCode' return='733' flags='1' bytes='55' iicount='395'/>
<parse method='843'  stamp='0.053'>
<parse_done stamp='0.053'/>
</parse>
<phase name='optimize_blocks' stamp='0.053'>
<phase_done name='optimize_blocks' stamp='0.053'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.053'>
<phase_done name='rangeCheckElimination' stamp='0.053'/>
</phase>
<phase name='optimize_null_checks' stamp='0.053'>
<phase_done name='optimize_null_checks' stamp='0.053'/>
</phase>
<phase_done name='buildIR' stamp='0.053'/>
</phase>
<phase name='emit_lir' stamp='0.053'>
<phase name='lirGeneration' stamp='0.053'>
<phase_done name='lirGeneration' stamp='0.053'/>
</phase>
<phase name='linearScan' stamp='0.053'>
<phase_done name='linearScan' stamp='0.053'/>
</phase>
<phase_done name='emit_lir' stamp='0.053'/>
</phase>
<phase name='codeemit' stamp='0.053'>
<phase_done name='codeemit' stamp='0.053'/>
</phase>
<phase name='codeinstall' stamp='0.053'>
<phase_done name='codeinstall' stamp='0.076'/>
</phase>
<code_cache total_blobs='229' nmethods='3' adapters='139' free_code_cache='248826688'/>
<task_done success='1' nmsize='656' count='398' backedge_count='5201' stamp='0.076'/>
</task>
<task compile_id='11' method='java/lang/ref/Reference get ()Ljava/lang/Object;' bytes='5' count='258' iicount='258' level='1' stamp='0.252'>
<phase name='buildIR' stamp='0.252'>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='766' name='java/lang/ref/Reference' flags='1025'/>
<method id='843' holder='766' name='get' return='740' flags='1' bytes='5' iicount='258'/>
<parse method='843'  stamp='0.252'>
<parse_done stamp='0.252'/>
</parse>
<phase name='optimize_blocks' stamp='0.252'>
<phase_done name='optimize_blocks' stamp='0.252'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.252'>
<phase_done name='rangeCheckElimination' stamp='0.252'/>
</phase>
<phase name='optimize_null_checks' stamp='0.252'>
<phase_done name='optimize_null_checks' stamp='0.252'/>
</phase>
<phase_done name='buildIR' stamp='0.252'/>
</phase>
<phase name='emit_lir' stamp='0.252'>
<phase name='lirGeneration' stamp='0.252'>
<phase_done name='lirGeneration' stamp='0.252'/>
</phase>
<phase name='linearScan' stamp='0.252'>
<phase_done name='linearScan' stamp='0.252'/>
</phase>
<phase_done name='emit_lir' stamp='0.252'/>
</phase>
<phase name='codeemit' stamp='0.252'>
<phase_done name='codeemit' stamp='0.252'/>
</phase>
<phase name='codeinstall' stamp='0.252'>
<phase_done name='codeinstall' stamp='0.261'/>
</phase>
<code_cache total_blobs='241' nmethods='11' adapters='143' free_code_cache='248825536'/>
<task_done success='1' nmsize='272' count='258' stamp='0.261'/>
</task>
<task compile_id='15' method='java/lang/ThreadLocal access$400 (Ljava/lang/ThreadLocal;)I' bytes='5' count='131' iicount='131' level='1' stamp='0.368'>
<phase name='buildIR' stamp='0.369'>
<type id='733' name='int'/>
<klass id='843' name='java/lang/ThreadLocal' flags='1'/>
<method id='844' holder='843' name='access$400' return='733' arguments='843' flags='4104' bytes='5' iicount='133'/>
<parse method='844'  stamp='0.369'>
<parse_done stamp='0.369'/>
</parse>
<phase name='optimize_blocks' stamp='0.369'>
<phase_done name='optimize_blocks' stamp='0.369'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.369'>
<phase_done name='rangeCheckElimination' stamp='0.369'/>
</phase>
<phase name='optimize_null_checks' stamp='0.369'>
<phase_done name='optimize_null_checks' stamp='0.369'/>
</phase>
<phase_done name='buildIR' stamp='0.369'/>
</phase>
<phase name='emit_lir' stamp='0.369'>
<phase name='lirGeneration' stamp='0.369'>
<phase_done name='lirGeneration' stamp='0.369'/>
</phase>
<phase name='linearScan' stamp='0.369'>
<phase_done name='linearScan' stamp='0.369'/>
</phase>
<phase_done name='emit_lir' stamp='0.369'/>
</phase>
<phase name='codeemit' stamp='0.369'>
<phase_done name='codeemit' stamp='0.369'/>
</phase>
<phase name='codeinstall' stamp='0.369'>
<phase_done name='codeinstall' stamp='0.376'/>
</phase>
<code_cache total_blobs='248' nmethods='14' adapters='147' free_code_cache='248816832'/>
<task_done success='1' nmsize='240' count='135' stamp='0.376'/>
</task>
<task compile_id='18' method='java/io/File getPath ()Ljava/lang/String;' bytes='5' count='129' iicount='129' level='1' stamp='0.376'>
<phase name='buildIR' stamp='0.385'>
<klass id='741' name='java/lang/String' flags='17'/>
<klass id='810' name='java/io/File' flags='1'/>
<method id='843' holder='810' name='getPath' return='741' flags='1' bytes='5' iicount='173'/>
<parse method='843'  stamp='0.385'>
<parse_done stamp='0.385'/>
</parse>
<phase name='optimize_blocks' stamp='0.385'>
<phase_done name='optimize_blocks' stamp='0.385'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.385'>
<phase_done name='rangeCheckElimination' stamp='0.385'/>
</phase>
<phase name='optimize_null_checks' stamp='0.385'>
<phase_done name='optimize_null_checks' stamp='0.385'/>
</phase>
<phase_done name='buildIR' stamp='0.385'/>
</phase>
<phase name='emit_lir' stamp='0.385'>
<phase name='lirGeneration' stamp='0.385'>
<phase_done name='lirGeneration' stamp='0.385'/>
</phase>
<phase name='linearScan' stamp='0.385'>
<phase_done name='linearScan' stamp='0.385'/>
</phase>
<phase_done name='emit_lir' stamp='0.385'/>
</phase>
<phase name='codeemit' stamp='0.385'>
<phase_done name='codeemit' stamp='0.385'/>
</phase>
<phase name='codeinstall' stamp='0.385'>
<phase_done name='codeinstall' stamp='0.396'/>
</phase>
<code_cache total_blobs='250' nmethods='16' adapters='147' free_code_cache='248815232'/>
<task_done success='1' nmsize='272' count='173' stamp='0.397'/>
</task>
<task compile_id='20' method='java/lang/CharacterDataLatin1 getProperties (I)I' bytes='11' count='282' iicount='282' level='3' stamp='0.536'>
<phase name='buildIR' stamp='0.536'>
<type id='733' name='int'/>
<klass id='843' name='java/lang/CharacterDataLatin1' flags='0'/>
<method id='844' holder='843' name='getProperties' return='733' arguments='733' flags='0' bytes='11' iicount='282'/>
<parse method='844'  stamp='0.536'>
<parse_done stamp='0.536'/>
</parse>
<phase name='optimize_blocks' stamp='0.536'>
<phase_done name='optimize_blocks' stamp='0.536'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.536'>
<phase_done name='rangeCheckElimination' stamp='0.536'/>
</phase>
<phase name='optimize_null_checks' stamp='0.536'>
<phase_done name='optimize_null_checks' stamp='0.536'/>
</phase>
<phase_done name='buildIR' stamp='0.536'/>
</phase>
<phase name='emit_lir' stamp='0.536'>
<phase name='lirGeneration' stamp='0.536'>
<phase_done name='lirGeneration' stamp='0.536'/>
</phase>
<phase name='linearScan' stamp='0.536'>
<phase_done name='linearScan' stamp='0.536'/>
</phase>
<phase_done name='emit_lir' stamp='0.536'/>
</phase>
<phase name='codeemit' stamp='0.536'>
<phase_done name='codeemit' stamp='0.536'/>
</phase>
<phase name='codeinstall' stamp='0.536'>
<phase_done name='codeinstall' stamp='0.551'/>
</phase>
<code_cache total_blobs='253' nmethods='19' adapters='147' free_code_cache='248806528'/>
<task_done success='1' nmsize='400' count='282' stamp='0.551'/>
</task>
</compilation_log>
<compilation_log thread='140668588488384'>
<start_compile_thread name='C1 CompilerThread8' thread='140668588488384' process='43523' stamp='0.038'/>
<task compile_id='1' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='1409' iicount='1409' level='3' stamp='0.040'>
<phase name='buildIR' stamp='0.040'>
<type id='735' name='void'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<method id='843' holder='740' name='&lt;init&gt;' return='735' flags='1' bytes='1' iicount='1409'/>
<parse method='843'  stamp='0.040'>
<parse_done stamp='0.040'/>
</parse>
<phase name='optimize_blocks' stamp='0.040'>
<phase_done name='optimize_blocks' stamp='0.040'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.040'>
<phase_done name='rangeCheckElimination' stamp='0.040'/>
</phase>
<phase name='optimize_null_checks' stamp='0.040'>
<phase_done name='optimize_null_checks' stamp='0.040'/>
</phase>
<phase_done name='buildIR' stamp='0.040'/>
</phase>
<phase name='emit_lir' stamp='0.040'>
<phase name='lirGeneration' stamp='0.040'>
<phase_done name='lirGeneration' stamp='0.040'/>
</phase>
<phase name='linearScan' stamp='0.040'>
<phase_done name='linearScan' stamp='0.040'/>
</phase>
<phase_done name='emit_lir' stamp='0.040'/>
</phase>
<phase name='codeemit' stamp='0.040'>
<phase_done name='codeemit' stamp='0.040'/>
</phase>
<phase name='codeinstall' stamp='0.040'>
<phase_done name='codeinstall' stamp='0.042'/>
</phase>
<code_cache total_blobs='213' nmethods='1' adapters='135' free_code_cache='248878080'/>
<task_done success='1' nmsize='336' count='1414' stamp='0.042'/>
</task>
<task compile_id='8' method='java/lang/String indexOf (II)I' bytes='70' count='134' backedge_count='2990' iicount='134' level='3' stamp='0.115'>
<phase name='buildIR' stamp='0.115'>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='843' holder='741' name='indexOf' return='733' arguments='733 733' flags='1' bytes='70' iicount='135'/>
<parse method='843'  stamp='0.115'>
<bc code='183' bci='66'/>
<method id='845' holder='741' name='indexOfSupplementary' return='733' arguments='733 733' flags='2' bytes='71' iicount='1'/>
<call method='845' instr='invokespecial'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.145'/>
</parse>
<phase name='optimize_blocks' stamp='0.145'>
<phase_done name='optimize_blocks' stamp='0.145'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.145'>
<phase_done name='rangeCheckElimination' stamp='0.145'/>
</phase>
<phase name='optimize_null_checks' stamp='0.145'>
<phase_done name='optimize_null_checks' stamp='0.145'/>
</phase>
<phase_done name='buildIR' stamp='0.145'/>
</phase>
<phase name='emit_lir' stamp='0.145'>
<phase name='lirGeneration' stamp='0.145'>
<phase_done name='lirGeneration' stamp='0.145'/>
</phase>
<phase name='linearScan' stamp='0.145'>
<phase_done name='linearScan' stamp='0.145'/>
</phase>
<phase_done name='emit_lir' stamp='0.145'/>
</phase>
<phase name='codeemit' stamp='0.145'>
<phase_done name='codeemit' stamp='0.145'/>
</phase>
<phase name='codeinstall' stamp='0.145'>
<phase_done name='codeinstall' stamp='0.204'/>
</phase>
<code_cache total_blobs='236' nmethods='8' adapters='141' free_code_cache='248830272'/>
<task_done success='1' nmsize='904' count='154' backedge_count='3810' stamp='0.204'/>
</task>
<task compile_id='10' method='java/lang/Object &lt;init&gt; ()V' bytes='1' count='1568' iicount='1568' level='1' stamp='0.204'>
<phase name='buildIR' stamp='0.204'>
<type id='735' name='void'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<method id='843' holder='740' name='&lt;init&gt;' return='735' flags='1' bytes='1' compile_id='1' compiler='C1' level='3' iicount='1568'/>
<parse method='843'  stamp='0.205'>
<parse_done stamp='0.205'/>
</parse>
<phase name='optimize_blocks' stamp='0.205'>
<phase_done name='optimize_blocks' stamp='0.205'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.205'>
<phase_done name='rangeCheckElimination' stamp='0.205'/>
</phase>
<phase name='optimize_null_checks' stamp='0.205'>
<phase_done name='optimize_null_checks' stamp='0.205'/>
</phase>
<phase_done name='buildIR' stamp='0.205'/>
</phase>
<phase name='emit_lir' stamp='0.205'>
<phase name='lirGeneration' stamp='0.205'>
<phase_done name='lirGeneration' stamp='0.205'/>
</phase>
<phase name='linearScan' stamp='0.205'>
<phase_done name='linearScan' stamp='0.205'/>
</phase>
<phase_done name='emit_lir' stamp='0.205'/>
</phase>
<phase name='codeemit' stamp='0.205'>
<phase_done name='codeemit' stamp='0.205'/>
</phase>
<phase name='codeinstall' stamp='0.205'>
<phase_done name='codeinstall' stamp='0.214'/>
</phase>
<code_cache total_blobs='237' nmethods='9' adapters='141' free_code_cache='248829440'/>
<task_done success='1' nmsize='272' count='1571' stamp='0.214'/>
</task>
<task compile_id='13' method='java/lang/String getChars (II[CI)V' bytes='62' count='260' iicount='260' level='3' stamp='0.264'>
<phase name='buildIR' stamp='0.264'>
<type id='735' name='void'/>
<type id='733' name='int'/>
<klass id='832' name='[C' flags='1041'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='843' holder='741' name='getChars' return='735' arguments='733 733 832 733' flags='1' bytes='62' iicount='260'/>
<parse method='843'  stamp='0.264'>
<bc code='183' bci='9'/>
<klass id='845' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='846' holder='845' name='&lt;init&gt;' return='735' arguments='733' unloaded='1'/>
<call method='846' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='27'/>
<call method='846' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='43'/>
<call method='846' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='58'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<klass id='746' name='java/lang/System' flags='17'/>
<method id='847' holder='746' name='arraycopy' return='735' arguments='740 733 740 733 733' flags='265' bytes='0' compile_id='5' compile_kind='c2n' level='0' iicount='512'/>
<call method='847' instr='invokestatic'/>
<inline_success reason='intrinsic'/>
<parse_done stamp='0.264'/>
</parse>
<phase name='optimize_blocks' stamp='0.264'>
<phase_done name='optimize_blocks' stamp='0.264'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.264'>
<phase_done name='rangeCheckElimination' stamp='0.264'/>
</phase>
<phase name='optimize_null_checks' stamp='0.264'>
<phase_done name='optimize_null_checks' stamp='0.264'/>
</phase>
<phase_done name='buildIR' stamp='0.264'/>
</phase>
<phase name='emit_lir' stamp='0.264'>
<phase name='lirGeneration' stamp='0.264'>
<phase_done name='lirGeneration' stamp='0.264'/>
</phase>
<phase name='linearScan' stamp='0.264'>
<phase_done name='linearScan' stamp='0.264'/>
</phase>
<phase_done name='emit_lir' stamp='0.264'/>
</phase>
<phase name='codeemit' stamp='0.264'>
<phase_done name='codeemit' stamp='0.264'/>
</phase>
<phase name='codeinstall' stamp='0.264'>
<phase_done name='codeinstall' stamp='0.296'/>
</phase>
<code_cache total_blobs='246' nmethods='12' adapters='147' free_code_cache='248821120'/>
<task_done success='1' nmsize='1080' count='260' stamp='0.296'/>
</task>
<task compile_id='17' method='java/lang/String &lt;init&gt; ([CII)V' bytes='82' count='290' iicount='290' level='3' stamp='0.369'>
<phase name='buildIR' stamp='0.369'>
<type id='735' name='void'/>
<klass id='832' name='[C' flags='1041'/>
<type id='733' name='int'/>
<klass id='741' name='java/lang/String' flags='17'/>
<method id='843' holder='741' name='&lt;init&gt;' return='735' arguments='832 733 733' flags='1' bytes='82' iicount='304'/>
<parse method='843'  stamp='0.369'>
<bc code='183' bci='1'/>
<klass id='740' name='java/lang/Object' flags='1'/>
<method id='845' holder='740' name='&lt;init&gt;' return='735' flags='1' bytes='1' compile_id='10' compiler='C1' level='1' iicount='1571'/>
<call method='845' instr='invokespecial'/>
<inline_success reason='receiver is statically known'/>
<parse method='845'>
<parse_done stamp='0.369'/>
</parse>
<bc code='183' bci='13'/>
<klass id='847' name='java/lang/StringIndexOutOfBoundsException' unloaded='1'/>
<method id='848' holder='847' name='&lt;init&gt;' return='735' arguments='733' unloaded='1'/>
<call method='848' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='30'/>
<call method='848' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='183' bci='65'/>
<call method='848' instr='invokespecial'/>
<inline_fail reason='not inlineable'/>
<bc code='184' bci='75'/>
<klass id='850' name='java/util/Arrays' flags='1'/>
<method id='851' holder='850' name='copyOfRange' return='832' arguments='832 733 733' flags='9' bytes='63' iicount='428'/>
<call method='851' instr='invokestatic'/>
<inline_fail reason='callee is too large'/>
<parse_done stamp='0.385'/>
</parse>
<phase name='optimize_blocks' stamp='0.385'>
<phase_done name='optimize_blocks' stamp='0.385'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.385'>
<phase_done name='rangeCheckElimination' stamp='0.385'/>
</phase>
<phase name='optimize_null_checks' stamp='0.385'>
<phase_done name='optimize_null_checks' stamp='0.385'/>
</phase>
<phase_done name='buildIR' stamp='0.385'/>
</phase>
<phase name='emit_lir' stamp='0.385'>
<phase name='lirGeneration' stamp='0.385'>
<phase_done name='lirGeneration' stamp='0.385'/>
</phase>
<phase name='linearScan' stamp='0.385'>
<phase_done name='linearScan' stamp='0.385'/>
</phase>
<phase_done name='emit_lir' stamp='0.385'/>
</phase>
<phase name='codeemit' stamp='0.385'>
<phase_done name='codeemit' stamp='0.385'/>
</phase>
<phase name='codeinstall' stamp='0.385'>
<phase_done name='codeinstall' stamp='0.442'/>
</phase>
<code_cache total_blobs='251' nmethods='17' adapters='147' free_code_cache='248812480'/>
<task_done success='1' nmsize='1272' count='417' inlined_bytes='1' stamp='0.442'/>
</task>
<task compile_id='21' method='java/lang/String startsWith (Ljava/lang/String;I)Z' bytes='72' count='336' backedge_count='1671' iicount='336' level='3' stamp='0.605'>
<phase name='buildIR' stamp='0.606'>
<type id='727' name='boolean'/>
<klass id='741' name='java/lang/String' flags='17'/>
<type id='733' name='int'/>
<method id='843' holder='741' name='startsWith' return='727' arguments='741 733' flags='1' bytes='72' iicount='336'/>
<parse method='843'  stamp='0.606'>
<parse_done stamp='0.606'/>
</parse>
<phase name='optimize_blocks' stamp='0.606'>
<phase_done name='optimize_blocks' stamp='0.606'/>
</phase>
<phase name='rangeCheckElimination' stamp='0.606'>
<phase_done name='rangeCheckElimination' stamp='0.606'/>
</phase>
<phase name='optimize_null_checks' stamp='0.606'>
<phase_done name='optimize_null_checks' stamp='0.606'/>
</phase>
<phase_done name='buildIR' stamp='0.606'/>
</phase>
<phase name='emit_lir' stamp='0.606'>
<phase name='lirGeneration' stamp='0.606'>
<phase_done name='lirGeneration' stamp='0.606'/>
</phase>
<phase name='linearScan' stamp='0.606'>
<phase_done name='linearScan' stamp='0.606'/>
</phase>
<phase_done name='emit_lir' stamp='0.606'/>
</phase>
<phase name='codeemit' stamp='0.606'>
<phase_done name='codeemit' stamp='0.606'/>
</phase>
<phase name='codeinstall' stamp='0.606'>
<phase_done name='codeinstall' stamp='0.641'/>
</phase>
<code_cache total_blobs='258' nmethods='22' adapters='149' free_code_cache='248800192'/>
<task_done success='1' nmsize='816' count='336' backedge_count='1671' stamp='0.641'/>
</task>
</compilation_log>
<compilation_log thread='140668589541056'>
<fragment>
<![CDATA[
<start_compile_thread name='C2 CompilerThread7' thread='140668589541056' process='43523' stamp='0.038'/>
]]>
</fragment>
</compilation_log>
<compilation_log thread='140668590593728'>
<fragment>
<![CDATA[
<start_compile_thread name='C2 CompilerThread6' thread='140668590593728' process='43523' stamp='0.038'/>
]]>
</fragment>
</compilation_log>
<compilation_log thread='140668591646400'>
<fragment>
<![CDATA[
<start_compile_thread name='C2 CompilerThread5' thread='140668591646400' process='43523' stamp='0.038'/>
]]>
</fragment>
</compilation_log>
<compilation_log thread='140668592699072'>
<fragment>
<![CDATA[
<start_compile_thread name='C2 CompilerThread4' thread='140668592699072' process='43523' stamp='0.038'/>
]]>
</fragment>
</compilation_log>
<compilation_log thread='140668593751744'>
<fragment>
<![CDATA[
<start_compile_thread name='C2 CompilerThread3' thread='140668593751744' process='43523' stamp='0.038'/>
]]>
</fragment>
</compilation_log>
<compilation_log thread='140668594804416'>
<fragment>
<![CDATA[
<start_compile_thread name='C2 CompilerThread2' thread='140668594804416' process='43523' stamp='0.038'/>
]]>
</fragment>
</compilation_log>
<compilation_log thread='140668595857088'>
<fragment>
<![CDATA[
<start_compile_thread name='C2 CompilerThread1' thread='140668595857088' process='43523' stamp='0.038'/>
]]>
</fragment>
</compilation_log>
<compilation_log thread='140668596909760'>
<fragment>
<![CDATA[
<start_compile_thread name='C2 CompilerThread0' thread='140668596909760' process='43523' stamp='0.038'/>
]]>
</fragment>
</compilation_log>
<hotspot_log_done stamp='0.643'/>
</hotspot_log>
